/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Router, RouterInterface } from "../../contracts/Router";

const _abi = [
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddressString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FallbackRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "LogError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LogErrorBytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensSent",
    type: "event",
  },
  {
    inputs: [],
    name: "chain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.VaultActionData",
        name: "action",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "executeLocal",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.VaultActionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithTokenLocal",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IRouter.VaultActionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasReceiver",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_chain",
        type: "string",
      },
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrar",
    outputs: [
      {
        internalType: "contract ILocalRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasFeeAmt",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576136b3908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630423bde4146112f657508063116191b6146112cd5780631a98b2e01461116e5780632b20e397146111455780634916065814610e095780635d9c828814610cfa578063715018a614610c9c5780637e5c78b41461093a57806380d14b4a146109115780638136367b146104eb5780638da5cb5b146104c2578063c763e5a11461047f578063f2fde38b146103ec5763f34822b4146100bb57600080fd5b346103e95760803660031901126103e9576001600160401b036004358181116103e5576100ec903690600401611b04565b9091906001600160a01b039060243582811691908290036103e057604435908382168092036103e0576064359384168094036103e05786549560ff8760081c1615958680976103d3575b80156103bc575b1561036057600197878960ff198316178b5561034f575b50821161033b578190610168606654611c19565b601f81116102cb575b508890601f831160011461024c578992610241575b5050600019600383901b1c191690861b176066555b6bffffffffffffffffffffffff60a01b9283606754161760675582606854161760685560ff855460081c16906101d082611d98565b801561022f576101e7926065541617606555611d98565b6101f033611d4f565b6101f8575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff00198454168455604051908152a180f35b60405163e6c4247b60e01b8152600490fd5b013590503880610186565b60668a528893507f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435491601f1984168b5b8181106102b357508411610299575b505050811b0160665561019b565b0135600019600384901b60f8161c1916905538808061028b565b8284013585558b96909401936020928301920161027c565b909150606689527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354601f840160051c81019160208510610331575b84939291601f8b920160051c01915b828110610323575050610171565b8b81558594508a9101610315565b9091508190610306565b634e487b7160e01b88526041600452602488fd5b61ffff191661010117895538610154565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561013d5750600160ff89161461013d565b50600160ff891610610136565b600080fd5b8280fd5b80fd5b50346103e95760203660031901126103e9576004356001600160a01b0381168082036103e05761041a611cf7565b1561042b5761042890611d4f565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346103e957806003193601126103e9576104be6040516104aa816104a381611c53565b0382611a47565b604051918291602083526020830190611b54565b0390f35b50346103e957806003193601126103e9576033546040516001600160a01b039091168152602090f35b50346103e95760031960e03682011261090d576001600160401b03906004358281116109095761051f903690600401611aba565b9160243581811161090557610538903690600401611aba565b604435828111610901573660238201121561090157610561903690602481600401359101611a83565b916064359081116109015761057a903690600401611aba565b936084359360a4359560018060a01b038088168098036103e057889760c435303303610857576065546040516349ad89fb60e11b8152602060048201819052918516908281806105cd602482018b611b54565b0381855afa80156108b0578387918f8f9080926108bb575b60405163095ea7b360e01b8082526001600160a01b039098166004820152602481019290925290945091928492839182604481015b0393165af19081156108b0578d91610893575b50156108185760685460405191825285166001600160a01b031660048201526024810183905281816044818f885af1918215610888578c9261085b575b5050156108575760049060a0846067541660405193848092635c77d24760e11b82525afa91821561084c578b9261081c575b5083604081606854169301511691803b1561081857888c898d82968e968c998c6040519b8c9a8b998a9863edb6b3a560e01b8a523060048b015260248a0161012090526101248a016106ed91611b54565b838a82030160448b015261070091611b54565b828982030160648a015261071391611b54565b9087820301608488015261072691611b54565b9360a486015260c485015260e484015261010483015203925af190811561080d5789916107f9575b50506065541692833b156107f5576107a4966107c3610794948a98946107b48a966040519c8d9b8c9a8b99632d505c2160e21b8b5260a060048c015260a48b0190611b54565b90868a83030160248b0152611b54565b9084888303016044890152611b54565b91858303016064860152611b54565b90608483015203925af180156107ea576107da5750f35b6107e390611a34565b6103e95780f35b6040513d84823e3d90fd5b8780fd5b61080290611a34565b6107f557873861074e565b6040513d8b823e3d90fd5b8b80fd5b61083e91925060a03d8111610845575b6108368183611a47565b8101906120d5565b903861069c565b503d61082c565b6040513d8d823e3d90fd5b8980fd5b61087a9250803d10610881575b6108728183611a47565b810190611e9c565b388061066a565b503d610868565b6040513d8e823e3d90fd5b6108aa9150833d8511610881576108728183611a47565b3861062d565b6040513d8f823e3d90fd5b505050905081813d83116108fa575b6108d48183611a47565b810103126108f6578261061a8e8e6108ec8a95611e44565b91859493506105e5565b8c80fd5b503d6108ca565b8580fd5b8480fd5b8380fd5b5080fd5b50346103e957806003193601126103e9576068546040516001600160a01b039091168152602090f35b50346103e95760603660031901126103e9576001600160401b036004358181116103e55761096c903690600401611b04565b919060243582811161090557610986903690600401611b04565b926044359081116109015761099f903690600401611b04565b9190926109aa611fd9565b5060675460405163e5bde02960e01b8152602060048201526001600160a01b0390911696908881806109de60248201611c53565b03818b5afa90811561080d57610a096000949392610a19928c610a459c9d92610c81575b50506134d3565b6001600160a01b03163314612078565b610a21611fd9565b5060405163e5bde02960e01b81526020600482015297889283926024840191611e58565b0381895afa938415610c0557610aa4610a9f610aac93610a8f610ab398610ab89a600091610c60575b50610a7a368785611a83565b60208151910120906020815191012014612150565b6001600160a01b03933691611a83565b6134d3565b161515612150565b3691611a83565b6133a9565b6020810180516040516342b8c5e960e01b81526001600160e01b03199182166004820152909390919060a083602481845afa928315610c0557600093610c30575b50610b02611fd9565b9480835116906040516326fcc45760e11b928382526004820152602081602481875afa908115610c0557600091610c11575b506004811015610bbe57600114938415610b74575b6104be610b6088888b610b5b8a611ecc565b612c08565b604051918291602083526020830190611b79565b5160405192835216600482015293929150602090849060249082905afa928315610c0557600093610bd4575b506004831015610bbe57909160021483610b5b610b606104be610b49565b634e487b7160e01b600052602160045260246000fd5b610bf791935060203d602011610bfe575b610bef8183611a47565b810190611eb4565b9138610ba0565b503d610be5565b6040513d6000823e3d90fd5b610c2a915060203d602011610bfe57610bef8183611a47565b38610b34565b610c5291935060a03d8111610c59575b610c4a8183611a47565b810190611f5b565b9138610af9565b503d610c40565b610c7b913d8091833e610c738183611a47565b810190612053565b38610a6e565b610c9592503d8091833e610c738183611a47565b3880610a02565b50346103e957806003193601126103e957610cb5611cf7565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103e95760a03660031901126103e9576001600160401b036004358181116103e557610d2c903690600401611b04565b60249291923582811161090557610d47903690600401611b04565b9092604435818111610e0557610d61903690600401611b04565b9290916064359081116107f557610d7c903690600401611b04565b959094610d87611fd9565b5060675460405163e5bde02960e01b8152602060048201526001600160a01b03918b90829084168180610dbc60248201611c53565b03915afa90811561084c5791610dec610df492610b609c9b9a9998979695948e6104be9f92610c815750506134d3565b163314612078565b60843597610e00611fd9565b612190565b8680fd5b50346103e957600319906080368301126103e95760246001600160401b03813581811161090957610e3e903690600401611b04565b9160443581811161090157610e57903690600401611b04565b9091606435908111610e0557610e71903690600401611b04565b9091610e7e368385611a83565b98818a519a8760209c8d80930120938a8d8d600160a01b60019003978c896065541695604051998a9889978896635f6970c360e01b885260043560048901528701608090526084870190610ed192611e58565b91858303016044860152610ee492611e58565b90606483015203925af190811561113a578a9161111d575b501561110b57610f0a611fd9565b5060008160675416978b610f37604051998a93849363e5bde02960e01b855260048501528d840191611e58565b03818a5afa8015610c0557610a9f610ab396610aac94610aac8e610aa495610f7f9c6000916110f2575b50610f6d368587611a83565b82815191012091815191012014612150565b918483019463ffffffff60e01b918287511693604051946342b8c5e960e01b8652600486015260a0858381845afa948515610c05576000956110d2575b50610fc5611fd9565b9380895116906040516326fcc45760e11b92838252600482015285818681875afa908115610c05576000916110b5575b5060048110156110a057600114998a1561101f575b508861101b898989610b5b8f611ecc565b5080f35b859a509084959394915116916040519485938492835260048301525afa968715610c0557600097611081575b5050600486101561106d5750610b5b600261101b95961495943880808061100a565b634e487b7160e01b60009081526021600452fd5b611098929750803d10610bfe57610bef8183611a47565b94388061104b565b84634e487b7160e01b60005260216004526000fd5b6110cc9150863d8811610bfe57610bef8183611a47565b38610ff5565b6110eb91955060a03d8111610c5957610c4a8183611a47565b9338610fbc565b611105913d8091833e610c738183611a47565b38610f61565b604051631403112d60e21b8152600490fd5b61113491508b3d8d11610881576108728183611a47565b38610efc565b6040513d8c823e3d90fd5b50346103e957806003193601126103e9576067546040516001600160a01b039091168152602090f35b50346103e95760031960c03682011261090d576001600160401b0390602435828111610909576111a2903690600401611b04565b929091604435828111610901576111bd903690600401611b04565b90926064358181116107f5576111d7903690600401611b04565b9290916084359081116112c9576111f2903690600401611b04565b959094611200368686611a83565b8051602090910120606554604051631876eed960e01b8152600480359082015260c06024820152926001600160a01b0390911691839182919061124760c484018f8f611e58565b8184820301604485015261125c908989611e58565b916064840152828203016084830152611276908b8b611e58565b60a43560a483015203818d5a94602095f190811561113a578a916112ab575b501561110b5761101b9760a43597610e00611fd9565b6112c3915060203d8111610881576108728183611a47565b38611295565b8880fd5b50346103e957806003193601126103e9576065546040516001600160a01b039091168152602090f35b82346103e9576003199160603684011261090d57600435926001600160401b03908185116109095760e09085360301126103e55761133382611a03565b83600401358181116109095761134f9060043691870101611aba565b825261135d60248501611ad8565b602083015261136e60448501611ad8565b604083019081526064850135828111610905578501913660238401121561090557600483013561139d81611aed565b936113ab6040519586611a47565b8185526024602086019260051b820101903682116107f557602401915b8183106119e6575050506060840183905260848601356001600160a01b038116810361090157608085015260c460a085019660a48101358852013560c085015260243590811161090557611420903690600401611b04565b919092303303610901576001611437915114611df8565b516001600160e01b03191663df2326f560e01b016119a1576065546040516349ad89fb60e11b81526020600482018190529093909284926001600160a01b0316918391829161148a916024840191611e58565b03915afa9081156117c9578391611967575b5060808201516001600160a01b0391821691168103611931576114c560c0830151855190611e79565b604435036118fa578351158015906118ed575b156118a8576067546040516302b05ecb60e11b815260048101929092526001600160a01b031690602081602481855afa9081156116c6578491611889575b501561184f576020828101516040516326fcc45760e11b81526001600160e01b031990911660048201529081602481855afa9081156116c6578491611830575b50600481101561181c57600161156c9114611ecc565b60a063ffffffff60e01b6020840151166024604051809481936342b8c5e960e01b835260048301525afa9081156117c95783916117fe575b508351806116d1575b5082935060c0820151806115c057505050f35b608083015160409283018051602090810151945163a9059cbb60e01b81526001600160a01b039586166004820152602481019490945290939091839160449183918991165af19081156116c65784916116a7575b50156116a357602060018060a01b03915101511663ffffffff61163a6060840151611fb6565b51169060c060018060a01b0360808501511693015190803b15610905576040516320dcd90b60e01b815263ffffffff90931660048401526001600160a01b039093166024830152604482015290829082908183816064810103925af180156107ea576107da5750f35b5050fd5b6116c0915060203d602011610881576108728183611a47565b85611614565b6040513d86823e3d90fd5b60808301516020838101805182015160405163a9059cbb60e01b81526001600160a01b0391821660048201526024810195909552909392839160449183918a91165af19081156117f35785916117d4575b501561090957602060018060a01b03915101511663ffffffff6117486060850151611fb6565b5160808501519651966001600160a01b03169116823b15610901576040516320dcd90b60e01b815263ffffffff90911660048201526001600160a01b0390911660248201526044810195909552839085908183816064810103925af180156117c9576117b5575b836115ad565b9190926117c190611a34565b9082906117af565b6040513d85823e3d90fd5b6117ed915060203d602011610881576108728183611a47565b86611722565b6040513d87823e3d90fd5b611816915060a03d8111610c5957610c4a8183611a47565b846115a4565b634e487b7160e01b84526021600452602484fd5b611849915060203d602011610bfe57610bef8183611a47565b85611556565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b881b9bdd081858d8d95c1d195960721b6044820152606490fd5b6118a2915060203d602011610881576108728183611a47565b85611516565b60405162461bcd60e51b815260206004820152601a60248201527f4e6f207661756c74206465706f736974207370656369666965640000000000006044820152606490fd5b5060c082015115156114d8565b60405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840dad2e6dac2e8c6d608b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606490fd5b90506020813d602011611999575b8161198260209383611a47565b810103126103e55761199390611e44565b8461149c565b3d9150611975565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79206465706f736974206163636570747320746f6b656e7300000000006044820152606490fd5b823563ffffffff811681036112c9578152602092830192016113c8565b60e081019081106001600160401b03821117611a1e57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611a1e57604052565b90601f801991011681019081106001600160401b03821117611a1e57604052565b6001600160401b038111611a1e57601f01601f191660200190565b929192611a8f82611a68565b91611a9d6040519384611a47565b8294818452818301116103e0578281602093846000960137010152565b9080601f830112156103e057816020611ad593359101611a83565b90565b35906001600160e01b0319821682036103e057565b6001600160401b038111611a1e5760051b60200190565b9181601f840112156103e0578235916001600160401b0383116103e057602083818601950101116103e057565b60005b838110611b445750506000910152565b8181015183820152602001611b34565b90602091611b6d81518092818552858086019101611b31565b601f01601f1916010190565b90611b8d825160e0835260e0830190611b54565b9163ffffffff60e01b602090808284015116828501526040830151166040840152606082015193838103606085015281808651928381520195019160005b828110611bff575050506080808301516001600160a01b0316908401525060a0808201519083015260c09081015191015290565b835163ffffffff1687529581019592810192600101611bcb565b90600182811c92168015611c49575b6020831014611c3357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c28565b60665460009291611c6382611c19565b80825291600190818116908115611cda5750600114611c8157505050565b9192935060666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354916000925b848410611cc257505060209250010190565b80546020858501810191909152909301928101611cb0565b915050602093945060ff929192191683830152151560051b010190565b6033546001600160a01b03163303611d0b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611d9f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b15611dff57565b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c79206f6e65206163636f756e7420616c6c6f77656400000000000000006044820152606490fd5b51906001600160a01b03821682036103e057565b908060209392818452848401376000828201840152601f01601f1916010190565b91908201809211611e8657565b634e487b7160e01b600052601160045260246000fd5b908160209103126103e0575180151581036103e05790565b908160209103126103e0575160048110156103e05790565b15611ed357565b60405162461bcd60e51b815260206004820152601560248201527414dd1c985d1959de481b9bdd08185c1c1c9bdd9959605a1b6044820152606490fd5b91908260409103126103e057604051604081018181106001600160401b03821117611a1e57604052809280519060028210156103e0576020611f56918193855201611e44565b910152565b60a0818303126103e05760405191606083018381106001600160401b03821117611a1e57604052815160048110156103e057611fae926060918552611fa38360208301611f10565b602086015201611f10565b604082015290565b805115611fc35760200190565b634e487b7160e01b600052603260045260246000fd5b60405190611fe682611a03565b600060c083606081528260208201528260408201526060808201528260808201528260a08201520152565b81601f820112156103e057805161202781611a68565b926120356040519485611a47565b818452602082840101116103e057611ad59160208085019101611b31565b906020828203126103e05781516001600160401b0381116103e057611ad59201612011565b1561207f57565b60405162461bcd60e51b815260206004820152601760248201527f556e617574686f72697a6564206c6f63616c2063616c6c0000000000000000006044820152606490fd5b519063ffffffff821682036103e057565b908160a09103126103e0576040519060a082018281106001600160401b03821117611a1e576121489160809160405261210d816120c4565b845261211b602082016120c4565b602085015261212c60408201611e44565b604085015261213d60608201611e44565b606085015201611e44565b608082015290565b1561215757565b60405162461bcd60e51b8152602060048201526011602482015270155b985d5d1a1bdc9a5e99590810d85b1b607a1b6044820152606490fd5b60675460405163e5bde02960e01b815260206004820152949a9998979695919491936001600160a01b0393600092849290861691839182916121d6916024840191611e58565b03915afa8015610c0557611ad59a61220794610aac610a9f93610aa49560009161220c575b50610a7a368486611a83565b612306565b61221f913d8091833e610c738183611a47565b386121fb565b60009060033d1161223257565b905060046000803e60005160e01c90565b600060443d10611ad557604051600319913d83016004833e81516001600160401b03918282113d6024840111176122a0578184019485519384116122a8573d850101602084870101116122a05750611ad592910160200190611a47565b949350505050565b50949350505050565b90916122c8611ad593604084526040840190611b79565b916020818403910152611b54565b3d15612301573d906122e782611a68565b916122f56040519384611a47565b82523d6000602084013e565b606090565b61231991610ab391979695933691611a83565b91303b156103e05760405191630108ef7960e21b8352828061235f60009485946060600485015261234d606485018a611b79565b84810360031901602486015291611e58565b876044830152038183305af1918261246f575b509061242e57600190612383612225565b6308c379a0146123de575b50612397575050565b611ad59293507f566d56bcb1ec9b3226e7634aedefcdb789822a3419f3e27d295d4b0fc3f60e516123d66123c96122d6565b60405191829185836122b1565b0390a161247e565b6123e6612243565b90816123f2575061238e565b611ad59596507f7da351ee12f4c5f6e657f3b6b301dd44d8e49ec816a99ec389aee3fad9ea61b99250906123d6915060405191829185836122b1565b50919250507f3b99b43a0aa68343105cfe5dcff7440d9ff7a448ef9dbe61a4e351004061c7ed60405160208152806124696020820185611b79565b0390a190565b61247890611a34565b38612372565b919091612489611fd9565b50805192600093602081519101206040516124a7816104a381611c53565b60208151910120146000146125f9576124be611fd9565b506124f560018060a01b03858160675416855190604051808096819463e5bde02960e01b8352602060048401526024830190611b54565b03915afa9182156125ee5761255892602092859289926125ce575b5061252190608088015116916134d3565b60405163a9059cbb60e01b81526001600160a01b039091166004820152602481019290925290928391908290899082906044820190565b03925af180156117f3577fc3c4bcd0d41d9e5d593b014e43d57d484dface98ab8cfee6483a1a9c36539fed939495506125af575b506040518091604082526125a36040830186611b79565b9060208301520390a190565b6125c79060203d602011610881576108728183611a47565b503861258c565b6125219192506125e7903d808c833e610c738183611a47565b9190612510565b6040513d88823e3d90fd5b612601611fd9565b50606754604051635c77d24760e11b8152906001600160a01b031660a082600481845afa9182156125ee578692612bdb575b506080840151604051632bf512f360e21b81526001600160a01b039091166004820152602081602481855afa908115612aa5578791612ba9575b5080841115612b64576126808185612bfb565b9160c086018051620f42409081810290808204831490151715612b3c578715612b5057879004808502908582041485151715612b3c57888b93612738936127729304906126d86126d0838a612bfb565b928251612bfb565b81526126e960a08401928351612bfb565b80925282519163ffffffff60e01b90612756826020870151169260408701511692606087015196608060018060a01b0391015116945193604051998a9760e060208a0152610100890190611b54565b9160408801526060870152601f19968787830301608088015261335a565b9260a085015260c084015260e083015203908101835282611a47565b87519082604051809563e5bde02960e01b825260206004830152818061279b6024820188611b54565b03915afa9384156117c9578394612b1d575b5060808901516040516395d89b4160e01b81529495939493908590859060049082906001600160a01b03165afa9384156117f3578594612b01575b5060808a01516001600160a01b031691303b1561090157604051638136367b60e01b815260e0600482015296879586956128649361285591612845906128329060e48b0190611b54565b60031995868b83030160248c0152611b54565b90848983030160448a0152611b54565b91868303016064870152611b54565b9187608485015260a484015260c4830152038183305af19081612aee575b50612ab057506001612892612225565b6308c379a0146129ab575b6128a9575b5090925050565b60208261292f927f566d56bcb1ec9b3226e7634aedefcdb789822a3419f3e27d295d4b0fc3f60e516128e96128dc6122d6565b6040519182918a836122b1565b0390a160808681015191015160405163a9059cbb60e01b81526001600160a01b039182166004820152602481019390935291938492909116908290899082906044820190565b03925af180156117f3577f3eec2dad5936cf66d12659548c6140790a0da0d978cc0cdc602b9631d90d12029394955061298c575b5060405180916040825261297a6040830186611b79565b9060208301520390a1819038806128a2565b6129a49060203d602011610881576108728183611a47565b5038612963565b6129b3612243565b806129bf575b5061289d565b90507f7da351ee12f4c5f6e657f3b6b301dd44d8e49ec816a99ec389aee3fad9ea61b96129f4879260405191829188836122b1565b0390a16080848101519083015160405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291602091839160449183918c91165af18015612aa557612a86575b507f3eec2dad5936cf66d12659548c6140790a0da0d978cc0cdc602b9631d90d12026040516040815280612a776040820188611b79565b8660208301520390a1386129b9565b612a9e9060203d602011610881576108728183611a47565b5038612a40565b6040513d89823e3d90fd5b9150507fc3c4bcd0d41d9e5d593b014e43d57d484dface98ab8cfee6483a1a9c36539fed919293506040518091604082526125a36040830186611b79565b612afa90979197611a34565b9538612882565b612b169194503d8087833e610c738183611a47565b92386127e8565b6004939450612b35903d8087833e610c738183611a47565b93926127ad565b634e487b7160e01b8b52601160045260248bfd5b634e487b7160e01b8b52601260045260248bfd5b60405162461bcd60e51b815260206004820152601e60248201527f53656e6420616d6f756e7420646f6573206e6f7420636f7665722067617300006044820152606490fd5b90506020813d602011612bd3575b81612bc460209383611a47565b81010312610e0557513861266d565b3d9150612bb7565b612bf491925060a03d8111610845576108368183611a47565b9038612633565b91908203918211611e8657565b5060408201519091906000906001600160e01b0319166326e11bb960e11b8103612f13575090612cce91612c3a611fd9565b50612c4c600160608401515114611df8565b602084810151810151604086015182015160608501516001600160a01b039182169793929091169063ffffffff90612c8390611fb6565b51608087015160a08801516040516326e11bb960e11b81529390921663ffffffff1660048401526001600160a01b031660248301526044820152958691908290869082906064820190565b03925af19384156107ea578294612edf575b5060808301516020828101518101516040516323b872dd60e01b8082526001600160a01b0392831660048301523060248301526044820189905293909291839160649183918991165af19081156116c6578491612ec0575b50156103e55790612dab9291602063ffffffff612d586060880151611fb6565b51608088015160c0890180516040516326e11bb960e11b81529490931663ffffffff1660048501526001600160a01b03909116602484015260448301919091529890958691908290879082906064820190565b03925af19384156117c9578394612e89575b50608085015160409283015160209081015193519283526001600160a01b039384166004840152306024840152604483018690529192839160649183918791165af19081156107ea578291612e6a575b50156103e9575091612e539183612e457f58589d45f2c000395bc52ca543911061b55c2ebab3c83e87dba19cd22e52c6ba9584611e79565b95869360a08401525261247e565b916040518091604082526125a36040830186611b79565b612e83915060203d602011610881576108728183611a47565b38612e0d565b909193506020813d602011612eb8575b81612ea660209383611a47565b810103126103e0575192906020612dbd565b3d9150612e99565b612ed9915060203d602011610881576108728183611a47565b38612d38565b9093506020813d602011612f0b575b81612efb60209383611a47565b810103126103e057519238612ce0565b3d9150612eee565b919290916361761df360e11b91908281036131f55750612f31611fd9565b50612f43600160608601515114611df8565b6020810160018060a01b03602082510151169260018060a01b03602060408501510151169185809560a089019081516130f2575b50509050508460c08701918251612fc3575b5050505050612fbc7f58589d45f2c000395bc52ca543911061b55c2ebab3c83e87dba19cd22e52c6ba92612e5392611e79565b809361247e565b6020919293949650602463ffffffff612fdf60608b0151611fb6565b511691846040519788948593845260048401525af19283156130e55781936130b1575b50608086015160409586015160209081015196516323b872dd60e01b81526001600160a01b039788166004820152306024820152604481018690529496879592839160649183918791165af19081156107ea578291613092575b50156103e9575052612fbc82612e537f58589d45f2c000395bc52ca543911061b55c2ebab3c83e87dba19cd22e52c6ba38612f89565b6130ab915060203d602011610881576108728183611a47565b3861305c565b9092506020813d6020116130dd575b816130cd60209383611a47565b810103126103e057519138613002565b3d91506130c0565b50604051903d90823e3d90fd5b60209192939750602463ffffffff61310d60608d0151611fb6565b5116604051958693849289845260048401525af1918215612aa55787926131c1575b50608088015195516020908101516040516323b872dd60e01b81526001600160a01b03918216600482015230602482015260448101859052939788949291839160649183918d91165af19081156131b6578891613197575b5015610e05575238858180612f77565b6131b0915060203d602011610881576108728183611a47565b38613187565b6040513d8a823e3d90fd5b9091506020813d6020116131ed575b816131dd60209383611a47565b810103126103e05751903861312f565b3d91506131d0565b909291506388bb447b60e01b90810361330a57613210611fd9565b5060018060a01b03926020938480828160408601510151169301510151169060608601908151813b1561090157613260869283926040519485809481938b83528d6004840152602483019061335a565b03925af180156117f3576132f7575b505191813b156109095791839161329c938360405180968195829483528a6004840152602483019061335a565b03925af180156107ea576132e3575b50506124697f999b68bed196a76d206811771e30b1ded65d9d1e6b29ba77765e64716680f5a791604051918183928352820185611b79565b6132ed8291611a34565b6103e957806132ab565b61330390949194611a34565b923861326f565b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642066756e6374696f6e2073656c6563746f722070726f766964604482015261195960f21b6064820152608490fd5b90815180825260208080930193019160005b82811061337a575050505090565b835163ffffffff168552938101939281019260010161336c565b51906001600160e01b0319821682036103e057565b6133b1611fd9565b50805181019060209060e0818385019403126103e057818101516001600160401b03908181116103e05784846133e992850101612011565b9360406133f7818501613394565b61340360608601613394565b9360808601519081116103e05785019280603f850112156103e0578684015161342b81611aed565b9461343885519687611a47565b818652848987019260051b8201019283116103e05784899101915b8383106134bb575050505060a08501516001600160a01b03811694908590036103e05760e060c08701519601519683519861348d8a611a03565b89526001600160e01b03199283169089015216908601526060850152608084015260a083015260c082015290565b81906134c6846120c4565b8152019101908890613453565b600080918051602a9283821491821592613658575b50811561361b575b506135e85790600280925b828410613511575050505060018060a01b031690565b909192938151851015611fc3576020858301015160f81c606181101580613610575b1561357e5760ff90811660561901908111611e86575b6029868103908111611e865760ff9190911690841b1b6001600160a01b031617936000198114611e86576001019291906134fb565b604181101580613605575b156135b55760ff908116603619019081111561354957634e487b7160e01b600052601160045260246000fd5b6030811015806135fa575b156135e857602f190160ff81111561354957634e487b7160e01b600052601160045260246000fd5b604051636fa478cf60e11b8152600490fd5b5060398111156135c0565b506046811115613589565b506066811115613533565b9050815160011015613644575060218101516001600160f81b031916600f60fb1b1415386134f0565b634e487b7160e01b81526032600452602490fd5b909150156136445760208201516001600160f81b031916600360fc1b141590386134e856fea2646970667358221220cdd7b90e7cce50c62e96e41bc43513d81c801152d73d1b489da3d7d4cb09f19364736f6c63430008120033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(overrides || {}) as Promise<Router>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
