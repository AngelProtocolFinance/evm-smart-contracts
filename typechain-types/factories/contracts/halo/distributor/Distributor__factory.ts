/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Distributor,
  DistributorInterface,
} from "../../../../contracts/halo/distributor/Distributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "whitelist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DistributorStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DistributorConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DistributorSpend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "addDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "whitelist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DistributorMessage.InstantiateMsg",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "timelockContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "whitelist",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DistributorMessage.ConfigResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "removeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spendLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "timelockContract",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555610db390816100218239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816307a582d814610a6c57816357c1f9e2146107be5781637250e224146106c75781637fdef99b14610352578163af7d6ca314610148575063e68f909d1461006557600080fd5b3461014457816003193601126101445780519161008183610b28565b8083528060606020948286820152818582015201526001600160a01b039081815416906003549160019584875416958051926100bc84610b28565b83528183019687528051906100db826100d481610b7c565b0383610b5a565b8084019182526060840195865286815198848a528160a08b01965116858b015251169088015251946080606088015285518093528160c08801960193905b83821061012d578551608089015287870388f35b845181168752958201959382019390880190610119565b5080fd5b83915034610144578260031936011261014457610163610af9565b6024359161016f610c6b565b610199610192865161018b8161018481610b7c565b0382610b5a565b3390610d32565b9050610c20565b82600354106102e9576001600160a01b03600154166020865180927fa9059cbb0000000000000000000000000000000000000000000000000000000082528188816101fd8a8a8a8401602090939291936001600160a01b0360408201951681520152565b03925af19081156102df5785916102a1575b501561025e575092516001600160a01b0390931683526020830152907fca7f6eda9cf4c1209102c94299b47792caaf948d83dcbbc0856df43e47992b1a9080604081015b0390a1600160055580f35b606490602086519162461bcd60e51b8352820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b90506020813d82116102d7575b816102bb60209383610b5a565b810103126102d3575180151581036102d3578661020f565b8480fd5b3d91506102ae565b86513d87823e3d90fd5b608490602086519162461bcd60e51b8352820152602260248201527f43616e6e6f74207370656e64206d6f7265207468616e207370656e64206c696d60448201527f69740000000000000000000000000000000000000000000000000000000000006064820152fd5b919050346106c3576020906003199082823601126102d357833567ffffffffffffffff928382116106bf5760809082360301126106bb57815161039481610b28565b61039f828701610b14565b81526024936103af858401610b14565b9186810192835260448401358281116106b757840193366023860112156106b75788850135948386116106a5578560051b8751966103ef8b830189610b5a565b8752888a880191830101913683116106a157898b9101915b8383106106895750505050858201948552606460608301910135815288549660ff8860081c16159586809761067c575b8015610665575b156105fe57600198878a60ff198316178d556105ed575b508b6001600160a01b038080965116925194519751169160608c848c519161047c83610b28565b848352820152868c8201520197885273ffffffffffffffffffffffffffffffffffffffff1980925416178d5589541617885581519384116105dc576801000000000000000084116105dc5750879060025484600255808510610597575b50019060028a52868a5b848110610563575050505050516003557f78534274a26293e260ae5312c7573855f17de453a947ba2317ea7b7f55b3baad82518061052081610be2565b0390a161052b578480f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989361ff0019815416905551908152a1388080808480f35b8983855116940193817f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01550187906104e3565b88857f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace92830192015b8281106105ce5750506104d9565b8d81558b94508a91016105c0565b8a60418b634e487b7160e01b835252fd5b61ffff1916610101178b5538610455565b60848b602e848d8c519362461bcd60e51b85528401528201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b15801561043e5750600160ff8a161461043e565b50600160ff8a1610610437565b819061069484610b14565b8152019101908a90610407565b8c80fd5b878b60418c634e487b7160e01b835252fd5b8980fd5b8580fd5b8680fd5b8280fd5b838334610144576020366003190112610144576106e2610af9565b906106eb610c6b565b6001600160a01b0390610702828554163314610c20565b61071a8382516107158161018481610b7c565b610d32565b90501561072b575b83600160055580f35b600254680100000000000000008110156107ab577fddbf200aa634dc3fb81cfd68583dd1040d1c751d335e1d86b631bde3e977fea89495509061079c8461077c846001602098979601600255610cc0565b90919082549060031b916001600160a01b03809116831b921b1916179055565b5191168152a180828080610722565b602485604188634e487b7160e01b835252fd5b919050346106c357602080600319360112610a68576107db610af9565b916107e4610c6b565b6001600160a01b03916107fb838754163314610c20565b61080e8483516107158161018481610b7c565b94909461081f575b86600160055580f35b60029693949596958654811015610a26575b8654600019810190811161089d578110156108b0576001810180821161089d579061089361086161089893610cc0565b90548961086d85610cc0565b92909360031b1c169082549060031b916001600160a01b03809116831b921b1916179055565b610d0d565b610831565b60248660118b634e487b7160e01b835252fd5b509294959093919580548015610a13576000198101906108cf82610cc0565b8682549160031b1b191690558183558851916108f5836108ee81610b7c565b0384610b5a565b82519467ffffffffffffffff8611610a0057680100000000000000008611610a00575090879291858555851061099f575b5001908652855b82811061096b575050507f126174f6cf49c81cdb4a9214c6b8f037bef55b4ec31e4fc776cea2a1c8a88d5993945191168152a1388080808080610816565b815184167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8201559085019060010161092d565b7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acd01847f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015b8181106109f25750610926565b8981558893506001016109e5565b896041602492634e487b7160e01b835252fd5b602487603185634e487b7160e01b835252fd5b6064888486519162461bcd60e51b8352820152601960248201527f4572726f7220696e2072656d6f76653a20696e7465726e616c000000000000006044820152fd5b8380fd5b919050346106c357806003193601126106c357602435916001600160a01b03928381168091036102d35773ffffffffffffffffffffffffffffffffffffffff197f78534274a26293e260ae5312c7573855f17de453a947ba2317ea7b7f55b3baad94610ad6610c6b565b610ae68754913390831614610c20565b1617845535600355518061025381610be2565b600435906001600160a01b0382168203610b0f57565b600080fd5b35906001600160a01b0382168203610b0f57565b6080810190811067ffffffffffffffff821117610b4457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b4457604052565b6002549081815260208091019160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace916000905b828210610bc2575050505090565b83546001600160a01b031685529384019360019384019390910190610bb4565b602081526001600160a01b038060005416602083015260015416604082015260806060820152610c1460a08201610b7c565b90608060035491015290565b15610c2757565b606460405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152fd5b600260055414610c7c576002600555565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b600254811015610cf75760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b6000198114610d1c5760010190565b634e487b7160e01b600052601160045260246000fd5b9060005b8251811015610d72576001600160a01b038060208360051b860101511690831614610d6957610d6490610d0d565b610d36565b91505090600190565b50505060009060009056fea26469706673582212208bb9cef6a9f1a7182ffb88bb54788b0366252624abf0cc8fcabcf40a392d138664736f6c63430008120033";

type DistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Distributor__factory extends ContractFactory {
  constructor(...args: DistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Distributor> {
    return super.deploy(overrides || {}) as Promise<Distributor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  override connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
