/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LocalRegistrar,
  LocalRegistrarInterface,
} from "../../../../contracts/core/registrar/LocalRegistrar";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "chainName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "accountsContractAddress",
        type: "string",
      },
    ],
    name: "AccountsContractStorageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct LocalRegistrarLib.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.FeeTypes",
        name: "_fee",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_payout",
        type: "address",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct LocalRegistrarLib.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "enum LocalRegistrarLib.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum LocalRegistrarLib.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_targetChain",
        type: "string",
      },
    ],
    name: "getAccountsContractAddressByChain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        internalType: "struct LocalRegistrarLib.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum AngelCoreStruct.FeeTypes",
        name: "_feeType",
        type: "uint8",
      },
    ],
    name: "getFeeByFees",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payoutAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeRate",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.FeeSetting",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct LocalRegistrarLib.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyApprovalState",
    outputs: [
      {
        internalType: "enum LocalRegistrarLib.StrategyApprovalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "enum LocalRegistrarLib.StrategyApprovalState",
            name: "approvalState",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct LocalRegistrarLib.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct LocalRegistrarLib.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct LocalRegistrarLib.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_chainName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_accountsContractAddress",
        type: "string",
      },
    ],
    name: "setAccountsContractAddressByChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        internalType: "struct LocalRegistrarLib.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum AngelCoreStruct.FeeTypes",
        name: "feeType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "payout",
        type: "address",
      },
    ],
    name: "setFeeSettingsByFeesType",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payoutAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeRate",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.FeeSetting",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct LocalRegistrarLib.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "enum LocalRegistrarLib.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "setStrategyApprovalState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "enum LocalRegistrarLib.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821610610034575b60405161185490816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630560bd96146113dd5780630dcfe5fa1461136957806327e57db91461126e578063296b5cc8146110bb5780632e36091414610f6e57806342b8c5e914610e8a5780634349597a14610ddf5780634df988ae14610d915780636f2da65714610cfc578063715018a614610c9f57806372b1df2914610c665780637d25177614610af15780638129fc1c146108825780638da5cb5b14610859578063afd44bcc146107f7578063b8efa48e146106ea578063bb39200214610660578063c14924391461046b578063d06cecfe146103e8578063e5bde02914610294578063edbcc599146101a75763f2fde38b1461011357600080fd5b346101a35760203660031901126101a35761012c611444565b91610135611500565b6001600160a01b03831615610151578361014e84611558565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461029057816003193601126102905760c09160a082516101c98161166b565b8281528260208201528284820152826060820152826080820152015280516101f08161166b565b7fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df223028545460ff8116151592838352602083019263ffffffff938492838560081c16825283818401818760281c16815281606086019460ff8960481c16151586528160a06080890198828c60501c168a52019960701c16895284519a8b52511660208a0152511690870152511515606086015251166080840152511660a0820152f35b5080fd5b5091346103e5576020928360031936011261029057803567ffffffffffffffff81116101a3576102d1916102ca913691016114d2565b36916116c5565b83815191012081527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df223028588352818120908383518093839080546103128161170c565b808552916001918083169081156103c25750600114610385575b50505061033f92509593929503826116a3565b82519382859384528251928382860152825b84811061036f57505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610351565b86528486209492508591905b8183106103aa57508894505082010161033f388061032c565b85548884018501529485019487945091830191610391565b9250505061033f94925060ff191682840152151560051b8201018692388061032c565b80fd5b50346101a35760203660031901126101a3573560068110156101a35761042390610467936020845161041981611633565b8281520152611788565b90600181519261043284611633565b818060a01b038154168452015460208301525191829182919091602080604083019460018060a01b0381511684520151910152565b0390f35b5091903461029057806003193601126102905767ffffffffffffffff833581811161065c5761049d90369086016114d2565b602492919235828111610658576104b790369088016114d2565b9390926104c2611500565b6104cd3684846116c5565b9788516020809a012088527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285889528688209186116106455750610510815461170c565b601f8111610602575b5086601f861160011461059d57879850948096979581959691610592575b508460011b906000198660031b1c19161790555b81865192839283378101878152039020935192839283378101848152039020907fbe341763477f316002d91bd656ce6600451213c169ee5883903f4f60426ff6df8380a380f35b905085013538610537565b81885288882090601f198716895b8181106105eb57508798999a5096809697106105d1575b5050600184811b01905561054b565b860135600019600387901b60f8161c1916905538806105c2565b91928b60018192868b0135815501940192016105ab565b818852888820601f870160051c8101918a881061063b575b601f0160051c01905b8181106106305750610519565b888155600101610623565b909150819061061a565b634e487b7160e01b885260419052602487fd5b8580fd5b8380fd5b50346101a357816003193601126101a357610679611475565b6024359182101561065c577fc29dfab8aee1ae5a857c884f518353e5f8a0d8e0649c8708f6b21bc92f4209ca916106e66020926106b4611500565b63ffffffff60e01b16948587526000805160206117ff83398151915284526106de838289206117e6565b51809261148c565ba280f35b50503461029057816003193601126102905760a0916080825161070c81611687565b82815282602082015282848201528260608201520152805161072d81611687565b7fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302855549063ffffffff808316938483526020830190828560201c16825280840194600180891b03958694858093851c168252827fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302856541694606088019586526080847fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302857541698019788528451998a52511660208901525116908601525116606084015251166080820152f35b50503461029057602036600319011261029057602090610851610818611444565b6001600160a01b031660009081527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285b6020526040902090565b549051908152f35b50503461029057816003193601126102905760335490516001600160a01b039091168152602090f35b50346101a357826003193601126101a357825460ff8160081c161591828093610ae4575b8015610acd575b15610a73575060ff198116600117845581610a62575b506108e660ff845460081c166108d8816115a1565b6108e1816115a1565b6115a1565b6108ef33611558565b82549061090160ff8360081c166115a1565b606460a084516109108161166b565b868152604b602082015260148682015286606082015286608082015201527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df223028546e640000000000000000140000004b006001600160901b0319825416179055836080845161097c81611687565b6002815260646020820152828682015282606082015201527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285564640000000263ffffffff60e01b8254161790556001600160601b0360a01b7fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df223028568181541690557fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302857908154169055610a2a578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff1916610101178355386108c3565b608490602085519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156108ad5750600160ff8316146108ad565b50600160ff8316106108a6565b50346101a35760a03660031901126101a357610b0b611500565b359063ffffffff9182811680910361065c577fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302855805490610b496117c0565b6001600160a01b0392906044358481168103610c62578567ffffffff000000009168010000000000000000600160e01b0390891b169363ffffffff60e01b16179160201b1617179055606435818116809103610658576001600160601b0360a01b937fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302856828682541617905560843592808416809403610c5e577f386dbf58efc832f07658bc89d0b1552d3a11a7cc20e3953cf7bd8796ccc1f8969660a096857fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302857918254161790558251958652610c3d6117d3565b166020860152610c4b61145f565b169084015260608301526080820152a180f35b8780fd5b8880fd5b83823461029057602036600319011261029057357f9adeaf5f56ed44c39532f4e17724750ace61a4efefd70bdb78bd8d52f859eedb5580f35b83346103e557806003193601126103e557610cb8611500565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102905780600319360112610290577f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d7336020610d39611444565b60243593610d45611500565b6001600160a01b03821660009081527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285b60205260409020859055519384526001600160a01b031692a280f35b50503461029057602036600319011261029057610ddd60ff8260209463ffffffff60e01b610dbd611475565b1681526000805160206117ff83398151915286522054169151809261148c565bf35b505034610290578060031936011261029057610df9611444565b6024359182151580930361065c577f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d91602091610e34611500565b6001600160a01b03821660009081527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285a60205260409020805460ff191660ff8716179055519384526001600160a01b031692a280f35b50503461029057602090816003193601126101a35780610f63610ddd9260a095610eb2611475565b8251610ebd8161164f565b8281528351610ecb81611633565b83815283898201528882015283805191610ee483611633565b84835289830185905201526001600160e01b03191681526000805160206117ff83398151915286522082519490610f1a8661164f565b610f2860ff82541687611746565b610f59610f496002610f3c60018501611752565b93858a0194855201611752565b948088019586525180975161148c565b51908501906114af565b5160608301906114af565b50346101a35760c03660031901126101a357610f88611500565b35908115158092036101a3577fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df223028549182549164ffffffff00610fc76117c0565b60081b16926044359163ffffffff9081841690818503610c6257606435928315158094036110b75760843598818a1695868b036110b35760a4359a838c1698898d036110af5768ffffffff000000000060c09c8c947f9ba2671e8e8451ccaa99b5ba3b232e5a1b174450f12aa494675d0941fa4c17f99f60ff9063ffffffff60701b9060701b169616906001600160901b03191617179160281b161769ff0000000000000000008860481b16179063ffffffff60501b9060501b161717905581519687526110936117d3565b1660208701528501526060840152608083015260a0820152a180f35b8d80fd5b8b80fd5b8980fd5b5090346101a35760803660031901126101a3576110d6611475565b6001600160a01b036024358181169390849003610658576110f561145f565b906064359186831015610c5e5761110a611500565b81519661111688611633565b88885260209487868a015283519261112d84611633565b60018452169788868401528351966111448861164f565b61114e8689611746565b86880191825284880193845263ffffffff60e01b1696878b526000805160206117ff8339815191528752848b2090518381101561125b5761118f90826117e6565b600181019151918251600281101561124857918189949360029354610100600160a81b03968796015160ff6affffffffffffffffffffff60a81b97889260081b169316911617179055019351918251936002851015611235575091879695939160ff86947ffa06e62a5e92c6354ccefe5daec331c8025e54e73ab99084cc91cb5dca242f2a9a611231985494015160081b16931691161717905551809261148c565ba480f35b634e487b7160e01b8d526021905260248cfd5b634e487b7160e01b8d526021855260248dfd5b634e487b7160e01b8c526021845260248cfd5b50829034610290576060366003190112610290573591600683101561029057600161132e610467947f5183e16e36d1058722dbfe016c1819682a2726b21ff09705c29ebb96a8dcdc9560606024356112c461145f565b97602088516112d281611633565b828152015286516112e281611633565b868060a01b038099169081815287602082018481528b61130189611788565b9351166001600160601b0360a01b84541617835551910155875191858352602083015287820152a1611788565b82519361133a85611633565b8154168452015460208301525191829182919091602080604083019460018060a01b0381511684520151910152565b505034610290578160031936011261029057602091815161138981611601565b82519161139583611601565b8252528051906113a482611601565b805180926113b182611601565b7f9adeaf5f56ed44c39532f4e17724750ace61a4efefd70bdb78bd8d52f859eedb548252525190518152f35b5050346102905760203660031901126102905760209060ff611439611400611444565b6001600160a01b031660009081527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285a6020526040902090565b541690519015158152f35b600435906001600160a01b038216820361145a57565b600080fd5b604435906001600160a01b038216820361145a57565b600435906001600160e01b03198216820361145a57565b9060048210156114995752565b634e487b7160e01b600052602160045260246000fd5b8051906002821015611499579082526020908101516001600160a01b0316910152565b9181601f8401121561145a5782359167ffffffffffffffff831161145a576020838186019501011161145a57565b6033546001600160a01b0316330361151457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156115a857565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6020810190811067ffffffffffffffff82111761161d57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761161d57604052565b6060810190811067ffffffffffffffff82111761161d57604052565b60c0810190811067ffffffffffffffff82111761161d57604052565b60a0810190811067ffffffffffffffff82111761161d57604052565b90601f8019910116810190811067ffffffffffffffff82111761161d57604052565b92919267ffffffffffffffff821161161d57604051916116ef601f8201601f1916602001846116a3565b82948184528183011161145a578281602093846000960137010152565b90600182811c9216801561173c575b602083101461172657565b634e487b7160e01b600052602260045260246000fd5b91607f169161171b565b60048210156114995752565b9060405161175f81611633565b80925460ff81169060028210156114995790825260081c6001600160a01b031660209190910152565b6006811015611499576000527fdebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df2230285c602052604060002090565b60243563ffffffff8116810361145a5790565b6024359063ffffffff8216820361145a57565b9060048110156114995760ff8019835416911617905556fedebda8d00e660e70f0186e78ec1bf4113321596136d08a9edd0344df22302859a264697066735822122096d04dfa5dc702738f4787da1d584247d43c0477b183d48bc57584ffa7ff535664736f6c63430008120033";

type LocalRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LocalRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LocalRegistrar__factory extends ContractFactory {
  constructor(...args: LocalRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LocalRegistrar> {
    return super.deploy(overrides || {}) as Promise<LocalRegistrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LocalRegistrar {
    return super.attach(address) as LocalRegistrar;
  }
  override connect(signer: Signer): LocalRegistrar__factory {
    return super.connect(signer) as LocalRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LocalRegistrarInterface {
    return new utils.Interface(_abi) as LocalRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LocalRegistrar {
    return new Contract(address, _abi, signerOrProvider) as LocalRegistrar;
  }
}
