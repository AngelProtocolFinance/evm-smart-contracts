/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Registrar,
  RegistrarInterface,
} from "../../../../../contracts/core/registrar/registrar.sol/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.YieldVault",
        name: "vault",
        type: "tuple",
      },
    ],
    name: "AddVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "DeleteNetworkConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "networkInfo",
        type: "tuple",
      },
    ],
    name: "PostNetworkConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
    ],
    name: "RemoveVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "collectorAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistrarStorage.Config",
        name: "details",
        type: "tuple",
      },
    ],
    name: "UpdateRegistrarConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "keys",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct RegistrarMessages.UpdateFeeRequest",
        name: "details",
        type: "tuple",
      },
    ],
    name: "UpdateRegistrarFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "UpdateRegistrarOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.EndowmentType[]",
        name: "endowmentTypes",
        type: "uint8[]",
      },
    ],
    name: "UpdateVault",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "taxRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
        ],
        internalType: "struct RegistrarMessages.InstantiateRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "collectorAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        internalType: "struct RegistrarStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "queryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "queryNetworkConnection",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
    ],
    name: "queryVaultDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType",
        name: "endowmentType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.BoolOptional",
        name: "approved",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryVaultList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType",
        name: "endowmentType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.BoolOptional",
        name: "approved",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryVaultListDep",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "taxRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "string[]",
            name: "approved_charities",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "splitMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "splitMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "splitDefault",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        internalType: "struct RegistrarMessages.UpdateConfigRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "keys",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct RegistrarMessages.UpdateFeeRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "networkInfo",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "action",
        type: "string",
      },
    ],
    name: "updateNetworkConnections",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "stratagyName",
            type: "string",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct RegistrarMessages.VaultAddRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "vaultAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
    ],
    name: "vaultRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
      {
        internalType: "bool",
        name: "curApproved",
        type: "bool",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType[]",
        name: "curRestrictedfrom",
        type: "uint8[]",
      },
    ],
    name: "vaultUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100255760ff19602a5416602a556001602b5561535e908161002b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816305b5f13114612f8b5750806309025fd414612e2d5780631cf5f9ad14612a3657806351390424146127425780636389ed1f14611dd25780637d2d1bbe14611b92578063820d0f1514611a935780638729b08f14610e2b578063880cdc3114610d63578063977f39f414610d075780639a9ab03f14610b16578063b2a0c4b214610a06578063d903bb1a146106fa5763e68f909d146100b957600080fd5b346106f55760003660031901126106f55760006104006040516100db81613494565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a082015260405161013e81613479565b8381528360208201528360408201526101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152604051610189816134cb565b606081526102a0820152826102c08201526040516101a6816134e6565b8381528360208201528360408201528360608201528360808201526102e08201528261030082015282610320820152826103408201528261036082015282610380820152826103a0820152826103c0820152826103e0820152015260405161020d81613494565b6000546001600160a01b0390811682526001548116602083015260025481166040808401919091526003548216606084015260045482166080840152600554821660a0840152600654821660c0840152600754821660e084015260085482166101008401526009548216610120840152600a548216610140840152600b548216610160840152600c548216610180840152600d549091166101a0830152516102b481613479565b600e548152600f5460208201526010546040808301919091526101c08301919091526011546001600160a01b039081166101e08401526012548116610200840152601354811661022084015260145481166102408401526015546102608401526016541661028083015251610328816134cb565b60405180816020601754928381520160176000526000805160206153098339815191529260005b8181106106d357505061036492500382613501565b81526102a08201526018546001600160a01b03166102c082015260405161038a816134e6565b60195460ff8181161515835260089190911c81161515602080840191909152601a54604080850191909152601b549092161515606080850191909152601c546080808601919091526102e086810195909552601d546001600160a01b0390811661030080890191909152601e548216610320890152601f54821661034089015284548216610360890152602154821661038089015260225482166103a089015260235482166103c089015260245482166103e089015260255482166104008901528551858152885183168187015288860151831681880152888701518316818601529388015182168484015291870151811660a084810191909152870151811660c080850191909152870151811660e08085019190915287015181166101008085019190915287015181166101208085019190915287015181166101408085019190915287015181166101608085019190915287015181166101808085019190915287015181166101a08085019190915287015181166101c08085019190915287015180516101e08086019190915281860151610200808701919091529190960151610220808601919091529588015182166102408086019190915290880151821661026080860191909152958801518216610280808601919091529088015182166102a080860191909152958801516102c08501528701511694820194909452918401516104e093830193909352915161050082018390528051610520830181905260009492936105408501939201905b8086106106b05750506102c08101516001600160a01b03908116610320858101919091526102e0830151805115156103408088019190915260208201511515610360808901919091526040830151610380808a0191909152606084015115156103a0808b01919091526080909401516103c0808b019190915261030088015187166103e0808c0191909152958801518716610400808c01919091529388015187166104208b01529187015186166104408a015286015185166104608901529185015184166104808801529084015183166104a08701529083015182166104c086015290910151166104e08301528190039150f35b81516001600160a01b0316845260019590950194602093840193909101906105bc565b84546001600160a01b031683526001948501948694506020909301920161034f565b600080fd5b346106f5576003196040368201126106f5576004356001600160401b03918282116106f5576101009082360301126106f5576040516107388161345d565b81600401358381116106f557610754906004369185010161353d565b8152602091828201936024820135855261077060448301613584565b6040840190815261078360648401613584565b6060850190815260848401358381116106f5576107a6906004369187010161353d565b6080860190815260a48501358481116106f5576107c9906004369188010161353d565b9060a087019182526107dd60c48701613584565b9460c0880195865260e460e0890197013587526024359081116106f55761080890369060040161353d565b92610811613f15565b6000546001600160a01b03949061082b9086163314613f6b565b61085060405161083a816134b0565b60048152631c1bdcdd60e21b8c820152826148ad565b156109205750936007936108eb61091598946108e18d99958c997f7c12821b273676cb850b9cef8196a8c54dcf6789078c6aa5dc7a3c0d652e6b589f8f60289151600052526108a560406000209b518c613d1a565b8b5160018c01558560028c01975116966001600160601b0360a01b97888254161790558560038c01915116878254161790555160048a01613d1a565b5160058801613d1a565b600686019251169082541617905551910155519160408051948594855284015260408301906138d9565b0390a15b6001602b55005b965050505050505061095191506040519061093a826134b0565b600682526564656c65746560d01b848301526148ad565b156109d157817f5420ccbc4de19a27bab83245950c1e88d67c9944a7f030f01ec78c3c27a960da925160005260288252600060076040822061099281614857565b8260018201558260028201558260038201556109b060048201614857565b6109bc60058201614857565b826006820155015551604051908152a1610919565b6064906040519062461bcd60e51b82526004820152600e60248201526d496e76616c696420696e7075747360901b6044820152fd5b346106f5576020806003193601126106f5576004356001600160401b0381116106f55781610a3b610a5792369060040161353d565b610a43614902565b508160405193828580945193849201613664565b8101602681520301902090610afe60ff600560405194610a768661345d565b604051610a8e81610a878185613e1e565b0382613501565b86526001810154858701528260018060a01b038060028401541660408901526003830154908116606089015260a01c1615156080870152604051610ad981610a878160048601614092565b60a08701520154818116610aec816136ac565b60c086015260081c1660e08401613ffb565b610b126040519282849384528301906136c3565b0390f35b346106f557602060031981813601126106f557600435906001600160401b03908183116106f55760409083360301126106f55760405190610b56826134b0565b82600401358181116106f557610b729060043691860101613959565b8252602492838101359182116106f55701366023820112156106f5576004810135610b9c81613598565b91610baa6040519384613501565b818352848684019260051b820101913683116106f55785879201905b838210610cf8575050830191825250610bdd613f15565b81515181515103610cc45760005b825151811015610c9457606480610c03838551613c23565b511015610c53575080610c1a610c4e928451613c23565b51610c3e87610c2a848851613c23565b518160405193828580945193849201613664565b8101602981520301902055613fb0565b610beb565b60405162461bcd60e51b8152600481018790526018818701527f696e76616c69642070657263656e746167652076616c756500000000000000006044820152fd5b6040517f1d5d5a6aeda19185043499093fee83fda5f443876a815bdd5dfb5e4bb18576c390806109158682613c37565b60405162461bcd60e51b815260048101859052600d818501526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b81358152908201908201610bc6565b346106f55760203660031901126106f5576004356001600160401b0381116106f557610d506020610d3d8193369060040161353d565b8160405193828580945193849201613664565b8101602981520301902054604051908152f35b346106f55760203660031901126106f5576004356001600160a01b03818116918281036106f557610dab90610d96613f15565b610da66000549384163314613f6b565b613eb4565b15610df2576001600160a01b03191681176000556040519081527fd55dc5f60ad530b205bb98271b741a75d4192a9e0feb84edecf0e7eeea20f63b90602090a16001602b55005b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2102732bb9027bbb732b960791b6044820152606490fd5b346106f5576003196020368201126106f5576001600160401b03600435116106f5576104e090600435360301126106f55760405161046081018181106001600160401b0382111761188f57604052610e87600435600401613584565b8152602460043501356020820152610ea4366044600435016137ed565b604082015260e460043501356001600160401b0381116106f557610ecf906004369181350101613959565b6060820152600435610104810135608083015261012481013560a083015261014481013560c083015261016481013560e083015261018401356001600160401b0381116106f557610f27906004369181350101613848565b610100820152610f3c6101a460043501613584565b610120820152610f516101c460043501613584565b610140820152610f666101e460043501613584565b610160820152610f7b61020460043501613584565b610180820152610f9061022460043501613584565b6101a0820152610fa561024460043501613584565b6101c0820152610fba61026460043501613584565b6101e0820152610fcf61028460043501613584565b610200820152610fe46102a460043501613584565b610220820152610ff96102c460043501613584565b61024082015261100e6102e460043501613584565b61026082015261102361030460043501613584565b61028082015261103861032460043501613584565b6102a082015261104d61034460043501613584565b6102c082015261106261036460043501613584565b6102e082015261107761038460043501613584565b61030082015261108c6103a460043501613584565b6103208201526110a16103c460043501613584565b6103408201526110b66103e460043501613584565b6103608201526110cb61040460043501613584565b6103808201526110e061042460043501613584565b6103a08201526110f561044460043501613584565b6103c082015261110a61046460043501613584565b6103e082015261111f61048460043501613584565b6104008201526111346104a460043501613584565b6104208201526111496104c460043501613584565b610440820152611157613f15565b6000546001600160a01b03163303611a68576103208101516001600160a01b031661118181613eb4565b611a43575b5080516001600160a01b031661119b81613eb4565b611a2a575b506103408101516001600160a01b03166111b981613eb4565b611a05575b506102e08101516001600160a01b03166111d781613eb4565b6119ec575b506102008101516001600160a01b03166111f581613eb4565b6119d3575b506102408101516001600160a01b031661121381613eb4565b6119ae575b50606460208201511161198357608060408201516112458151151560ff8019601954169115151617601955565b6020810151151561ff006019549160081b169061ff001916176019556040810151601a556112856060820151151560ff8019601b54169115151617601b55565b0151601c55606460808201511161195857606460a0820151101561192d57606460c08201511161190257608081015160a082015160c083015190604051926112cc84613479565b8352602083015260408201526112e181613ecc565b156118d7578051600e556020810151600f55604001516010556102608101516001600160a01b031661131281613eb4565b6118be575b506102808101516001600160a01b031661133081613eb4565b6118a5575b50610100810151518051906001600160401b03821161188f57600160401b821161188f576020906017548360175580841061186b575b5001601760005260005b8281106118405761030084015184906001600160a01b031661139681613eb4565b61181b575b5060e081015180611812575b506102208101516001600160a01b03166113c081613eb4565b6117f9575b506101208101516001600160a01b03166113de81613eb4565b6117e0575b506101608101516001600160a01b03166113fc81613eb4565b6117c7575b506101408101516001600160a01b031661141a81613eb4565b6117ae575b506101808101516001600160a01b031661143881613eb4565b611795575b506101a08101516001600160a01b031661145681613eb4565b61177c575b506101c08101516001600160a01b031661147481613eb4565b611763575b506101e08101516001600160a01b031661149281613eb4565b61174a575b506102a08101516001600160a01b03166114b081613eb4565b611731575b506102c08101516001600160a01b03166114ce81613eb4565b611718575b506103808101516001600160a01b03166114ec81613eb4565b6116f3575b506103608101516001600160a01b031661150a81613eb4565b6116ce575b506103a08101516001600160a01b031661152881613eb4565b6116a9575b506103c08101516001600160a01b031661154681613eb4565b611684575b506103e08101516001600160a01b031661156481613eb4565b61165f575b506104008101516001600160a01b031661158281613eb4565b61163a575b506104208101516001600160a01b03166115a081613eb4565b611615575b5061044001516001600160a01b03166115bd81613eb4565b6115f0575b7f89cde5a76c5006132366331fdbb5a86401340c508029df5ad27029625b35486c60405180610915816139f0565b602580546001600160a01b0319166001600160a01b03909216919091179055806115c2565b602480546001600160a01b0319166001600160a01b03909216919091179055816115a5565b602380546001600160a01b0319166001600160a01b0390921691909117905581611587565b602280546001600160a01b0319166001600160a01b0390921691909117905581611569565b602180546001600160a01b0319166001600160a01b039092169190911790558161154b565b602080546001600160a01b0319166001600160a01b039092169190911790558161152d565b601e80546001600160a01b0319166001600160a01b039092169190911790558161150f565b601f80546001600160a01b0319166001600160a01b03909216919091179055816114f1565b6001600160601b0360a01b6012541617601255816114d3565b6001600160601b0360a01b6011541617601155816114b5565b6001600160601b0360a01b600b541617600b5581611497565b6001600160601b0360a01b600a541617600a5581611479565b6001600160601b0360a01b60095416176009558161145b565b6001600160601b0360a01b60085416176008558161143d565b6001600160601b0360a01b60065416176006558161141f565b6001600160601b0360a01b600754161760075581611401565b6001600160601b0360a01b6005541617600555816113e3565b6001600160601b0360a01b6013541617601355816113c5565b601555816113a7565b601880546001600160a01b0319166001600160a01b039092169190911790558161139b565b81516001600160a01b0316600080516020615309833981519152820155602090910190600101611375565b611889908460008051602061530983398151915291820191016139d9565b8461136b565b634e487b7160e01b600052604160045260246000fd5b6001600160601b0360a01b600d541617600d5581611335565b6001600160601b0360a01b600c541617600c5581611317565b60405162461bcd60e51b815260206004820152600360248201526206531360ec1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303960e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526208a60760eb1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303760e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526222981b60e91b6044820152606490fd5b600480546001600160a01b0319166001600160a01b0390921691909117905581611218565b6001600160601b0360a01b6002541617600255816111fa565b6001600160601b0360a01b6016541617601655816111dc565b601d80546001600160a01b0319166001600160a01b03909216919091179055816111be565b6001600160601b0360a01b6003541617600355816111a0565b600180546001600160a01b0319166001600160a01b0390921691909117905581611186565b60405162461bcd60e51b8152602060048201526003602482015262114c0d60ea1b6044820152606490fd5b346106f5576020806003193601126106f557600060e0604051611ab58161345d565b60608152828482015282604082015282606082015260606080820152606060a08201528260c0820152015260043560005260288152604060002090600760405192611aff8461345d565b604051611b1081610a878185613e1e565b845260018101548385015260018060a01b03806002830154166040860152806003830154166060860152604051611b4e81610a878160048701613e1e565b6080860152604051611b6781610a878160058701613e1e565b60a086015260068201541660c0850152015460e0830152610b126040519282849384528301906138d9565b346106f55760603660031901126106f5576001600160401b036004358181116106f557611bc390369060040161353d565b602435908115158083036106f5576044358481116106f5576004611c68611bef600393369084016135af565b95611bf8613f15565b611c0d60018060a01b03600054163314613f6b565b60405190611c5787519160209684888096818d0196611c2d81838a613664565b60269082019081520301902001805460ff60a01b191691151560a01b60ff60a01b16919091179055565b604051809381928951928391613664565b810160268152030190200193805195861161188f57611c878686614007565b8181018095600052826000208760051c9060005b828110611d9a57508495969798601f1981168082039103611d41575b50505050611cd360409493945195606087526060870190613687565b92828601528483036040860152519182815201939160005b828110611d1f577fb9882473d401a9a51525cc8670f35d0cf286c98b8827cb9edc80f4782c0f8a6585870386a16001602b55005b9091929482806001928851611d33816136ac565b815201960193929101611ceb565b9260009360005b818110611d5d57505050015586808080611cb7565b919596611d8a60019294959684895191611d76836136ac565b9060ff809160031b9316831b921b19161790565b9601910191879695949392611d48565b6000805b87808210611db457505082820155600101611c9b565b611dc9879383600194995191611d76836136ac565b92019501611d9e565b346106f5576003196020368201126106f5576004356001600160401b0381116106f5576101a0813603928301126106f557606060405192611e1284613442565b611e1e83600401613584565b845260248301356020850152611e3736604485016137ed565b604085015260e31901126106f557604051611e5181613479565b60e482013581526101048201356020820152610124820135604082015260608301526101448101356001600160401b0381116106f557611ebb91611e9e6101849260043691840101613848565b6080850152611eb06101648201613584565b60a085015201613584565b60c0820152602a5460ff81166127175760646020830151116126ec57611ee46060830151613ecc565b156126c15760ff1916600117602a5580516001600160a01b0316611f0781613eb4565b156126b9575b60408201519060406060840151612097608086015193835195611f2f87613494565b3387523360208801526000858801526000606088015260018060a01b0382166080880152600060a0880152600060c0880152600060e08801526000610100880152600061012088015260006101408801526000610160880152600061018088015260006101a0880152836101c088015260006101e088015260006102008801526000610220880152600061024088015260326102608801526000610280880152856102a088015260006102c08801526102e08701526000610300870152600061032087015260006103408701526000610360870152600061038087015260006103a087015260006103c087015260006103e08701526000610400870152336001600160601b0360a01b60005416176000556120613360018060a01b03166001600160601b0360a01b6001541617600155565b600280546001600160a01b03199081169091556003805482169055600480549091166001600160a01b0392909216919091179055565b600580546001600160a01b03199081169091556006805482169055600780548216905560088054821690556009805482169055600a805482169055600b805482169055600c805482169055600d8054821690558151600e556020820151600f5591015160105560118054821690556012805482169055601380548216905560148054821690556032601555601680549091169055518051906001600160401b03821161188f57600160401b821161188f5760209060175483601755808410612695575b5001601760005260005b82811061266a576102c0840151601880546001600160a01b0319166001600160a01b0392909216919091179055846122c98560806102e08201516121b78151151560ff8019601954169115151617601955565b6020810151151561ff006019549160081b169061ff001916176019556040810151601a556121f76060820151151560ff8019601b54169115151617601b55565b0151601c55610300810151601d80546001600160a01b03199081166001600160a01b0393841617909155610320830151601e80548316918416919091179055610340830151601f805483169184169190911790556103608301516020805483169184169190911790556103808301516021805483169184169190911790556103a08301516022805483169184169190911790556103c08301516023805483169184169190911790556103e083015160248054831691841691909117905561040090920151602580549093169116179055565b7f89cde5a76c5006132366331fdbb5a86401340c508029df5ad27029625b35486c604051806122f7816139f0565b0390a16020810151602d6040516c1d985d5b1d17da185c9d995cdd609a1b81526029600d820152205560026031604051706163636f756e74735f776974686472617760781b815260296011820152205560405161235381613479565b6002815260005b6040811061265957506124537f1d5d5a6aeda19185043499093fee83fda5f443876a815bdd5dfb5e4bb18576c391604051612394816134b0565b600d81526c1d985d5b1d17da185c9d995cdd609a1b60208201526123b782613bf0565b526123c181613bf0565b506040516123ce816134b0565b60118152706163636f756e74735f776974686472617760781b60208201526123f582613c13565b526123ff81613c13565b5060405161240c81613479565b600281526040366020830137602085015161242682613bf0565b52600261243282613c13565b5260405191612440836134b0565b8252602082015260405191829182613c37565b0390a160a081015160c090910151604051916007916001600160a01b03908116911661247e8461345d565b60405161248a816134b0565b838152662837b63cb3b7b760c91b60208201528452612561602085019246845260408601928352606086019081526125576040516124c7816134cb565b6000815260808801908152604051926124df846134cb565b6000845260a0890193845260c08901956000875260e08a01976000895246600052602860205261251560406000209b518c613d1a565b5160018b01555160028a0180546001600160a01b03199081166001600160a01b0393841617909155915160038b01805490931691161790555160048801613d1a565b5160058601613d1a565b600684019060018060a01b039051166001600160601b0360a01b825416179055519101554660005260286020527f7c12821b273676cb850b9cef8196a8c54dcf6789078c6aa5dc7a3c0d652e6b586040600020604051809146825260406020830152610100604083015260076126376125de610140850184613e1e565b6001840154606086015260028401546001600160a01b03908116608087015260038501541660a0860152848103603f1990810160c0870152906126249060048601613e1e565b908582030160e086015260058401613e1e565b60068301546001600160a01b03166101008501529101546101208301520390a1005b80606060208093850101520161235a565b81516001600160a01b0316600080516020615309833981519152820155602090910190600101612164565b6126b3908460008051602061530983398151915291820191016139d9565b8561215a565b506000611f0d565b60405162461bcd60e51b815260206004820152600360248201526245303360e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526222981960e91b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303160e81b6044820152606490fd5b346106f55761275036613616565b949592949193909290918015612a2a5761276990614942565b9160275494858510156129ef5760009461278287613598565b966127906040519889613501565b80885261279f601f1991613598565b0160005b8181106129de5750505b60275481101561297957886020856127cd6127c78561406d565b50614992565b6127ee868d89604051978896879663c5795f9160e01b885260048801614a25565b038173__$f284c32d832c07e2014212a56f3cfbb80e$__5af490811561296d57600091612933575b5061282a575b61282590613fb0565b6127ad565b9461292b6128259161283e6127c78961406d565b6128de6040519161284e8361345d565b60405161285f81610a878185613e1e565b835260018101546020840152600560018060a01b03918260028201541660408601526003810154928316606086015260ff928360a091821c1615156080870152604051906128bb826128b48160048701614092565b0383613501565b86015201548181166128cc816136ac565b60c085015260081c1660e08301613ffb565b6128e88989613c23565b526128f38888613c23565b50610a876129106129038a61406d565b5060405192838092613e1e565b61291a828b613c23565b52612925818a613c23565b50613fb0565b95905061281c565b90506020813d602011612965575b8161294e60209383613501565b810103126106f55761295f906148a0565b8a612816565b3d9150612941565b6040513d6000823e3d90fd5b868661298481614942565b9160005b82811061299d5760405180610b12868261377e565b806129b46129ae6129d99385613c23565b51613fd5565b6129c46040519161284e8361345d565b6129ce8287613c23565b526129258186613c23565b612988565b806060602080938c010152016127a3565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642073746172742076616c756560681b6044820152606490fd5b50612769602754614942565b346106f5576003196020368201126106f5576004356001600160401b0381116106f557612a6790369060040161353d565b90612a70613f15565b612a8560018060a01b03600054163314613f6b565b600060056040516020818651612a9e8183858b01613664565b81016026815203019020612ab181614857565b82600182015582600282015582600382015560048101805484825580612e0e575b5050015573__$cdb3a974a6603f5f21ad73b7f4e0c6fc0b$__90604051906373b64e1560e01b8252816044810191604060048301526027548093526064820160648460051b8401019360276000526000805160206152e9833981519152916000905b828210612de05750505050612b56838392836040960301602484015287613687565b0381855af4801561296d57600091600091612da0575b50612bab575b7fe32a4c2d651b9ed525fee9107375614fd62cece77c73592d4b8960018f64a96a61091584604051918291602083526020830190613687565b60009060446040518094819363645b587d60e11b83526027600484015260248301525af490811561296d57600091612c89575b50805190600160401b821161188f5760275482602755808310612c43575b5060200160276000526000805160206152e98339815191526000915b838310612c26575050612b72565b6001602082612c3783945186613d1a565b01920192019190612c18565b60276000526000805160206152e983398151915201826000805160206152e9833981519152015b818110612c775750612bfc565b80612c83600192614857565b01612c6a565b3d9150816000823e612c9b8282613501565b60208183810103126106f55780516001600160401b0381116106f557828201601f8284010112156106f5578082015190612cd482613598565b93612ce26040519586613501565b828552602085019080850160208560051b8588010101116106f557602083860101915b60208560051b85880101018310612d225750505050505082612bde565b82516001600160401b0381116106f557828701603f82878a01010112156106f557602081868901010151612d5581613522565b92612d636040519485613501565b818452848901604083858a8d01010101116106f55783612d93602095938b604088978c8980990193010101613664565b8152019301929050612d05565b9150506040813d604011612dd8575b81612dbc60409383613501565b810103126106f557612dd26020825192016148a0565b84612b6c565b3d9150612daf565b91939450919460206001612dfe81936063198b820301865289613e1e565b9701920192018694939192612b34565b612e26918552601f602086209101841c8101906139d9565b8580612ad2565b346106f557612e3b36613616565b9095929490939092918415612f8057612e5385614942565b9560279788548110156129ef575b8854811015612f6f5785602086612e7a6127c78561406d565b612e9b87878a604051978896879663c5795f9160e01b885260048801614a25565b038173__$f284c32d832c07e2014212a56f3cfbb80e$";

type RegistrarConstructorParams =
  | [linkLibraryAddresses: RegistrarLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Registrar__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: RegistrarLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f284c32d832c07e2014212a56f3cfbb80e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/core/registrar/registrar.sol:RegistrarLib"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cdb3a974a6603f5f21ad73b7f4e0c6fc0b\\$__", "g"),
      linkLibraryAddresses["contracts/lib/Strings/string.sol:StringArray"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}

export interface RegistrarLibraryAddresses {
  ["contracts/core/registrar/registrar.sol:RegistrarLib"]: string;
  ["contracts/lib/Strings/string.sol:StringArray"]: string;
}
