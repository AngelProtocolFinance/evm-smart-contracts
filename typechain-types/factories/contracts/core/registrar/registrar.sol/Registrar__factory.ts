/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Registrar,
  RegistrarInterface,
} from "../../../../../contracts/core/registrar/registrar.sol/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.YieldVault",
        name: "vault",
        type: "tuple",
      },
    ],
    name: "AddVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "DeleteNetworkConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "networkInfo",
        type: "tuple",
      },
    ],
    name: "PostNetworkConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
    ],
    name: "RemoveVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "collectorAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistrarStorage.Config",
        name: "details",
        type: "tuple",
      },
    ],
    name: "UpdateRegistrarConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "keys",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct RegistrarMessages.UpdateFeeRequest",
        name: "details",
        type: "tuple",
      },
    ],
    name: "UpdateRegistrarFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "UpdateRegistrarOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strategyName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.EndowmentType[]",
        name: "endowmentTypes",
        type: "uint8[]",
      },
    ],
    name: "UpdateVault",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "taxRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
        ],
        internalType: "struct RegistrarMessages.InstantiateRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "collectorAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        internalType: "struct RegistrarStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "queryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "response",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "queryNetworkConnection",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
    ],
    name: "queryVaultDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType",
        name: "endowmentType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.BoolOptional",
        name: "approved",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryVaultList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType",
        name: "endowmentType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        internalType: "enum AngelCoreStruct.BoolOptional",
        name: "approved",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryVaultListDep",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "addr",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct AngelCoreStruct.YieldVault[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountsContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "taxRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "string[]",
            name: "approved_charities",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "splitMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "splitMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "splitDefault",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectorShare",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "cw20",
                type: "address[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AcceptedTokens",
            name: "acceptedTokens",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "subdaoGovCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw20TokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoBondingTokenCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoCw900Code",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoDistributorCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "subdaoEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCode",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexFundContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "govContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchCharitesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "donationMatchEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "haloTokenLpContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "charitySharesContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "fundraisingContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "applicationsReview",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapsRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "multisigEmitter",
            type: "address",
          },
          {
            internalType: "address",
            name: "charityProposal",
            type: "address",
          },
          {
            internalType: "address",
            name: "lockedWithdrawal",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "wethAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "cw900lvAddress",
            type: "address",
          },
        ],
        internalType: "struct RegistrarMessages.UpdateConfigRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "keys",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct RegistrarMessages.UpdateFeeRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "axelerGateway",
            type: "address",
          },
          {
            internalType: "string",
            name: "ibcChannel",
            type: "string",
          },
          {
            internalType: "string",
            name: "transferChannel",
            type: "string",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.NetworkInfo",
        name: "networkInfo",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "action",
        type: "string",
      },
    ],
    name: "updateNetworkConnections",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "network",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "stratagyName",
            type: "string",
          },
          {
            internalType: "address",
            name: "inputDenom",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType[]",
            name: "restrictedFrom",
            type: "uint8[]",
          },
          {
            internalType: "enum AngelCoreStruct.AccountType",
            name: "acctType",
            type: "uint8",
          },
          {
            internalType: "enum AngelCoreStruct.VaultType",
            name: "vaultType",
            type: "uint8",
          },
        ],
        internalType: "struct RegistrarMessages.VaultAddRequest",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "vaultAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
    ],
    name: "vaultRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stratagyName",
        type: "string",
      },
      {
        internalType: "bool",
        name: "curApproved",
        type: "bool",
      },
      {
        internalType: "enum AngelCoreStruct.EndowmentType[]",
        name: "curRestrictedfrom",
        type: "uint8[]",
      },
    ],
    name: "vaultUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100255760ff19602a5416602a556001602b55615341908161002b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816305b5f13114612f785750806309025fd414612e1a5780631cf5f9ad14612a23578063513904241461272f5780636389ed1f14611dbf5780637d2d1bbe14611b7f578063820d0f1514611a805780638729b08f14610e40578063880cdc3114610d78578063977f39f414610d1c5780639a9ab03f14610b16578063b2a0c4b214610a06578063d903bb1a146106fa5763e68f909d146100b957600080fd5b346106f55760003660031901126106f55760006104006040516100db81613481565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a082015260405161013e81613466565b8381528360208201528360408201526101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152604051610189816134b8565b606081526102a0820152826102c08201526040516101a6816134d3565b8381528360208201528360408201528360608201528360808201526102e08201528261030082015282610320820152826103408201528261036082015282610380820152826103a0820152826103c0820152826103e0820152015260405161020d81613481565b6000546001600160a01b0390811682526001548116602083015260025481166040808401919091526003548216606084015260045482166080840152600554821660a0840152600654821660c0840152600754821660e084015260085482166101008401526009548216610120840152600a548216610140840152600b548216610160840152600c548216610180840152600d549091166101a0830152516102b481613466565b600e548152600f5460208201526010546040808301919091526101c08301919091526011546001600160a01b039081166101e08401526012548116610200840152601354811661022084015260145481166102408401526015546102608401526016541661028083015251610328816134b8565b60405180816020601754928381520160176000526000805160206152ec8339815191529260005b8181106106d3575050610364925003826134ee565b81526102a08201526018546001600160a01b03166102c082015260405161038a816134d3565b60195460ff8181161515835260089190911c81161515602080840191909152601a54604080850191909152601b549092161515606080850191909152601c546080808601919091526102e086810195909552601d546001600160a01b0390811661030080890191909152601e548216610320890152601f54821661034089015284548216610360890152602154821661038089015260225482166103a089015260235482166103c089015260245482166103e089015260255482166104008901528551858152885183168187015288860151831681880152888701518316818601529388015182168484015291870151811660a084810191909152870151811660c080850191909152870151811660e08085019190915287015181166101008085019190915287015181166101208085019190915287015181166101408085019190915287015181166101608085019190915287015181166101808085019190915287015181166101a08085019190915287015181166101c08085019190915287015180516101e08086019190915281860151610200808701919091529190960151610220808601919091529588015182166102408086019190915290880151821661026080860191909152958801518216610280808601919091529088015182166102a080860191909152958801516102c08501528701511694820194909452918401516104e093830193909352915161050082018390528051610520830181905260009492936105408501939201905b8086106106b05750506102c08101516001600160a01b03908116610320858101919091526102e0830151805115156103408088019190915260208201511515610360808901919091526040830151610380808a0191909152606084015115156103a0808b01919091526080909401516103c0808b019190915261030088015187166103e0808c0191909152958801518716610400808c01919091529388015187166104208b01529187015186166104408a015286015185166104608901529185015184166104808801529084015183166104a08701529083015182166104c086015290910151166104e08301528190039150f35b81516001600160a01b0316845260019590950194602093840193909101906105bc565b84546001600160a01b031683526001948501948694506020909301920161034f565b600080fd5b346106f5576003196040368201126106f5576004356001600160401b03918282116106f5576101009082360301126106f5576040516107388161344a565b81600401358381116106f557610754906004369185010161352a565b8152602091828201936024820135855261077060448301613571565b6040840190815261078360648401613571565b6060850190815260848401358381116106f5576107a6906004369187010161352a565b6080860190815260a48501358481116106f5576107c9906004369188010161352a565b9060a087019182526107dd60c48701613571565b9460c0880195865260e460e0890197013587526024359081116106f55761080890369060040161352a565b92610811613f3d565b6000546001600160a01b03949061082b9086163314613f02565b61085060405161083a8161349d565b60048152631c1bdcdd60e21b8c82015282614890565b156109205750936007936108eb61091598946108e18d99958c997f7c12821b273676cb850b9cef8196a8c54dcf6789078c6aa5dc7a3c0d652e6b589f8f60289151600052526108a560406000209b518c613d07565b8b5160018c01558560028c01975116966001600160601b0360a01b97888254161790558560038c01915116878254161790555160048a01613d07565b5160058801613d07565b600686019251169082541617905551910155519160408051948594855284015260408301906138c6565b0390a15b6001602b55005b965050505050505061095191506040519061093a8261349d565b600682526564656c65746560d01b84830152614890565b156109d157817f5420ccbc4de19a27bab83245950c1e88d67c9944a7f030f01ec78c3c27a960da92516000526028825260006007604082206109928161483a565b8260018201558260028201558260038201556109b06004820161483a565b6109bc6005820161483a565b826006820155015551604051908152a1610919565b6064906040519062461bcd60e51b82526004820152600e60248201526d496e76616c696420696e7075747360901b6044820152fd5b346106f5576020806003193601126106f5576004356001600160401b0381116106f55781610a3b610a5792369060040161352a565b610a436148e5565b508160405193828580945193849201613651565b8101602681520301902090610afe60ff600560405194610a768661344a565b604051610a8e81610a878185613e0b565b03826134ee565b86526001810154858701528260018060a01b038060028401541660408901526003830154908116606089015260a01c1615156080870152604051610ad981610a878160048601614075565b60a08701520154818116610aec81613699565b60c086015260081c1660e08401613fde565b610b126040519282849384528301906136b0565b0390f35b346106f557602060031981813601126106f557600435906001600160401b03908183116106f55760409083360301126106f55760405190610b568261349d565b82600401358181116106f557610b729060043691860101613946565b8252602492838101359182116106f55701366023820112156106f5576004810135610b9c81613585565b91610baa60405193846134ee565b818352848684019260051b820101913683116106f55785879201905b838210610d0d575050830191825250610bdd613f3d565b610bf260018060a01b03600054163314613f02565b81515181515103610cd95760005b825151811015610ca957606480610c18838551613c10565b511015610c68575080610c2f610c63928451613c10565b51610c5387610c3f848851613c10565b518160405193828580945193849201613651565b8101602981520301902055613f93565b610c00565b60405162461bcd60e51b8152600481018790526018818701527f696e76616c69642070657263656e746167652076616c756500000000000000006044820152fd5b6040517f1d5d5a6aeda19185043499093fee83fda5f443876a815bdd5dfb5e4bb18576c390806109158682613c24565b60405162461bcd60e51b815260048101859052600d818501526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b81358152908201908201610bc6565b346106f55760203660031901126106f5576004356001600160401b0381116106f557610d656020610d528193369060040161352a565b8160405193828580945193849201613651565b8101602981520301902054604051908152f35b346106f55760203660031901126106f5576004356001600160a01b03818116918281036106f557610dc090610dab613f3d565b610dbb6000549384163314613f02565b613ea1565b15610e07576001600160a01b03191681176000556040519081527fd55dc5f60ad530b205bb98271b741a75d4192a9e0feb84edecf0e7eeea20f63b90602090a16001602b55005b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2102732bb9027bbb732b960791b6044820152606490fd5b346106f5576003196020368201126106f5576001600160401b03600435116106f5576104e090600435360301126106f55760405161046081018181106001600160401b038211176118a757604052610e9c600435600401613571565b8152602460043501356020820152610eb9366044600435016137da565b604082015260e460043501356001600160401b0381116106f557610ee4906004369181350101613946565b6060820152600435610104810135608083015261012481013560a083015261014481013560c083015261016481013560e083015261018401356001600160401b0381116106f557610f3c906004369181350101613835565b610100820152610f516101a460043501613571565b610120820152610f666101c460043501613571565b610140820152610f7b6101e460043501613571565b610160820152610f9061020460043501613571565b610180820152610fa561022460043501613571565b6101a0820152610fba61024460043501613571565b6101c0820152610fcf61026460043501613571565b6101e0820152610fe461028460043501613571565b610200820152610ff96102a460043501613571565b61022082015261100e6102c460043501613571565b6102408201526110236102e460043501613571565b61026082015261103861030460043501613571565b61028082015261104d61032460043501613571565b6102a082015261106261034460043501613571565b6102c082015261107761036460043501613571565b6102e082015261108c61038460043501613571565b6103008201526110a16103a460043501613571565b6103208201526110b66103c460043501613571565b6103408201526110cb6103e460043501613571565b6103608201526110e061040460043501613571565b6103808201526110f561042460043501613571565b6103a082015261110a61044460043501613571565b6103c082015261111f61046460043501613571565b6103e082015261113461048460043501613571565b6104008201526111496104a460043501613571565b61042082015261115e6104c460043501613571565b61044082015261117960018060a01b03600054163314613f02565b611181613f3d565b6103208101516001600160a01b031661119981613ea1565b611a5b575b5080516001600160a01b03166111b381613ea1565b611a42575b506103408101516001600160a01b03166111d181613ea1565b611a1d575b506102e08101516001600160a01b03166111ef81613ea1565b611a04575b506102008101516001600160a01b031661120d81613ea1565b6119eb575b506102408101516001600160a01b031661122b81613ea1565b6119c6575b50606460208201511161199b576080604082015161125d8151151560ff8019601954169115151617601955565b6020810151151561ff006019549160081b169061ff001916176019556040810151601a5561129d6060820151151560ff8019601b54169115151617601b55565b0151601c55606460808201511161197057606460a0820151101561194557606460c08201511161191a57608081015160a082015160c083015190604051926112e484613466565b8352602083015260408201526112f981613eb9565b156118ef578051600e556020810151600f55604001516010556102608101516001600160a01b031661132a81613ea1565b6118d6575b506102808101516001600160a01b031661134881613ea1565b6118bd575b50610100810151518051906001600160401b0382116118a757600160401b82116118a75760209060175483601755808410611883575b5001601760005260005b8281106118585761030084015184906001600160a01b03166113ae81613ea1565b611833575b5060e08101518061182a575b506102208101516001600160a01b03166113d881613ea1565b611811575b506101208101516001600160a01b03166113f681613ea1565b6117f8575b506101608101516001600160a01b031661141481613ea1565b6117df575b506101408101516001600160a01b031661143281613ea1565b6117c6575b506101808101516001600160a01b031661145081613ea1565b6117ad575b506101a08101516001600160a01b031661146e81613ea1565b611794575b506101c08101516001600160a01b031661148c81613ea1565b61177b575b506101e08101516001600160a01b03166114aa81613ea1565b611762575b506102a08101516001600160a01b03166114c881613ea1565b611749575b506102c08101516001600160a01b03166114e681613ea1565b611730575b506103808101516001600160a01b031661150481613ea1565b61170b575b506103608101516001600160a01b031661152281613ea1565b6116e6575b506103a08101516001600160a01b031661154081613ea1565b6116c1575b506103c08101516001600160a01b031661155e81613ea1565b61169c575b506103e08101516001600160a01b031661157c81613ea1565b611677575b506104008101516001600160a01b031661159a81613ea1565b611652575b506104208101516001600160a01b03166115b881613ea1565b61162d575b5061044001516001600160a01b03166115d581613ea1565b611608575b7f89cde5a76c5006132366331fdbb5a86401340c508029df5ad27029625b35486c60405180610915816139dd565b602580546001600160a01b0319166001600160a01b03909216919091179055806115da565b602480546001600160a01b0319166001600160a01b03909216919091179055816115bd565b602380546001600160a01b0319166001600160a01b039092169190911790558161159f565b602280546001600160a01b0319166001600160a01b0390921691909117905581611581565b602180546001600160a01b0319166001600160a01b0390921691909117905581611563565b602080546001600160a01b0319166001600160a01b0390921691909117905581611545565b601e80546001600160a01b0319166001600160a01b0390921691909117905581611527565b601f80546001600160a01b0319166001600160a01b0390921691909117905581611509565b6001600160601b0360a01b6012541617601255816114eb565b6001600160601b0360a01b6011541617601155816114cd565b6001600160601b0360a01b600b541617600b55816114af565b6001600160601b0360a01b600a541617600a5581611491565b6001600160601b0360a01b600954161760095581611473565b6001600160601b0360a01b600854161760085581611455565b6001600160601b0360a01b600654161760065581611437565b6001600160601b0360a01b600754161760075581611419565b6001600160601b0360a01b6005541617600555816113fb565b6001600160601b0360a01b6013541617601355816113dd565b601555816113bf565b601880546001600160a01b0319166001600160a01b03909216919091179055816113b3565b81516001600160a01b03166000805160206152ec83398151915282015560209091019060010161138d565b6118a190846000805160206152ec83398151915291820191016139c6565b84611383565b634e487b7160e01b600052604160045260246000fd5b6001600160601b0360a01b600d541617600d558161134d565b6001600160601b0360a01b600c541617600c558161132f565b60405162461bcd60e51b815260206004820152600360248201526206531360ec1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303960e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526208a60760eb1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303760e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526222981b60e91b6044820152606490fd5b600480546001600160a01b0319166001600160a01b0390921691909117905581611230565b6001600160601b0360a01b600254161760025581611212565b6001600160601b0360a01b6016541617601655816111f4565b601d80546001600160a01b0319166001600160a01b03909216919091179055816111d6565b6001600160601b0360a01b6003541617600355816111b8565b600180546001600160a01b0319166001600160a01b039092169190911790558161119e565b346106f5576020806003193601126106f557600060e0604051611aa28161344a565b60608152828482015282604082015282606082015260606080820152606060a08201528260c0820152015260043560005260288152604060002090600760405192611aec8461344a565b604051611afd81610a878185613e0b565b845260018101548385015260018060a01b03806002830154166040860152806003830154166060860152604051611b3b81610a878160048701613e0b565b6080860152604051611b5481610a878160058701613e0b565b60a086015260068201541660c0850152015460e0830152610b126040519282849384528301906138c6565b346106f55760603660031901126106f5576001600160401b036004358181116106f557611bb090369060040161352a565b602435908115158083036106f5576044358481116106f5576004611c55611bdc6003933690840161359c565b95611be5613f3d565b611bfa60018060a01b03600054163314613f02565b60405190611c4487519160209684888096818d0196611c1a81838a613651565b60269082019081520301902001805460ff60a01b191691151560a01b60ff60a01b16919091179055565b604051809381928951928391613651565b81016026815203019020019380519586116118a757611c748686613fea565b8181018095600052826000208760051c9060005b828110611d8757508495969798601f1981168082039103611d2e575b50505050611cc060409493945195606087526060870190613674565b92828601528483036040860152519182815201939160005b828110611d0c577fb9882473d401a9a51525cc8670f35d0cf286c98b8827cb9edc80f4782c0f8a6585870386a16001602b55005b9091929482806001928851611d2081613699565b815201960193929101611cd8565b9260009360005b818110611d4a57505050015586808080611ca4565b919596611d7760019294959684895191611d6383613699565b9060ff809160031b9316831b921b19161790565b9601910191879695949392611d35565b6000805b87808210611da157505082820155600101611c88565b611db6879383600194995191611d6383613699565b92019501611d8b565b346106f5576003196020368201126106f5576004356001600160401b0381116106f5576101a0813603928301126106f557606060405192611dff8461342f565b611e0b83600401613571565b845260248301356020850152611e2436604485016137da565b604085015260e31901126106f557604051611e3e81613466565b60e482013581526101048201356020820152610124820135604082015260608301526101448101356001600160401b0381116106f557611ea891611e8b6101849260043691840101613835565b6080850152611e9d6101648201613571565b60a085015201613571565b60c0820152602a5460ff81166127045760646020830151116126d957611ed16060830151613eb9565b156126ae5760ff1916600117602a5580516001600160a01b0316611ef481613ea1565b156126a6575b60408201519060406060840151612084608086015193835195611f1c87613481565b3387523360208801526000858801526000606088015260018060a01b0382166080880152600060a0880152600060c0880152600060e08801526000610100880152600061012088015260006101408801526000610160880152600061018088015260006101a0880152836101c088015260006101e088015260006102008801526000610220880152600061024088015260326102608801526000610280880152856102a088015260006102c08801526102e08701526000610300870152600061032087015260006103408701526000610360870152600061038087015260006103a087015260006103c087015260006103e08701526000610400870152336001600160601b0360a01b600054161760005561204e3360018060a01b03166001600160601b0360a01b6001541617600155565b600280546001600160a01b03199081169091556003805482169055600480549091166001600160a01b0392909216919091179055565b600580546001600160a01b03199081169091556006805482169055600780548216905560088054821690556009805482169055600a805482169055600b805482169055600c805482169055600d8054821690558151600e556020820151600f5591015160105560118054821690556012805482169055601380548216905560148054821690556032601555601680549091169055518051906001600160401b0382116118a757600160401b82116118a75760209060175483601755808410612682575b5001601760005260005b828110612657576102c0840151601880546001600160a01b0319166001600160a01b0392909216919091179055846122b68560806102e08201516121a48151151560ff8019601954169115151617601955565b6020810151151561ff006019549160081b169061ff001916176019556040810151601a556121e46060820151151560ff8019601b54169115151617601b55565b0151601c55610300810151601d80546001600160a01b03199081166001600160a01b0393841617909155610320830151601e80548316918416919091179055610340830151601f805483169184169190911790556103608301516020805483169184169190911790556103808301516021805483169184169190911790556103a08301516022805483169184169190911790556103c08301516023805483169184169190911790556103e083015160248054831691841691909117905561040090920151602580549093169116179055565b7f89cde5a76c5006132366331fdbb5a86401340c508029df5ad27029625b35486c604051806122e4816139dd565b0390a16020810151602d6040516c1d985d5b1d17da185c9d995cdd609a1b81526029600d820152205560026031604051706163636f756e74735f776974686472617760781b815260296011820152205560405161234081613466565b6002815260005b6040811061264657506124407f1d5d5a6aeda19185043499093fee83fda5f443876a815bdd5dfb5e4bb18576c3916040516123818161349d565b600d81526c1d985d5b1d17da185c9d995cdd609a1b60208201526123a482613bdd565b526123ae81613bdd565b506040516123bb8161349d565b60118152706163636f756e74735f776974686472617760781b60208201526123e282613c00565b526123ec81613c00565b506040516123f981613466565b600281526040366020830137602085015161241382613bdd565b52600261241f82613c00565b526040519161242d8361349d565b8252602082015260405191829182613c24565b0390a160a081015160c090910151604051916007916001600160a01b03908116911661246b8461344a565b6040516124778161349d565b838152662837b63cb3b7b760c91b6020820152845261254e602085019246845260408601928352606086019081526125446040516124b4816134b8565b6000815260808801908152604051926124cc846134b8565b6000845260a0890193845260c08901956000875260e08a01976000895246600052602860205261250260406000209b518c613d07565b5160018b01555160028a0180546001600160a01b03199081166001600160a01b0393841617909155915160038b01805490931691161790555160048801613d07565b5160058601613d07565b600684019060018060a01b039051166001600160601b0360a01b825416179055519101554660005260286020527f7c12821b273676cb850b9cef8196a8c54dcf6789078c6aa5dc7a3c0d652e6b586040600020604051809146825260406020830152610100604083015260076126246125cb610140850184613e0b565b6001840154606086015260028401546001600160a01b03908116608087015260038501541660a0860152848103603f1990810160c0870152906126119060048601613e0b565b908582030160e086015260058401613e0b565b60068301546001600160a01b03166101008501529101546101208301520390a1005b806060602080938501015201612347565b81516001600160a01b03166000805160206152ec833981519152820155602090910190600101612151565b6126a090846000805160206152ec83398151915291820191016139c6565b85612147565b506000611efa565b60405162461bcd60e51b815260206004820152600360248201526245303360e81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526222981960e91b6044820152606490fd5b60405162461bcd60e51b815260206004820152600360248201526245303160e81b6044820152606490fd5b346106f55761273d36613603565b949592949193909290918015612a175761275690614925565b9160275494858510156129dc5760009461276f87613585565b9661277d60405198896134ee565b80885261278c601f1991613585565b0160005b8181106129cb5750505b60275481101561296657886020856127ba6127b485614050565b50614975565b6127db868d89604051978896879663c5795f9160e01b885260048801614a08565b038173__$f284c32d832c07e2014212a56f3cfbb80e$__5af490811561295a57600091612920575b50612817575b61281290613f93565b61279a565b946129186128129161282b6127b489614050565b6128cb6040519161283b8361344a565b60405161284c81610a878185613e0b565b835260018101546020840152600560018060a01b03918260028201541660408601526003810154928316606086015260ff928360a091821c1615156080870152604051906128a8826128a18160048701614075565b03836134ee565b86015201548181166128b981613699565b60c085015260081c1660e08301613fde565b6128d58989613c10565b526128e08888613c10565b50610a876128fd6128f08a614050565b5060405192838092613e0b565b612907828b613c10565b52612912818a613c10565b50613f93565b959050612809565b90506020813d602011612952575b8161293b602093836134ee565b810103126106f55761294c90614883565b8a612803565b3d915061292e565b6040513d6000823e3d90fd5b868661297181614925565b9160005b82811061298a5760405180610b12868261376b565b806129a161299b6129c69385613c10565b51613fb8565b6129b16040519161283b8361344a565b6129bb8287613c10565b526129128186613c10565b612975565b806060602080938c01015201612790565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642073746172742076616c756560681b6044820152606490fd5b50612756602754614925565b346106f5576003196020368201126106f5576004356001600160401b0381116106f557612a5490369060040161352a565b90612a5d613f3d565b612a7260018060a01b03600054163314613f02565b600060056040516020818651612a8b8183858b01613651565b81016026815203019020612a9e8161483a565b82600182015582600282015582600382015560048101805484825580612dfb575b5050015573__$cdb3a974a6603f5f21ad73b7f4e0c6fc0b$__90604051906373b64e1560e01b8252816044810191604060048301526027548093526064820160648460051b8401019360276000526000805160206152cc833981519152916000905b828210612dcd5750505050612b43838392836040960301602484015287613674565b0381855af4801561295a57600091600091612d8d575b50612b98575b7fe32a4c2d651b9ed525fee9107375614fd62cece77c73592d4b8960018f64a96a61091584604051918291602083526020830190613674565b60009060446040518094819363645b587d60e11b83526027600484015260248301525af490811561295a57600091612c76575b50805190600160401b82116118a75760275482602755808310612c30575b5060200160276000526000805160206152cc8339815191526000915b838310612c13575050612b5f565b6001602082612c2483945186613d07565b01920192019190612c05565b60276000526000805160206152cc83398151915201826000805160206152cc833981519152015b818110612c645750612be9565b80612c7060019261483a565b01612c57565b3d9150816000823e612c8882826134ee565b60208183810103126106f55780516001600160401b0381116106f557828201601f8284010112156106f5578082015190612cc182613585565b93612ccf60405195866134ee565b828552602085019080850160208560051b8588010101116106f557602083860101915b60208560051b85880101018310612d0f5750505050505082612bcb565b82516001600160401b0381116106f557828701603f82878a01010112156106f557602081868901010151612d428161350f565b92612d5060405194856134ee565b818452848901604083858a8d01010101116106f55783612d80602095938b604088978c8980990193010101613651565b8152019301929050612cf2565b9150506040813d604011612dc5575b81612da9604093836134ee565b810103126106f557612dbf602082519201614883565b84612b59565b3d9150612d9c565b91939450919460206001612deb81936063198b820301865289613e0b565b9701920192018694939192612b21565b612e13918552601f602086209101841c8101906139c6565b8580612abf565b346106f557612e2836613603565b9095929490939092918415612f6d57612e4085614925565b9560279788548110156129dc575b8854811015612f5c5785602086612e676127b485614050565b612e8887878a604051978896879663c5795f9160e01b885260048801614a08565b038173__$f284c32d832c07e2014212a56f3cfbb80e$__5af490811561295a57600091612f22575b50612eeb575b86612eca575b612ec590613f93565b612e4e565b86885103612ebc5750505050505050610b1291505b6040519182918261376b565b612ef76127b482614050565b612f076040519161283b8361344a565b612f11828a613c10565b52612f1c8189613c10565b50612eb6565b90506020813d602011612f54575b81612f3d602093836134ee565b810103126106f557612f4e90614883565b8a612eb0565b3d9150612f30565b50505050505050610b129150612edf565b612e40602754614925565b346106f557600319906020368301126106f5576004356001600160401b03928382116106f55760e09082360301126106f557612fb38261342f565b8060040135825260248101358381116106f557612fd6906004369184010161352a565b6020830152612fe760448201613571565b9060408301918252612ffb60648201613571565b906060840191825260848101358581116106f55761301f906004369184010161359c565b916080850192835260a48201359160038310156106f55760a0860192835260c401359260048410156106f55760c0860193845261305a613f3d565b61306f60018060a01b03600054163314613f02565b855180613429575046935b825161308e906001600160a01b0316613ea1565b156133d557602087015195519251915193516001600160a01b039384169390921691906130ba82613699565b519260048410156133405761311761318194604051986130d98a61344a565b895260208901978852604089019283526060890194855260808901936001855260a08a0197885261310981613699565b60c08a015260e08901613fde565b6131246020890151613fb8565b95613130885188613d07565b516001870155516002860180546001600160a01b0319166001600160a01b03928316179055915160038601805492516001600160a81b0319909316919093161790151560a01b60ff60a01b16179055565b60048201905180519586116118a75760209061319d8784613fea565b0190600052602060002060005b8660051c811061339c5750601f198616860380613356575b50505060c082015192935060050191906131db82613699565b6131e482613699565b60e0835491015160048110156133405761ff0060ff9160081b1692169061ffff1916171790556020810151602754600160401b8110156118a75780600161322e9201602755614050565b91909161332a577f1c0630404592f1ad0e9237c8ae81a7e9a04807e69b961448e743135ec51333d89261326660209261329e94613d07565b0151604051602081835161327d8183858801613651565b81016026815203019020610915604051938493604085526040850190613674565b838103602085015260ff60e0600561330a6132c0610100808752860188613e0b565b6001880154602087015260028801546001600160a01b0390811660408801526003890154908116606088015260a090811c8616151560808801528682039087015260048801614075565b9501549282841661331a81613699565b60c0820152019160081c166136a3565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602160045260246000fd5b9160009260005b81811061337a575050506005939495841c015583929185806131c2565b909193602061339260019284885191611d6383613699565b950192910161335d565b6000805b602081106133b55750828201556001016131aa565b939060206133cc60019287855191611d6383613699565b920194016133a0565b60405162461bcd60e51b815260206004820152602660248201527f4661696c656420746f2076616c6964617465207969656c6420746f6b656e206160448201526564647265737360d01b6064820152608490fd5b9361307a565b60e081019081106001600160401b038211176118a757604052565b61010081019081106001600160401b038211176118a757604052565b606081019081106001600160401b038211176118a757604052565b61042081019081106001600160401b038211176118a757604052565b604081019081106001600160401b038211176118a757604052565b602081019081106001600160401b038211176118a757604052565b60a081019081106001600160401b038211176118a757604052565b90601f801991011681019081106001600160401b038211176118a757604052565b6001600160401b0381116118a757601f01601f191660200190565b81601f820112156106f5578035906135418261350f565b9261354f60405194856134ee565b828452602083830101116106f557816000926020809301838601378301015290565b35906001600160a01b03821682036106f557565b6001600160401b0381116118a75760051b60200190565b81601f820112156106f5578035916135b383613585565b926135c160405194856134ee565b808452602092838086019260051b8201019283116106f5578301905b8282106135eb575050505090565b813560038110156106f55781529083019083016135dd565b60e09060031901126106f5576004359060243560038110156106f5579060443560038110156106f5579060643560048110156106f5579060843560038110156106f5579060a4359060c43590565b60005b8381106136645750506000910152565b8181015183820152602001613654565b9060209161368d81518092818552858086019101613651565b601f01601f1916010190565b6003111561334057565b9060048210156133405752565b906136c48251610100808452830190613674565b916020808201518184015260018060a01b03806040840151166040850152606083015116606084015260808201511515608084015260a08201519383810360a085015281808651928381520195019160005b82811061374957505050509060e0808360c061374695015161373781613699565b60c085015201519101906136a3565b90565b909192958280600192895161375d81613699565b815201970193929101613716565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061379f5750505050505090565b90919293949584806137bd600193603f198682030187528a516136b0565b980193019301919493929061378f565b359081151582036106f557565b91908260a09103126106f5576040516137f2816134d3565b6080808294613800816137cd565b845261380e602082016137cd565b602085015260408101356040850152613829606082016137cd565b60608501520135910152565b9190602080848303126106f5576040519061384f826134b8565b81948035906001600160401b0382116106f557019280601f850112156106f557833561387a81613585565b9461388860405196876134ee565b818652838087019260051b8201019283116106f5578301905b8282106138af575050505052565b8380916138bb84613571565b8152019101906138a1565b9060e0806138dd8451610100808652850190613674565b936020810151602085015261393261392060018060a01b039687604085015116604088015287606085015116606088015260808401518782036080890152613674565b60a083015186820360a0880152613674565b9460c08201511660c0850152015191015290565b9080601f830112156106f55781359061395e82613585565b9261396c60405194856134ee565b828452602092838086019160051b830101928084116106f557848301915b84831061399a5750505050505090565b82356001600160401b0381116106f55786916139bb8484809489010161352a565b81520192019161398a565b8181106139d1575050565b600081556001016139c6565b60209081815260018060a01b03918260005416818301526001928084541660408401528060025416606084015280600354166080840152806004541660a0840152806005541660c0840152806006541660e084015280600754166101008401528060085416610120840152806009541661014084015280600a541661016084015280600b541661018084015280600c54166101a084015280600d54166101c0840152600e546101e0840152600f5461020084015260105461022084015280601154166102408401528060125416610260840152806013541661028084015280601454166102a08401526015546102c084015280601654166102e08401526104e0918261030085015261052084018161050086015260175480915261054085019560176000526000805160206152ec8339815191529160005b818110613bc857505050508190816018541661032086015260ff601954818116151561034088015260081c161515610360860152601a5461038086015260ff601b541615156103a0860152601c546103c086015281601d54166103e086015281601e541661040086015281601f541661042086015254166104408401528060215416610460840152806022541661048084015280602354166104a084015280602454166104c08401526025541691015290565b83548616895297840197928201928201613b15565b805115613bea5760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015613bea5760400190565b8051821015613bea5760209160051b010190565b906020908183526060830190805191604084860152825180915260808501908460808260051b8801019401916000905b828210613ca05750505050820151926040601f198284030191015281808451928381520193019160005b828110613c8c575050505090565b835185529381019392810192600101613c7e565b90919295948580613cbd600193607f198c82030186528a51613674565b9798019493919091019101613c54565b90600182811c92168015613cfd575b6020831014613ce757565b634e487b7160e01b600052602260045260246000fd5b91607f1691613cdc565b91909182516001600160401b0381116118a757613d248254613ccd565b601f8111613dce575b50602080601f8311600114613d6a575081929394600092613d5f575b50508160011b916000199060031b1c1916179055565b015190503880613d49565b90601f198316958460005282600020926000905b888210613db657505083600195969710613d9d575b505050811b019055565b015160001960f88460031b161c19169055388080613d93565b80600185968294968601518155019501930190613d7e565b613dfb90836000526020600020601f840160051c81019160208510613e01575b601f0160051c01906139c6565b38613d2d565b9091508190613dee565b9060009291805491613e1c83613ccd565b918282526001938481169081600014613e7e5750600114613e3e575b50505050565b90919394506000526020928360002092846000945b838610613e6a575050505001019038808080613e38565b805485870183015294019385908201613e53565b9294505050602093945060ff191683830152151560051b01019038808080613e38565b6001600160a01b031615613eb457600190565b600090565b805190602081015190818310159283613ef3575b5082613ee4575b5050613edf57600090565b600190565b60400151101590503880613ed4565b60408201511115925038613ecd565b15613f0957565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b6002602b5414613f4e576002602b55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6000198114613fa25760010190565b634e487b7160e01b600052601160045260246000fd5b6020613fd1918160405193828580945193849201613651565b8101602681520301902090565b60048210156133405752565b90600160401b81116118a757815481835580821061400757505050565b61403392600052601f6020600020918180850160051c8401941680614035575b500160051c01906139c6565b565b600019908186019182549160200360031b1c16905538614027565b602754811015613bea5760276000526000805160206152cc8339815191520190600090565b805480835260208093019160005282600020906000915b8482601f8501106145735750549184828210614557575b828210614538575b828210614519575b8282106144fa575b8282106144dc575b8282106144bd575b82821061449e575b82821061447f575b828210614460575b828210614441575b828210614422575b828210614403575b8282106143e4575b8282106143c5575b8282106143a6575b828210614387575b828210614368575b828210614349575b82821061432a575b82821061430b575b8282106142ec575b8282106142cd575b8282106142ae575b82821061428f575b828210614270575b828210614251575b828210614232575b828210614213575b8282106141f4575b8282106141d5575b8282106141b6575b50106141a0575b50905090565b60f81c6141ac81613699565b815201803861419a565b6001919460ff8560f01c166141ca81613699565b815201930184614193565b6001919460ff8560e81c166141e981613699565b81520193018461418b565b6001919460ff8560e01c1661420881613699565b815201930184614183565b6001919460ff8560d81c1661422781613699565b81520193018461417b565b6001919460ff8560d01c1661424681613699565b815201930184614173565b6001919460ff8560c81c1661426581613699565b81520193018461416b565b6001919460ff8560c01c1661428481613699565b815201930184614163565b6001919460ff8560b81c166142a381613699565b81520193018461415b565b6001919460ff8560b01c166142c281613699565b815201930184614153565b6001919460ff8560a81c166142e181613699565b81520193018461414b565b6001919460ff8560a01c1661430081613699565b815201930184614143565b6001919460ff8560981c1661431f81613699565b81520193018461413b565b6001919460ff8560901c1661433e81613699565b815201930184614133565b6001919460ff8560881c1661435d81613699565b81520193018461412b565b6001919460ff8560801c1661437c81613699565b815201930184614123565b6001919460ff8560781c1661439b81613699565b81520193018461411b565b6001919460ff8560701c166143ba81613699565b815201930184614113565b6001919460ff8560681c166143d981613699565b81520193018461410b565b6001919460ff8560601c166143f881613699565b815201930184614103565b6001919460ff8560581c1661441781613699565b8152019301846140fb565b6001919460ff8560501c1661443681613699565b8152019301846140f3565b6001919460ff8560481c1661445581613699565b8152019301846140eb565b6001919460ff8560401c1661447481613699565b8152019301846140e3565b6001919460ff8560381c1661449381613699565b8152019301846140db565b6001919460ff8560301c166144b281613699565b8152019301846140d3565b6001919460ff8560281c166144d181613699565b8152019301846140cb565b6001919460ff85831c166144ef81613699565b8152019301846140c3565b6001919460ff8560181c1661450e81613699565b8152019301846140bb565b6001919460ff8560101c1661452d81613699565b8152019301846140b3565b6001919460ff8560081c1661454c81613699565b8152019301846140ab565b6001919460ff851661456881613699565b8152019301846140a3565b9093610400600191865460ff811661458a81613699565b825260ff8160081c1661459c81613699565b8583015260ff8160101c166145b081613699565b604083015260ff8160181c166145c581613699565b606083015260ff81861c166145d981613699565b608083015260ff8160281c166145ee81613699565b60a083015260ff8160301c1661460381613699565b60c083015261461760ff8260381c16613699565b60ff8160381c1660e083015260ff8160401c1661463381613699565b61010083015260ff8160481c1661464981613699565b61012083015260ff8160501c1661465f81613699565b61014083015260ff8160581c1661467581613699565b61016083015260ff8160601c1661468b81613699565b61018083015260ff8160681c166146a181613699565b6101a083015260ff8160701c166146b781613699565b6101c083015260ff8160781c166146cd81613699565b6101e083015260ff8160801c166146e381613699565b61020083015260ff8160881c166146f981613699565b61022083015260ff8160901c1661470f81613699565b61024083015260ff8160981c1661472581613699565b61026083015260ff8160a01c1661473b81613699565b61028083015260ff8160a81c1661475181613699565b6102a083015260ff8160b01c1661476781613699565b6102c083015260ff8160b81c1661477d81613699565b6102e083015260ff8160c01c1661479381613699565b61030083015260ff8160c81c166147a981613699565b61032083015260ff8160d01c166147bf81613699565b61034083015260ff8160d81c166147d581613699565b61036083015260ff8160e01c166147eb81613699565b61038083015260ff8160e81c1661480181613699565b6103a083015260ff8160f01c1661481781613699565b6103c083015260f81c61482981613699565b6103e082015201940192019161408c565b6148448154613ccd565b908161484e575050565b81601f60009311600114614860575055565b90808391825261487f601f60208420940160051c8401600185016139c6565b5555565b519081151582036106f557565b90604051916020926148be8482816148b18183019687815193849201613651565b81010380845201826134ee565b519020916148de6040519182816148b18183019687815193849201613651565b5190201490565b604051906148f28261344a565b816060815260e0600091826020820152826040820152826060820152826080820152606060a08201528260c08201520152565b9061492f82613585565b61493c60405191826134ee565b828152809261494d601f1991613585565b019060005b82811061495e57505050565b6020906149696148e5565b82828501015201614952565b60405190816000825461498781613ccd565b936001918083169081156149ec57506001146149af575b505060209250602681520301902090565b90915060005260209081600020906000915b8583106149d857505050506020918101388061499e565b8054878401528694509183019181016149c1565b92505050602093915060ff19168252801515028101388061499e565b9391969594929060c0855261010060c0860152614a296101c0860182613e0b565b600182015460e087015260028201546001600160a01b03908116610100880152600383015490811661012088015260a01c60ff16151561014087015285810360bf190161016087015260048201805480835260009182526020808320930193925b81601f840110615004579160a09897959391614bfb9795935491818110614fe7575b818110614fc7575b818110614fa7575b818110614f87575b818110614f68575b818110614f48575b818110614f28575b818110614f08575b818110614ee8575b818110614ec8575b818110614ea8575b818110614e88575b818110614e68575b818110614e48575b818110614e28575b818110614e08575b818110614de8575b818110614dc8575b818110614da8575b818110614d88575b818110614d69575b818110614d49575b818110614d29575b818110614d09575b818110614ce9575b818110614cc9575b818110614ca9575b818110614c89575b818110614c69575b818110614c49575b818110614c29575b10614c08575b506005614bcf91015460ff8116614bb881613699565b61018089015260ff6101a089019160081c166136a3565b986020860152614bde81613699565b6040850152614bec81613699565b606084015260808301906136a3565b614c0483613699565b0152565b6020614bcf929360059260f81c614c1e81613699565b815201929150614ba2565b93602060019160ff8560f01c16614c3f81613699565b8152019401614b9c565b93602060019160ff8560e81c16614c5f81613699565b8152019401614b94565b93602060019160ff8560e01c16614c7f81613699565b8152019401614b8c565b93602060019160ff8560d81c16614c9f81613699565b8152019401614b84565b93602060019160ff8560d01c16614cbf81613699565b8152019401614b7c565b93602060019160ff8560c81c16614cdf81613699565b8152019401614b74565b93602060019160ff8560c01c16614cff81613699565b8152019401614b6c565b93602060019160ff8560b81c16614d1f81613699565b8152019401614b64565b93602060019160ff8560b01c16614d3f81613699565b8152019401614b5c565b93602060019160ff8560a81c16614d5f81613699565b8152019401614b54565b93602060019160ff858e1c16614d7e81613699565b8152019401614b4c565b93602060019160ff8560981c16614d9e81613699565b8152019401614b44565b93602060019160ff8560901c16614dbe81613699565b8152019401614b3c565b93602060019160ff8560881c16614dde81613699565b8152019401614b34565b93602060019160ff8560801c16614dfe81613699565b8152019401614b2c565b93602060019160ff8560781c16614e1e81613699565b8152019401614b24565b93602060019160ff8560701c16614e3e81613699565b8152019401614b1c565b93602060019160ff8560681c16614e5e81613699565b8152019401614b14565b93602060019160ff8560601c16614e7e81613699565b8152019401614b0c565b93602060019160ff8560581c16614e9e81613699565b8152019401614b04565b93602060019160ff8560501c16614ebe81613699565b8152019401614afc565b93602060019160ff8560481c16614ede81613699565b8152019401614af4565b93602060019160ff8560401c16614efe81613699565b8152019401614aec565b93602060019160ff8560381c16614f1e81613699565b8152019401614ae4565b93602060019160ff8560301c16614f3e81613699565b8152019401614adc565b93602060019160ff8560281c16614f5e81613699565b8152019401614ad4565b93602060019160ff85831c16614f7d81613699565b8152019401614acc565b93602060019160ff8560181c16614f9d81613699565b8152019401614ac4565b93602060019160ff8560101c16614fbd81613699565b8152019401614abc565b93602060019160ff8560081c16614fdd81613699565b8152019401614ab4565b93602060019160ff8516614ffa81613699565b8152019401614aac565b936001610400602092875460ff811661501c81613699565b825260ff8160081c1661502e81613699565b8583015260ff8160101c1661504281613699565b604083015260ff8160181c1661505781613699565b606083015261506a60ff82871c16613699565b60ff81861c16608083015260ff8160281c1661508581613699565b60a083015260ff8160301c1661509a81613699565b60c083015260ff8160381c166150af81613699565b60e083015260ff8160401c166150c481613699565b61010083015260ff8160481c166150da81613699565b61012083015260ff8160501c166150f081613699565b61014083015260ff8160581c1661510681613699565b61016083015260ff8160601c1661511c81613699565b61018083015260ff8160681c1661513281613699565b6101a083015260ff8160701c1661514881613699565b6101c083015260ff8160781c1661515e81613699565b6101e083015260ff8160801c1661517481613699565b61020083015260ff8160881c1661518a81613699565b61022083015260ff8160901c166151a081613699565b61024083015260ff8160981c166151b681613699565b61026083015260ff8160a01c166151cc81613699565b61028083015260ff8160a81c166151e281613699565b6102a083015260ff8160b01c166151f881613699565b6102c083015260ff8160b81c1661520e81613699565b6102e083015260ff8160c01c1661522481613699565b61030083015260ff8160c81c1661523a81613699565b61032083015260ff8160d01c1661525081613699565b61034083015260ff8160d81c1661526681613699565b61036083015260ff8160e01c1661527c81613699565b61038083015260ff8160e81c1661529281613699565b6103a083015260ff8160f01c166152a881613699565b6103c083015260f81c6152ba81613699565b6103e0820152019501920191614a8a56fe98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195bc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15a2646970667358221220bb83b582481c723a816a1c8533d4953848aa960f729c6968ff605117720acd9d64736f6c63430008120033";

type RegistrarConstructorParams =
  | [linkLibraryAddresses: RegistrarLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Registrar__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: RegistrarLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f284c32d832c07e2014212a56f3cfbb80e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/core/registrar/registrar.sol:RegistrarLib"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cdb3a974a6603f5f21ad73b7f4e0c6fc0b\\$__", "g"),
      linkLibraryAddresses["contracts/lib/Strings/string.sol:StringArray"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}

export interface RegistrarLibraryAddresses {
  ["contracts/core/registrar/registrar.sol:RegistrarLib"]: string;
  ["contracts/lib/Strings/string.sol:StringArray"]: string;
}
