/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RouterLib,
  RouterLibInterface,
} from "../../../../contracts/core/router/RouterLib";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
          {
            internalType: "enum IRouter.VaultActionStatus",
            name: "status",
            type: "IRouter.VaultActionStatus",
          },
        ],
        internalType: "struct IRouter.VaultActionData",
        name: "_calldata",
        type: "tuple",
      },
    ],
    name: "packCallData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "unpackCalldata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "destinationChain",
            type: "string",
          },
          {
            internalType: "bytes4",
            name: "strategyId",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "uint32[]",
            name: "accountIds",
            type: "uint32[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liqAmt",
            type: "uint256",
          },
          {
            internalType: "enum IRouter.VaultActionStatus",
            name: "status",
            type: "IRouter.VaultActionStatus",
          },
        ],
        internalType: "struct IRouter.VaultActionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576106839081610020823930815050f35b600080fdfe6080806040526004908136101561001557600080fd5b60003560e01c9081638c73cf12146102e8575063f5e4ff3f1461003757600080fd5b60203660031901126102c657803567ffffffffffffffff918282116102c657366023830112156102c65781602461007393369301359101610569565b600060e0604051610083816104f8565b606081528260208201528260408201526060808201528260808201528260a08201528260c082015201528051810161010082602083019203126102c65760208201518381116102c65782019181603f840112156102c6576020830151926100e98461054d565b936100f7604051958661052b565b80855283604082840101116102c6576101179160406020870191016105cd565b61012360408201610638565b9161013060608301610638565b9460808301519081116102c65782019080603f830112156102c65760208201519061015a826105b5565b92610168604051948561052b565b8284526040602085019360051b8201019182116102c657604001915b8183106102cb5750505060a08201516001600160a01b038116908190036102c65760c08301519161010060e08501519401519660058810156102c657604051966101cd886104f8565b8752602087019563ffffffff60e01b168652604087019063ffffffff60e01b168152606087019182526080870192835260a0870193845260c0870194855260e0870197885261023160405197602089525161010060208a01526101208901906105f0565b95516001600160e01b03199081166040890152905116606087015251858503601f1901608087015280518086526020958601959091019060005b8181106102aa57505090516001600160a01b031660a0860152505160c08401525160e08301529151909182916102a690610100840190610615565b0390f35b825163ffffffff1687526020968701969092019160010161026b565b600080fd5b825163ffffffff811681036102c657815260209283019201610184565b905060206003199281843601126102c65780359267ffffffffffffffff948585116102c6576101009085360301126102c657610323816104f8565b838201358581116102c6578401366023820112156102c65761034e9036906024858201359101610569565b815261035c602485016105a0565b9383820194855261036f604482016105a0565b956040830196875260648201359081116102c657810192366023850112156102c6578301359561039e876105b5565b936103ac604051958661052b565b8785528585016024819960051b830101913683116102c657602401905b8282106104dc575050506060830184905260848201356001600160a01b038116908181036102c657608085015260a4830135918260a086015260e460c4850135948560c088015201359460058610156102c6578560e0820152519763ffffffff60e01b8091511691511661044c604051996101008a8c01526101208b01906105f0565b9160408a0152606089015286601f1996878a84030160808b0152519182815201989060005b8181106104c2575050506104ae9493879389936104a29360a087015260c086015260e0850152610100840190610615565b0390810184528361052b565b6102a66040519282849384528301906105f0565b825163ffffffff168b529988019991880191600101610471565b813563ffffffff811681036102c65781529087019087016103c9565b610100810190811067ffffffffffffffff82111761051557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761051557604052565b67ffffffffffffffff811161051557601f01601f191660200190565b9291926105758261054d565b91610583604051938461052b565b8294818452818301116102c6578281602093846000960137010152565b35906001600160e01b0319821682036102c657565b67ffffffffffffffff81116105155760051b60200190565b60005b8381106105e05750506000910152565b81810151838201526020016105d0565b90602091610609815180928185528580860191016105cd565b601f01601f1916010190565b9060058210156106225752565b634e487b7160e01b600052602160045260246000fd5b51906001600160e01b0319821682036102c65756fea26469706673582212203bf13fd86eeb063371dd8a7cb87fee240fb663b9a085533e7de0038fc193eb6a64736f6c63430008120033";

type RouterLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterLib__factory extends ContractFactory {
  constructor(...args: RouterLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RouterLib> {
    return super.deploy(overrides || {}) as Promise<RouterLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RouterLib {
    return super.attach(address) as RouterLib;
  }
  override connect(signer: Signer): RouterLib__factory {
    return super.connect(signer) as RouterLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterLibInterface {
    return new utils.Interface(_abi) as RouterLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterLib {
    return new Contract(address, _abi, signerOrProvider) as RouterLib;
  }
}
