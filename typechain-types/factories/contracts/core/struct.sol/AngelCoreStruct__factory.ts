/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import type {Provider, TransactionRequest} from "@ethersproject/providers";
import type {PromiseOrValue} from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "endowId",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "fundId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "splits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c5761112490816100228239308160080152f35b600080fdfe604060808152307f0000000000000000000000000000000000000000000000000000000000000000146004908136101561003857600080fd5b600090813560e01c9081632a0bc0601461062a578163564343ff146109dd57816367efb786146109a85781636f331a141461095d578163855762df14610747578163973d5ef514610663578163ad60ed5a1461062a578163b4feed2a146105f9578163b8108b2c14610544578163b9fb75c5146104e4578163bb37a28314610467578163d0352ce8146103ff578163e84b82f714610250575063e9f47427146100e057600080fd5b606036600319011261024d5781359267ffffffffffffffff9182851161024d573660238601121561024d57848401359361011985610d22565b9561012684519788610ca9565b85875260209560248789019160051b8301019136831161024957602401905b828210610226575050506024359384116102225736602385011215610222578301359261017184610d22565b9361017e84519586610ca9565b80855260248686019160051b8301019136831161021e57929592602401905b82821061020f575050506101af610c1b565b6001600160a01b0390811691855b875160ff8216908110156102065784846101d7838c611022565b5116146101ee575b506101e990611011565b6101bd565b6101e99197506101fe9087611022565b5196906101df565b82888751908152f35b8135815290830190830161019d565b8380fd5b5080fd5b81356001600160a01b0381168103610245578152908701908701610145565b8580fd5b8480fd5b80fd5b848484926103fb57816003193601126103fb578035602491823567ffffffffffffffff8111610245576102869036908301610ccb565b938594602091828201965b855460001981019081116103e957808210156103db576102b18288610d5f565b5083516102d3816102c58982018095610dc7565b03601f198101835282610ca9565b5190206102f28a6102ff88875180938282019586918c51928391610acb565b8101038084520182610ca9565b51902014610316575061031190610d3a565b610291565b8661033e9596979899506103309294506103389350610d5f565b509186610d5f565b90610f87565b825480156103c95760001901936103558585610d5f565b9390936103b957505090849161036b8254610d8d565b908161037a575b505050505580f35b8390601f831160011461039557505050555b82848080610372565b83825281209290916103b290601f0160051c840160018501610e4a565b555561038c565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b50505050909192935061033e565b634e487b7160e01b8a5260118652878afd5b8280fd5b50508260031936011261024d57508035602435918282111561042f576020846104288585611004565b9051908152f35b606490602085519162461bcd60e51b83528201526012602482015271496e73756666696369656e742046756e647360701b6044820152fd5b82858560803660031901126103fb57602092503590610484610c05565b61048c610c1b565b9060ff8454161593846104a5575b505050519015158152f35b816104ba92939495506001606435920161109f565b9182156104cd575b50509083808061049a565b6001600160a01b03918216911614905083806104c2565b828585366003190160c0811261021e576060136103fb5781519061050782610c8d565b35815260243560208201526044358282015260a43590811515820361021e5790610538916084359060643590611036565b82519182526020820152f35b8385848060031936011261024d57806020835161056081610c5b565b845161056b81610c8d565b838152838382015283868201528152015281519161058883610c8d565b8183526020830190828252808401838152602082516105a681610c5b565b868152600391019081528251955163ffffffff16865292516020860152516001600160a01b0316908401525190838210156105e657608083836060820152f35b634e487b7160e01b815260218452602490fd5b838584606036600319011261024d5750610621602092610617610c05565b604435913561109f565b90519015158152f35b8285816003193601126102225761065f90610643610fcf565b5061064c610fcf565b9051918291602083526020830190610b93565b0390f35b82859161024d5761067336610bea565b829192935b835485101561074357600193835b8354811015610713576106998783610d5f565b508351906106e66106f2602092846106b48582018093610dc7565b03946106c8601f1996878101835282610ca9565b519020936106d6868a610d5f565b5093885193849182018096610dc7565b03908101835282610ca9565b51902014610709575b61070490610d3a565b610686565b93945084936106fb565b509394610724919561072a57610d3a565b93610678565b61073e6107378287610d5f565b5084610fac565b610d3a565b8280f35b849150610222576060366003190112610222578235906024359067ffffffffffffffff604435818111610245576107819036908801610ccb565b9160018690865491602093848701915b8460ff821610610905575050506107a6578680f35b600160401b95868210156108f257906107c491600182018155610d5f565b9390936108e05780519283116108cd579082916107eb836107e58754610d8d565b87610e61565b81601f84116001146108675750879261085c575b50508160011b916000199060031b1c19161790555b8054918210156108495761082f929350600182018155610d5f565b8154906000199060031b1b19169055808280808080808680f35b634e487b7160e01b835260418452602483fd5b0151905087806107ff565b8589528089209350601f1985169089905b8282106108b557505090846001959493921061089c575b505050811b019055610814565b015160001960f88460031b161c1916905587808061088f565b80600186978294978701518155019601940190610878565b634e487b7160e01b875260418852602487fd5b634e487b7160e01b8752868852602487fd5b634e487b7160e01b885260418952602488fd5b61090f818b610d5f565b508251610923816102c58a82018095610dc7565b51902082518781019061093e89828d516102f281878c610acb565b51902014610955575b61095090611011565b610791565b8a9350610947565b848484926103fb5760019161097136610c31565b949190828060a01b0316865201602052832090815492830180931161099557505580f35b634e487b7160e01b845260119052602483fd5b849150610222576109d86001916109be36610c31565b949190828060a01b03168652016020528320918254611004565b905580f35b82859161024d576109ed36610bea565b919081935b600293848301908154871015610ac757600193855b8783018054821015610a8757610a1d8a86610d5f565b506106e6610a688851610a588660209583610a3b8882018093610dc7565b0393610a4f601f1995868101835282610ca9565b51902096610d5f565b50938a5193849182018096610dc7565b51902014610a7f575b610a7a90610d3a565b610a07565b869550610a71565b5050958792610aa094989295610aa9575b505050610d3a565b939290926109f2565b610abf92610ab691610d5f565b50908501610fac565b808780610a98565b8480f35b60005b838110610ade5750506000910152565b8181015183820152602001610ace565b908082519081815260208091019281808460051b8301019501936000915b848310610b1c5750505050505090565b909192939495848080600193601f1980878303018852601f8c51610b4b81518092818752878088019101610acb565b011601019801930193019194939290610b0c565b90815180825260208080930193019160005b828110610b7f575050505090565b835185529381019392810192600101610b71565b610be7916060610bd6610bc4610bb28551608086526080860190610aee565b60208601518582036020870152610b5f565b60408501518482036040860152610aee565b920151906060818403910152610b5f565b90565b6040906003190112610c00576004359060243590565b600080fd5b602435906001600160a01b0382168203610c0057565b604435906001600160a01b0382168203610c0057565b6060906003190112610c0057600435906024356001600160a01b0381168103610c00579060443590565b6040810190811067ffffffffffffffff821117610c7757604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610c7757604052565b90601f8019910116810190811067ffffffffffffffff821117610c7757604052565b81601f82011215610c005780359067ffffffffffffffff8211610c775760405192610d00601f8401601f191660200185610ca9565b82845260208383010111610c0057816000926020809301838601378301015290565b67ffffffffffffffff8111610c775760051b60200190565b6000198114610d495760010190565b634e487b7160e01b600052601160045260246000fd5b8054821015610d775760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610dbd575b6020831014610da757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d9c565b600092918154610dd681610d8d565b92600191808316908115610e2f5750600114610df3575b50505050565b90919293945060005260209081600020906000915b858310610e1e5750505050019038808080610ded565b805485840152918301918101610e08565b60ff1916845250505081151590910201915038808080610ded565b818110610e55575050565b60008155600101610e4a565b9190601f8111610e7057505050565b610e9c926000526020600020906020601f840160051c83019310610e9e575b601f0160051c0190610e4a565b565b9091508190610e8f565b90808214610f8357610eba8154610d8d565b9067ffffffffffffffff8211610c77578190610ee082610eda8654610d8d565b86610e61565b600090601f8311600114610f1757600092610f0c575b50508160011b916000199060031b1c1916179055565b015490503880610ef6565b81526020808220858352818320935090601f1985169083905b828210610f6a575050908460019594939210610f51575b505050811b019055565b015460001960f88460031b161c19169055388080610f47565b8495819295850154815560018091019601940190610f30565b5050565b9190610f9657610e9c91610ea8565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b831015610c775782610338916001610e9c95018155610d5f565b604051906080820182811067ffffffffffffffff821117610c7757604052606080838181528160208201528160408201520152565b91908203918211610d4957565b60ff1660ff8114610d495760010190565b8051821015610d775760209160051b010190565b92156110545750506040019081516064039160648311610d49575190565b82518211156110725750505190816064039160648311610d49579190565b909291602001928351918282106000146110985750506064039160648311610d49575190565b9350919050565b80546001600160a01b039081168015159493909190856110e2575b505050826110c757505090565b60010154801592509082156110db57505090565b1115905090565b161492503880806110ba56fea2646970667358221220d8832b4d51f0f926e89e1c30c84b2d4a6d46a06939bddddc9bbd1dbfa8bdd39964736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
