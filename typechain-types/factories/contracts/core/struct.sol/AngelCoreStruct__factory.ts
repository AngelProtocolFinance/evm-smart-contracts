/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "registrarSplits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "curDeductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceivedDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquid",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.DonationsReceived",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c57611b60908161002282393081600a0152f35b600080fdfe6080604090808252307f0000000000000000000000000000000000000000000000000000000000000000146004918236101561003a57600080fd5b600093843560e01c9182631f2c260914610e27575081632a0bc060146108c05781633704191314610df6578163564343ff14610d0957816367efb78614610cd95781636f331a1414610ca4578163719c3b6714610c2f578163855762df14610a18578163973d5ef514610935578163a16acfee146108f9578163ad60ed5a146108c0578163b8108b2c14610823578163b9fb75c5146107a0578163bb37a2831461075e578163d0352ce8146106f6578163e2aaa7f8146105b657848263e44c75231461054e57508163e84b82f71461039f578163e9f474271461027a575063f362d2d41461012757600080fd5b610276576080366003190112610276573590602435916044359260643591845494815495855b60ff828183161015610272576001908888878983898f5b878716106101c85750505050505050906101819161018657611428565b61014d565b6101c36101ae6101968387611176565b905460039291831b1c6001600160a01b031688611482565b6101b8838a611176565b9054911b1c87611439565b611428565b90856101e16101d88b8095611176565b92905496611176565b9560018060a01b03809254600398891b1c1692871b1c1614610217575b505050505061020c90611428565b8887898c898f610164565b8594975061024161020c9661023561026696959461024f949b611176565b905490861b1c93611176565b929093838554911b1c611475565b825460001960039390931b92831b1916911b179055565b9050883889868d6101fe565b8780f35b5080fd5b8385606036600319011261039c5781359267ffffffffffffffff9283851161039857366023860112156103985784810135936102b5856110db565b956102c284519788611029565b85875260209560248789019160051b8301019136831161039457602401905b8282106103715750505060243590811161036d57929392610304913691016110f3565b9161030d610fa1565b6001600160a01b0390811691855b875160ff821690811015610364578484610335838c6114bd565b51161461034c575b5061034790611428565b61031b565b61034791975061035c90876114bd565b51969061033d565b82888751908152f35b8380fd5b81356001600160a01b03811681036103905781529087019087016102e1565b8780fd5b8680fd5b8280fd5b80fd5b929190506103985781600319360112610398578035602491823567ffffffffffffffff811161054a576103d5903690830161104b565b938594602091828201965b85546000198101908111610538578082101561052a576104008288611176565b5083516104228161041489820180956111de565b03601f198101835282611029565b5190206104418a61044e88875180938282019586918c51928391610e67565b8101038084520182611029565b51902014610465575061046090611151565b6103e0565b8661048d95969798995061047f9294506104879350611176565b509186611176565b9061139e565b825480156105185760001901936104a48585611176565b9390936105085750509084916104ba82546111a4565b90816104c9575b505050505580f35b8390601f83116001146104e457505050555b823880806104c1565b838252812092909161050190601f0160051c840160018501611261565b55556104db565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b50505050909192935061048d565b634e487b7160e01b8a5260118652878afd5b8580fd5b8091846105b35761056b610561366110a2565b8284959294611525565b91821561059c575b505061057d575050f35b61058960019251610ff7565b80546001600160a01b0319168155015580f35b6001600160a01b0391821691161490508580610573565b50fd5b83858461039c57608036600319011261039c5781356024356044359360643567ffffffffffffffff81116106f2576105f0913691016110f3565b938054835495855b60ff80821690848210156106ee576001908a858a8a8d8b81955b878716106106765750505050505050906106329291610637575b50611428565b6105f8565b6106696106709161066361064b858a611176565b905460039190911b1c6001600160a01b03168b611482565b856114bd565b5187611439565b8961062c565b90856106866101d88c8c95611176565b9560018060a01b03809254600398891b1c1692871b1c16146106bd575b50505050506106b190611428565b858a8a8d8f8c90610612565b859497506102416106b1966106db6106e296959461024f949b6114bd565b5193611176565b9050858d8a868e6106a3565b8880f35b8480fd5b83858260031936011261039c5750803560243591828211156107265760208461071f858561141b565b9051908152f35b606490602085519162461bcd60e51b83528201526012602482015271496e73756666696369656e742046756e647360701b6044820152fd5b61077760209161076d366110a2565b9094918093611525565b928315610789575b5050519015158152f35b6001600160a01b039182169116149150838061077f565b849084366003190160c0811261036d57606013610398578151906060820182811067ffffffffffffffff82111761081057835235815260243560208201526044358282015260a43590811515820361036d57906108049160843590606435906114d1565b82519182526020820152f35b634e487b7160e01b855260418252602485fd5b8390858060031936011261039c57806020835161083f81610ff7565b845161084a81610ff7565b83815283838201528152015281519161086283610ff7565b818352602083018281526020825161087981610ff7565b8581526003910190815282519451855290516001600160a01b031660208501525191848310156108ad575060609350820152f35b634e487b7160e01b815260218552602490fd5b849081600319360112610276576108f5906108d96113e6565b506108e26113e6565b9051918291602083526020830190610f2f565b0390f35b8085859260031936011261039c576024359067ffffffffffffffff821161039c575060209261092e61071f923690830161104b565b9035611574565b848361039c5761094436610fb7565b829192935b8354851015610a1457600193835b83548110156109e45761096a8783611176565b508351906109b76109c36020928461098585820180936111de565b0394610999601f1996878101835282611029565b519020936109a7868a611176565b50938851938491820180966111de565b03908101835282611029565b519020146109da575b6109d590611151565b610957565b93945084936109cc565b5093946109f591956109fb57611151565b93610949565b610a0f610a088287611176565b50846113c3565b611151565b8280f35b90508391610276576060366003190112610276578235906024359067ffffffffffffffff60443581811161054a57610a53903690880161104b565b9160018690865491602093848701915b8460ff821610610bd757505050610a78578680f35b600160401b9586821015610bc45790610a9691600182018155611176565b939093610bb2578051928311610b9f57908291610abd83610ab787546111a4565b87611278565b81601f8411600114610b3957508792610b2e575b50508160011b916000199060031b1c19161790555b805491821015610b1b57610b01929350600182018155611176565b8154906000199060031b1b19169055808280808080808680f35b634e487b7160e01b835260418452602483fd5b015190508780610ad1565b8589528089209350601f1985169089905b828210610b87575050908460019594939210610b6e575b505050811b019055610ae6565b015160001960f88460031b161c19169055878080610b61565b80600186978294978701518155019601940190610b4a565b634e487b7160e01b875260418852602487fd5b634e487b7160e01b8752868852602487fd5b634e487b7160e01b885260418952602488fd5b610be1818b611176565b508251610bf5816104148a820180956111de565b519020825187810190610c1089828d5161044181878c610e67565b51902014610c27575b610c2290611428565b610a63565b8a9350610c19565b929190506103985760a0366003190112610398573590610c4d610f86565b90610c56610fa1565b6001600160a01b03606435818116949290859003610394578116911614610c7b578380f35b610c859051610ff7565b81546001600160a01b0319161781556084356001909101553880808380f35b92505061027657610cd4600191610cba36610fcd565b949190828060a01b03168652016020528320918254611475565b905580f35b92505061027657610cd4600191610cef36610fcd565b949190828060a01b0316865201602052832091825461141b565b848361039c57610d1836610fb7565b919081935b600293848301908154871015610df257600193855b8783018054821015610db257610d488a86611176565b506109b7610d938851610d838660209583610d6688820180936111de565b0393610d7a601f1995868101835282611029565b51902096611176565b50938a51938491820180966111de565b51902014610daa575b610da590611151565b610d32565b869550610d9c565b5050958792610dcb94989295610dd4575b505050611151565b93929092610d1d565b610dea92610de191611176565b509085016113c3565b808780610dc3565b8480f35b839085606036600319011261039c5750610e1e602092610e14610f86565b6044359135611525565b90519015158152f35b85908160031936011261027657602081610e418493610ff7565b828152015260208251610e5381610ff7565b828152018181528251918252516020820152f35b60005b838110610e7a5750506000910152565b8181015183820152602001610e6a565b908082519081815260208091019281808460051b8301019501936000915b848310610eb85750505050505090565b909192939495848080600193601f1980878303018852601f8c51610ee781518092818752878088019101610e67565b011601019801930193019194939290610ea8565b90815180825260208080930193019160005b828110610f1b575050505090565b835185529381019392810192600101610f0d565b610f83916060610f72610f60610f4e8551608086526080860190610e8a565b60208601518582036020870152610efb565b60408501518482036040860152610e8a565b920151906060818403910152610efb565b90565b602435906001600160a01b0382168203610f9c57565b600080fd5b604435906001600160a01b0382168203610f9c57565b6040906003190112610f9c576004359060243590565b6060906003190112610f9c57600435906024356001600160a01b0381168103610f9c579060443590565b6040810190811067ffffffffffffffff82111761101357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761101357604052565b81601f82011215610f9c5780359067ffffffffffffffff82116110135760405192611080601f8401601f191660200185611029565b82845260208383010111610f9c57816000926020809301838601378301015290565b6080906003190112610f9c57600435906001600160a01b03906024358281168103610f9c57916044359081168103610f9c579060643590565b67ffffffffffffffff81116110135760051b60200190565b81601f82011215610f9c5780359161110a836110db565b926111186040519485611029565b808452602092838086019260051b820101928311610f9c578301905b828210611142575050505090565b81358152908301908301611134565b60001981146111605760010190565b634e487b7160e01b600052601160045260246000fd5b805482101561118e5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156111d4575b60208310146111be57565b634e487b7160e01b600052602260045260246000fd5b91607f16916111b3565b6000929181546111ed816111a4565b92600191808316908115611246575060011461120a575b50505050565b90919293945060005260209081600020906000915b8583106112355750505050019038808080611204565b80548584015291830191810161121f565b60ff1916845250505081151590910201915038808080611204565b81811061126c575050565b60008155600101611261565b9190601f811161128757505050565b6112b3926000526020600020906020601f840160051c830193106112b5575b601f0160051c0190611261565b565b90915081906112a6565b9080821461139a576112d181546111a4565b9067ffffffffffffffff82116110135781906112f7826112f186546111a4565b86611278565b600090601f831160011461132e57600092611323575b50508160011b916000199060031b1c1916179055565b01549050388061130d565b81526020808220858352818320935090601f1985169083905b828210611381575050908460019594939210611368575b505050811b019055565b015460001960f88460031b161c1916905538808061135e565b8495819295850154815560018091019601940190611347565b5050565b91906113ad576112b3916112bf565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b83101561101357826104879160016112b395018155611176565b604051906080820182811067ffffffffffffffff82111761101357604052606080838181528160208201528160408201520152565b9190820391821161116057565b60ff1660ff81146111605760010190565b90815491600160401b831015611013578261145c9160016112b395018155611176565b90919082549060031b91821b91600019901b1916179055565b9190820180921161116057565b8054600160401b8110156110135761149f91600182018155611176565b819291549060031b9160018060a01b03809116831b921b1916179055565b805182101561118e5760209160051b010190565b91939282518511908115611517575b811561150a575b501561150457506040018051606490810393508311611160575190565b90509190565b60019150151514386114e7565b6020840151861091506114e0565b80546001600160a01b03908116801515949390919085611568575b5050508261154d57505090565b600101548015925090821561156157505090565b1115905090565b16149250388080611540565b906040805160209283820181519261159686828186019661044181878a610e67565b5190208351858101907232b73237bbb6b2b73a21b7b73a3937b63632b960691b8252601381526115c581610ff7565b519020036115d4575050505090565b8251848101906115ec8682855161044181878a610e67565b519020835185810190701b585d1d5c9a5d1e505b1b1bdddb1a5cdd607a1b82526011815261161981610ff7565b5190200361162b575050505060080190565b8251848101906116438682855161044181878a610e67565b5190208351858101906c1cdc1b1a5d151bd31a5c5d5a59609a1b8252600d815261166c81610ff7565b5190200361167e5750505050601e0190565b8251848101906116968682855161044181878a610e67565b5190208351858101906f69676e6f72655573657253706c69747360801b8252601081526116c281610ff7565b519020036116d1575050500190565b8251848101906116e98682855161044181878a610e67565b519020835185810190697374726174656769657360b01b8252600a815261170f81610ff7565b51902003611721575050505060020190565b8251848101906117398682855161044181878a610e67565b5190208351858101907f616c6c6f776c697374656442656e65666963696172696573000000000000000082526018815261177281610ff7565b51902003611784575050505060040190565b82518481019061179c8682855161044181878a610e67565b5190208351858101907f616c6c6f776c6973746564436f6e7472696275746f72730000000000000000008252601781526117d581610ff7565b519020036117e7575050505060060190565b8251848101906117ff8682855161044181878a610e67565b5190208351858101906b6d6174757269747954696d6560a01b8252600c815261182781610ff7565b519020036118395750505050600a0190565b8251848101906118518682855161044181878a610e67565b5190208351858101906670726f66696c6560c81b82526007815261187481610ff7565b519020036118865750505050600c0190565b82518481019061189e8682855161044181878a610e67565b5190208351858101906a6561726e696e677346656560a81b8252600b81526118c581610ff7565b519020036118d75750505050600e0190565b8251848101906118ef8682855161044181878a610e67565b5190208351858101906a776974686472617746656560a81b8252600b815261191681610ff7565b51902003611928575050505060100190565b8251848101906119408682855161044181878a610e67565b519020835185810190696465706f73697446656560b01b8252600a815261196681610ff7565b51902003611978575050505060120190565b8251848101906119908682855161044181878a610e67565b5190208351858101906962616c616e636546656560b01b8252600a81526119b681610ff7565b519020036119c8575050505060140190565b8251848101906119e08682855161044181878a610e67565b519020835185810190636e616d6560e01b825260048152611a0081610ff7565b51902003611a12575050505060160190565b825184810190611a2a8682855161044181878a610e67565b51902083518581019064696d61676560d81b825260058152611a4b81610ff7565b51902003611a5d575050505060180190565b825184810190611a758682855161044181878a610e67565b519020835185810190636c6f676f60e01b825260048152611a9581610ff7565b51902003611aa75750505050601a0190565b611ac1848451809361044183830196879251928391610e67565b5190208151838101906963617465676f7269657360b01b8252600a8152611ae781610ff7565b51902003611af7575050601c0190565b60649250519062461bcd60e51b82526004820152600d60248201526c496e76616c6964496e7075747360981b6044820152fdfea2646970667358221220f325348fd1786f131afcea2f51f3d8f2bc4f1393f0233466a667ea7eea71cf9e64736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
