/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "endowId",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "fundId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "splits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payoutAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bps",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.FeeSetting",
        name: "fee",
        type: "tuple",
      },
    ],
    name: "validateFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c57610f6c90816100228239308160080152f35b600080fdfe604060808152307f0000000000000000000000000000000000000000000000000000000000000000149060048036101561003857600080fd5b600092833560e01c80632a0bc06014610554578063564343ff146108af578063855762df14610676578063973d5ef514610592578063ad60ed5a14610554578063b4feed2a14610523578063b8108b2c1461046b578063b9fb75c514610408578063bb37a28314610386578063d46887491461026c5763e84b82f7146100bd57600080fd5b6102685781600319360112610268578035602491823567ffffffffffffffff8111610264576100ef9036908301610b47565b938594602091828201965b8554600019810190811161025257808210156102445761011a8288610bd9565b50835161013c8161012e8982018095610c41565b03601f198101835282610b25565b51902061015b8a61016888875180938282019586918c5192839161099d565b8101038084520182610b25565b5190201461017f575061017a90610bb4565b6100fa565b866101a79596979899506101999294506101a19350610bd9565b509186610bd9565b90610e01565b825480156102325760001901936101be8585610bd9565b9390936102225750509084916101d48254610c07565b90816101e3575b505050505580f35b8390601f83116001146101fe57505050555b823880806101db565b838252812092909161021b90601f0160051c840160018501610cc4565b55556101f5565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b5050505090919293506101a7565b634e487b7160e01b8a5260118652878afd5b8580fd5b8280fd5b5050908060031936011261026857805161028581610ad7565b8235906001600160a01b038216908183036102645760209281526024359283910152811515908161037d575b501561030857815162461bcd60e51b8152602081850152602560248201527f496e76616c696420666565207061796f7574207a65726f20616464726573732060448201526433b4bb32b760d91b6064820152608490fd5b61271010610314578280f35b906020608492519162461bcd60e51b8352820152603e60248201527f496e76616c69642066656520626173697320706f696e747320676976656e2e2060448201527f53686f756c64206265206265747765656e203020616e642031303030302e00006064820152fd5b905015386102b1565b5050608036600319011261026857359061039e610b9e565b6044356001600160a01b0381811691829003610264576020955060ff8554161594856103d1575b50505050519015158152f35b836103e792939495965060016064359201610ee7565b9283156103fc575b50505090388080806103c5565b161490503880806103ef565b5050366003190160c08112610467576060136102685781519061042a82610b09565b35815260243560208201526044358282015260a435908115158203610467579061045b916084359060643590610e7e565b82519182526020820152f35b8380fd5b5050918060031936011261052057806020835161048781610ad7565b845161049281610b09565b83815283838201528386820152815201528151916104af83610b09565b8183526020830190828252808401838152602082516104cd81610ad7565b868152600391019081528251955163ffffffff16865292516020860152516001600160a01b03169084015251908382101561050d57608083836060820152f35b634e487b7160e01b815260218452602490fd5b80fd5b5050916060600319360112610520575061054b602092610541610b9e565b6044359135610ee7565b90519015158152f35b5050508160031936011261058e5761058a9061056e610e49565b50610577610e49565b9051918291602083526020830190610a65565b0390f35b5080fd5b838583610520576105a236610abc565b829192935b835485101561067257600193835b8354811015610642576105c88783610bd9565b50835190610615610621602092846105e38582018093610c41565b03946105f7601f1996878101835282610b25565b51902093610605868a610bd9565b5093885193849182018096610c41565b03908101835282610b25565b51902014610638575b61063390610bb4565b6105b5565b939450849361062a565b509394610653919561065957610bb4565b936105a7565b61066d6106668287610bd9565b5084610e26565b610bb4565b8280f35b5082849161058e57606036600319011261058e578235906024938435916044359067ffffffffffffffff918281116108ab576106b59036908501610b47565b8554602092600190838501908a5b8460ff82161061083b575050506106d8578780f35b9087939291600160401b978882101561082957906106fb91600182018155610bd9565b94909461081857508051928311610806579082916107238361071d8754610c07565b87610cdb565b81601f84116001146107a057508892610795575b50508160011b916000199060031b1c19161790555b8154928310156107835750610768929350600182018155610bd9565b8154906000199060031b1b1916905580828080808080808780f35b634e487b7160e01b8452604190528383fd5b015190508880610737565b858a52808a209350601f198516908a905b8282106107ee5750509084600195949392106107d5575b505050811b01905561074c565b015160001960f88460031b161c191690558880806107c8565b806001869782949787015181550196019401906107b1565b634e487b7160e01b8852604185528888fd5b634e487b7160e01b81528086528990fd5b634e487b7160e01b8652604187528a86fd5b610845818c610bd9565b5082516108598161012e8b82018095610c41565b5190208251888101906108748a828b5161015b81878c61099d565b519020146108a3575b60ff809116908114610891576001016106c3565b634e487b7160e01b8c52601189528c8cfd5b8b935061087d565b8680fd5b838583610520576108bf36610abc565b919081935b60029384830190815487101561099957600193855b8783018054821015610959576108ef8a86610bd9565b5061061561093a885161092a866020958361090d8882018093610c41565b0393610921601f1995868101835282610b25565b51902096610bd9565b50938a5193849182018096610c41565b51902014610951575b61094c90610bb4565b6108d9565b869550610943565b50509587926109729498929561097b575b505050610bb4565b939290926108c4565b6109919261098891610bd9565b50908501610e26565b80878061096a565b8480f35b60005b8381106109b05750506000910152565b81810151838201526020016109a0565b908082519081815260208091019281808460051b8301019501936000915b8483106109ee5750505050505090565b909192939495848080600193601f1980878303018852601f8c51610a1d8151809281875287808801910161099d565b0116010198019301930191949392906109de565b90815180825260208080930193019160005b828110610a51575050505090565b835185529381019392810192600101610a43565b610ab9916060610aa8610a96610a8485516080865260808601906109c0565b60208601518582036020870152610a31565b604085015184820360408601526109c0565b920151906060818403910152610a31565b90565b6040906003190112610ad2576004359060243590565b600080fd5b6040810190811067ffffffffffffffff821117610af357604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610af357604052565b90601f8019910116810190811067ffffffffffffffff821117610af357604052565b81601f82011215610ad25780359067ffffffffffffffff8211610af35760405192610b7c601f8401601f191660200185610b25565b82845260208383010111610ad257816000926020809301838601378301015290565b602435906001600160a01b0382168203610ad257565b6000198114610bc35760010190565b634e487b7160e01b600052601160045260246000fd5b8054821015610bf15760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610c37575b6020831014610c2157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c16565b600092918154610c5081610c07565b92600191808316908115610ca95750600114610c6d575b50505050565b90919293945060005260209081600020906000915b858310610c985750505050019038808080610c67565b805485840152918301918101610c82565b60ff1916845250505081151590910201915038808080610c67565b818110610ccf575050565b60008155600101610cc4565b9190601f8111610cea57505050565b610d16926000526020600020906020601f840160051c83019310610d18575b601f0160051c0190610cc4565b565b9091508190610d09565b90808214610dfd57610d348154610c07565b9067ffffffffffffffff8211610af3578190610d5a82610d548654610c07565b86610cdb565b600090601f8311600114610d9157600092610d86575b50508160011b916000199060031b1c1916179055565b015490503880610d70565b81526020808220858352818320935090601f1985169083905b828210610de4575050908460019594939210610dcb575b505050811b019055565b015460001960f88460031b161c19169055388080610dc1565b8495819295850154815560018091019601940190610daa565b5050565b9190610e1057610d1691610d22565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b831015610af357826101a1916001610d1695018155610bd9565b604051906080820182811067ffffffffffffffff821117610af357604052606080838181528160208201528160408201520152565b9215610e9c5750506040019081516064039160648311610bc3575190565b8251821115610eba5750505190816064039160648311610bc3579190565b90929160200192835191828210600014610ee05750506064039160648311610bc3575190565b9350919050565b80546001600160a01b03908116801515949390919085610f2a575b50505082610f0f57505090565b6001015480159250908215610f2357505090565b1115905090565b16149250388080610f0256fea2646970667358221220b847b4ce7b2efc737c92b2a2700e8ec01c2f41be139dea5bca2abcd73b175e3d64736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
