/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "curTemp",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
    ],
    name: "addTokenMem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "registrarSplits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cw20",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "cw20Valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "curDeducttokenfor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curDeductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceivedDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquid",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.DonationsReceived",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "genericBalanceDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceDetailsDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidInvestedProfits",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lockedInterestsToLiquid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "interest_distribution",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "principle_distribution",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.RebalanceDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "curTemp",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
    ],
    name: "subTokenMem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c576122c990816100228239308160080152f35b600080fdfe604060808152307f0000000000000000000000000000000000000000000000000000000000000000146004908136101561003857600080fd5b600092833560e01c90816312f1ee091461117b5781631f2c26091461113b5781632a0bc060146109165781632b15f3cc146110ae578163370419131461107d57816340b185af14610f66578163564343ff14610e7957816367efb78614610df5578163692cb37014610ddf5781636f331a1414610d2c578163719c3b6714610cb3578163855762df14610a9d57816390aac6e114610a70578163973d5ef51461098d578163a16acfee1461094b578163ad60ed5a14610916578163b8108b2c14610879578163b9fb75c514610819578163bb37a283146107d7578163cc48fc9614610754578163e2aaa7f81461061557848263e44c7523146105ad57508163e84b82f7146103fb578163e9f4742714610348578163ee138400146102b9575063f362d2d41461016657600080fd5b6102b55760803660031901126102b5573590602435916044359260643591845494815495855b60ff8281831610156102b1576001908888878983898f5b878716106102075750505050505050906101c0916101c5576119a3565b61018c565b6102026101ed6101d583876116f3565b905460039291831b1c6001600160a01b0316886119fd565b6101f7838a6116f3565b9054911b1c876119b4565b6119a3565b90856102206102178b80956116f3565b929054966116f3565b9560018060a01b03809254600398891b1c1692871b1c1614610256575b505050505061024b906119a3565b8887898c898f6101a3565b8594975061028061024b966102746102a596959461028e949b6116f3565b905490861b1c936116f3565b929093838554911b1c6119f0565b825460001960039390931b92831b1916911b179055565b9050883889868d61023d565b8780f35b5080fd5b83858260031936011261034557813580549392602480359291906102dc87611a6c565b94841593815b60ff81168a81101561033457866102f983856116f3565b905491610322578961031d9493926103179260031b1c04918b611a58565b526119a3565b6102e2565b634e487b7160e01b8652601288528686fd5b8951806103418b826115c4565b0390f35b80fd5b84849160606003193601126102b5576001600160401b039280358481116103f75761037690369083016112cf565b936024359081116103f75761038d9136910161145c565b906103966112b9565b6001600160a01b0390811690845b865160ff8216908110156103ed5783836103be838b611a58565b5116146103d5575b506103d0906119a3565b6103a4565b6103d09196506103e59086611a58565b5195906103c6565b6020878651908152f35b8380fd5b929190506105a957816003193601126105a957803560249182356001600160401b0381116105a557610430903690830161163f565b938594602091828201965b8554600019810190811161059357808210156105855761045b82886116f3565b50835161047d8161046f898201809561175b565b03601f198101835282611266565b51902061049c8a6104a988875180938282019586918c5192839161133d565b8101038084520182611266565b519020146104c057506104bb906116ce565b61043b565b866104e89596979899506104da9294506104e293506116f3565b5091866116f3565b9061191a565b825480156105735760001901936104ff85856116f3565b9390936105635750509084916105158254611721565b9081610524575b505050505580f35b8390601f831160011461053f57505050555b8238808061051c565b838252812092909161055c90601f0160051c8401600185016117de565b5555610536565b634e487b7160e01b875286905285fd5b634e487b7160e01b8652603183528486fd5b5050505090919293506104e8565b634e487b7160e01b8a5260118652878afd5b8580fd5b8280fd5b809184610612576105ca6105c036611695565b8284959294611c8e565b9182156105fb575b50506105dc575050f35b6105e8600192516111ff565b80546001600160a01b0319168155015580f35b6001600160a01b03918216911614905085806105d2565b50fd5b838584610345576080366003190112610345578135602435604435936064356001600160401b0381116107505761064e9136910161145c565b938054835495855b60ff808216908482101561074c576001908a858a8a8d8b81955b878716106106d45750505050505050906106909291610695575b506119a3565b610656565b6106c76106ce916106c16106a9858a6116f3565b905460039190911b1c6001600160a01b03168b6119fd565b85611a58565b51876119b4565b8961068a565b90856106e46102178c8c956116f3565b9560018060a01b03809254600398891b1c1692871b1c161461071b575b505050505061070f906119a3565b858a8a8d8f8c90610670565b8594975061028061070f9661073961074096959461028e949b611a58565b51936116f3565b9050858d8a868e610701565b8880f35b8480fd5b8490816003193601126102b557908181608060a094516107738161124b565b8281528260208201528284820152826060820152015280516107948161124b565b8281526020810191838352808201601481526080606084019386855201938585528251958652511515602086015251908401525115156060830152516080820152f35b6107f06020916107e636611695565b9094918093611c8e565b928315610802575b5050519015158152f35b6001600160a01b03918216911614915083806107f8565b849084366003190160c081126103f7576060136105a95781519061083c82611230565b35815260243560208201526044358282015260a4359081151582036103f7579061086d916084359060643590611c3a565b82519182526020820152f35b83908580600319360112610345578060208351610895816111ff565b84516108a0816111ff565b8381528383820152815201528151916108b8836111ff565b81835260208301828152602082516108cf816111ff565b8581526003910190815282519451855290516001600160a01b03166020850152519184831015610903575060609350820152f35b634e487b7160e01b815260218552602490fd5b8490816003193601126102b5576103419061092f611962565b50610938611962565b9051918291602083526020830190611405565b8085859260031936011261034557602435906001600160401b038211610345575060209261097f610986923690830161163f565b9035611cdd565b9051908152f35b84836103455761099c366115ff565b829192935b8354851015610a6c57600193835b8354811015610a3c576109c287836116f3565b50835190610a0f610a1b602092846109dd858201809361175b565b03946109f1601f1996878101835282611266565b519020936109ff868a6116f3565b509388519384918201809661175b565b03908101835282611266565b51902014610a32575b610a2d906116ce565b6109af565b9394508493610a24565b509394610a4d9195610a53576116ce565b936109a1565b610a67610a6082876116f3565b508461193f565b6116ce565b8280f35b8490816003193601126102b55761034190610a89611a38565b50610a92611a38565b905191829182611554565b905083916102b55760603660031901126102b557823590602435906001600160401b036044358181116105a557610ad7903690880161163f565b9160018690865491602093848701915b8460ff821610610c5b57505050610afc578680f35b600160401b9586821015610c485790610b1a916001820181556116f3565b939093610c36578051928311610c2357908291610b4183610b3b8754611721565b876117f5565b81601f8411600114610bbd57508792610bb2575b50508160011b916000199060031b1c19161790555b805491821015610b9f57610b859293506001820181556116f3565b8154906000199060031b1b19169055808280808080808680f35b634e487b7160e01b835260418452602483fd5b015190508780610b55565b8589528089209350601f1985169089905b828210610c0b575050908460019594939210610bf2575b505050811b019055610b6a565b015160001960f88460031b161c19169055878080610be5565b80600186978294978701518155019601940190610bce565b634e487b7160e01b875260418852602487fd5b634e487b7160e01b8752868852602487fd5b634e487b7160e01b885260418952602488fd5b610c65818b6116f3565b508251610c798161046f8a8201809561175b565b519020825187810190610c9489828d5161049c81878c61133d565b51902014610cab575b610ca6906119a3565b610ae7565b8a9350610c9d565b929190506105a95760a03660031901126105a9573590610cd161129e565b90610cda6112b9565b6001600160a01b03606435818116949290859003610d28578116911614610cff578380f35b610d0990516111ff565b81546001600160a01b0319161781556084356001909101553880808380f35b8680fd5b848361034557610d3b36611615565b9091600190818086815b610d72575b5050610d54578480f35b610d64610d6a94600283016119fd565b016119b4565b818080808480f35b60028401805460ff83161015610dd95781610d8c916116f3565b9054600391821b1c6001600160a01b0390811690891614610db8575b50610db2906119a3565b81610d45565b9250610db290610dd389948861028e61028085888b016116f3565b90610da8565b50610d4a565b61034190610a92610def366114ba565b91611a9e565b848361034557610e0436611615565b9190835b6002830190815460ff82161015610e7557610e2681610e47936116f3565b9054600391821b1c6001600160a01b0390811690851614610e4c57506119a3565b610e08565b610e6f908661028e610e618560018a016116f3565b929093838554911b1c611996565b8661068a565b8580f35b848361034557610e88366115ff565b919081935b600293848301908154871015610f6257600193855b8783018054821015610f2257610eb88a866116f3565b50610a0f610f038851610ef38660209583610ed6888201809361175b565b0393610eea601f1995868101835282611266565b519020966116f3565b50938a519384918201809661175b565b51902014610f1a575b610f15906116ce565b610ea2565b869550610f0c565b5050958792610f3b94989295610f44575b5050506116ce565b93929092610e8d565b610f5a92610f51916116f3565b5090850161193f565b808780610f33565b8480f35b848460803660031901126102b5576001600160401b039181358381116102b557610f9390369084016112cf565b9360249384359081116105a957610fad903690850161145c565b92610fb66112b9565b6001600160a01b03956064803595909491928816905b895160ff82169081101561107057828a610fe6838e611a58565b511614610ffd575b50610ff8906119a3565b610fcc565b87611008828b611a58565b51111561103957908161103261102b8a611025610ff8968e611a58565b51611996565b918b611a58565b5290610fee565b505050906020601292519362461bcd60e51b855284015282015271496e73756666696369656e742046756e647360701b6044820152fd5b8351806103418b826115c4565b839085606036600319011261034557506110a560209261109b61129e565b6044359135611c8e565b90519015158152f35b84906110b9366114ba565b9190936110c4611a38565b505b8382015180519060ff83169182101561112e576111059291906001600160a01b039081906110f5908490611a58565b51169088161461110a57506119a3565b6110c6565b611127602085015191611121876110258386611a58565b92611a58565b528661068a565b8551806103418682611554565b8480600319360112610345578060208351611155816111ff565b828152015260208251611167816111ff565b828152018181528251918252516020820152f35b8484826003193601126102b55780356001600160401b0381116105a9576111a4913691016112cf565b6111ac61129e565b6001600160a01b0390811691835b815160ff8216908110156111f357836111d4869285611a58565b5116146111ea575b6111e5906119a3565b6111ba565b600194506111dc565b60208688519015158152f35b604081019081106001600160401b0382111761121a57604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761121a57604052565b60a081019081106001600160401b0382111761121a57604052565b90601f801991011681019081106001600160401b0382111761121a57604052565b6001600160401b03811161121a5760051b60200190565b602435906001600160a01b03821682036112b457565b600080fd5b604435906001600160a01b03821682036112b457565b81601f820112156112b4578035916112e683611287565b926112f46040519485611266565b808452602092838086019260051b8201019283116112b4578301905b82821061131e575050505090565b81356001600160a01b03811681036112b4578152908301908301611310565b60005b8381106113505750506000910152565b8181015183820152602001611340565b908082519081815260208091019281808460051b8301019501936000915b84831061138e5750505050505090565b909192939495848080600193601f1980878303018852601f8c516113bd8151809281875287808801910161133d565b01160101980193019301919493929061137e565b90815180825260208080930193019160005b8281106113f1575050505090565b8351855293810193928101926001016113e3565b6114599160606114486114366114248551608086526080860190611360565b602086015185820360208701526113d1565b60408501518482036040860152611360565b9201519060608184039101526113d1565b90565b81601f820112156112b45780359161147383611287565b926114816040519485611266565b808452602092838086019260051b8201019283116112b4578301905b8282106114ab575050505090565b8135815290830190830161149d565b6003196060828201126112b457600435916001600160401b03918284116112b45760609084830301126112b457604051926114f484611230565b8060040135845260248101358381116112b4578260046115169284010161145c565b602085015260448101359283116112b45761153492016004016112cf565b6040820152906024356001600160a01b03811681036112b4579060443590565b90602090818352805182840152604061157a8383015160608387015260808601906113d1565b910151926060601f198284030191015281808451928381520193019160005b8281106115a7575050505090565b83516001600160a01b031685529381019392810192600101611599565b6020908160408183019282815285518094520193019160005b8281106115eb575050505090565b8351855293810193928101926001016115dd565b60409060031901126112b4576004359060243590565b60609060031901126112b457600435906024356001600160a01b03811681036112b4579060443590565b81601f820112156112b4578035906001600160401b03821161121a5760405192611673601f8401601f191660200185611266565b828452602083830101116112b457816000926020809301838601378301015290565b60809060031901126112b457600435906001600160a01b039060243582811681036112b4579160443590811681036112b4579060643590565b60001981146116dd5760010190565b634e487b7160e01b600052601160045260246000fd5b805482101561170b5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611751575b602083101461173b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611730565b60009291815461176a81611721565b926001918083169081156117c35750600114611787575b50505050565b90919293945060005260209081600020906000915b8583106117b25750505050019038808080611781565b80548584015291830191810161179c565b60ff1916845250505081151590910201915038808080611781565b8181106117e9575050565b600081556001016117de565b9190601f811161180457505050565b611830926000526020600020906020601f840160051c83019310611832575b601f0160051c01906117de565b565b9091508190611823565b908082146119165761184e8154611721565b906001600160401b03821161121a5781906118738261186d8654611721565b866117f5565b600090601f83116001146118aa5760009261189f575b50508160011b916000199060031b1c1916179055565b015490503880611889565b81526020808220858352818320935090601f1985169083905b8282106118fd5750509084600195949392106118e4575b505050811b019055565b015460001960f88460031b161c191690553880806118da565b84958192958501548155600180910196019401906118c3565b5050565b9190611929576118309161183c565b634e487b7160e01b600052600060045260246000fd5b90815491600160401b83101561121a57826104e2916001611830950181556116f3565b60405190608082018281106001600160401b0382111761121a57604052606080838181528160208201528160408201520152565b919082039182116116dd57565b60ff1660ff81146116dd5760010190565b90815491600160401b83101561121a57826119d7916001611830950181556116f3565b90919082549060031b91821b91600019901b1916179055565b919082018092116116dd57565b8054600160401b81101561121a57611a1a916001820181556116f3565b819291549060031b9160018060a01b03809116831b921b1916179055565b60405190611a4582611230565b6060604083600081528260208201520152565b805182101561170b5760209160051b010190565b90611a7682611287565b611a836040519182611266565b8281528092611a94601f1991611287565b0190602036910137565b919091611aa9611a38565b50600160005b604083015180519060ff831691821015611b20576001600160a01b03908190611ad9908490611a58565b511690871614611af3575b50611aee906119a3565b611aaf565b9150611aee90600092611b1960208601519161112188611b138386611a58565b516119f0565b5290611ae4565b50929392505015611c345781516020830194855151600181018091116116dd57611b4b604091611a6c565b94019182515193600185018095116116dd57611b6685611287565b94611b746040519687611266565b808652611b83601f1991611287565b0136602087013760405191611b9783611230565b8252602082019586526040820194855260005b84518051821015611bfe57611bf991906001600160a01b0390611bce908390611a58565b5116611bdb828951611a58565b52611be7818b51611a58565b51611bf3828a51611a58565b526116ce565b611baa565b505094919692611c1990611c30959792975190515190611a58565b6001600160a01b0390911690525190515190611a58565b5290565b50905090565b91939282518511908115611c80575b8115611c73575b5015611c6d575060400180516064908103935083116116dd575190565b90509190565b6001915015151438611c50565b602084015186109150611c49565b80546001600160a01b03908116801515949390919085611cd1575b50505082611cb657505090565b6001015480159250908215611cca57505090565b1115905090565b16149250388080611ca9565b9060408051602092838201815192611cff86828186019661049c81878a61133d565b5190208351858101907232b73237bbb6b2b73a21b7b73a3937b63632b960691b825260138152611d2e816111ff565b51902003611d3d575050505090565b825184810190611d558682855161049c81878a61133d565b519020835185810190701b585d1d5c9a5d1e505b1b1bdddb1a5cdd607a1b825260118152611d82816111ff565b51902003611d94575050505060080190565b825184810190611dac8682855161049c81878a61133d565b5190208351858101906c1cdc1b1a5d151bd31a5c5d5a59609a1b8252600d8152611dd5816111ff565b51902003611de75750505050601e0190565b825184810190611dff8682855161049c81878a61133d565b5190208351858101906f69676e6f72655573657253706c69747360801b825260108152611e2b816111ff565b51902003611e3a575050500190565b825184810190611e528682855161049c81878a61133d565b519020835185810190697374726174656769657360b01b8252600a8152611e78816111ff565b51902003611e8a575050505060020190565b825184810190611ea28682855161049c81878a61133d565b5190208351858101907f616c6c6f776c697374656442656e656669636961726965730000000000000000825260188152611edb816111ff565b51902003611eed575050505060040190565b825184810190611f058682855161049c81878a61133d565b5190208351858101907f616c6c6f776c6973746564436f6e7472696275746f7273000000000000000000825260178152611f3e816111ff565b51902003611f50575050505060060190565b825184810190611f688682855161049c81878a61133d565b5190208351858101906b6d6174757269747954696d6560a01b8252600c8152611f90816111ff565b51902003611fa25750505050600a0190565b825184810190611fba8682855161049c81878a61133d565b5190208351858101906670726f66696c6560c81b825260078152611fdd816111ff565b51902003611fef5750505050600c0190565b8251848101906120078682855161049c81878a61133d565b5190208351858101906a6561726e696e677346656560a81b8252600b815261202e816111ff565b519020036120405750505050600e0190565b8251848101906120588682855161049c81878a61133d565b5190208351858101906a776974686472617746656560a81b8252600b815261207f816111ff565b51902003612091575050505060100190565b8251848101906120a98682855161049c81878a61133d565b519020835185810190696465706f73697446656560b01b8252600a81526120cf816111ff565b519020036120e1575050505060120190565b8251848101906120f98682855161049c81878a61133d565b5190208351858101906962616c616e636546656560b01b8252600a815261211f816111ff565b51902003612131575050505060140190565b8251848101906121498682855161049c81878a61133d565b519020835185810190636e616d6560e01b825260048152612169816111ff565b5190200361217b575050505060160190565b8251848101906121938682855161049c81878a61133d565b51902083518581019064696d61676560d81b8252600581526121b4816111ff565b519020036121c6575050505060180190565b8251848101906121de8682855161049c81878a61133d565b519020835185810190636c6f676f60e01b8252600481526121fe816111ff565b519020036122105750505050601a0190565b61222a848451809361049c8383019687925192839161133d565b5190208151838101906963617465676f7269657360b01b8252600a8152612250816111ff565b51902003612260575050601c0190565b60649250519062461bcd60e51b82526004820152600d60248201526c496e76616c6964496e7075747360981b6044820152fdfea26469706673582212203da504a93be1bb4d82cf56a49348d3ce4097ccfcd1c3bcd194a7f6506bca4c4a64736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
