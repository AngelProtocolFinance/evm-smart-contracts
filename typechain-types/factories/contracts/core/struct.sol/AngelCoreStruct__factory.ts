/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AngelCoreStruct,
  AngelCoreStructInterface,
} from "../../../../contracts/core/struct.sol/AngelCoreStruct";

const _abi = [
  {
    inputs: [],
    name: "accountStrategiesDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedPercentage",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid_vault",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidPercentage",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.AccountStrategies",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "curTemp",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
    ],
    name: "addTokenMem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryDefault",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
            ],
            internalType: "struct AngelCoreStruct.BeneficiaryData",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.BeneficiaryEnum",
            name: "enumData",
            type: "AngelCoreStruct.BeneficiaryEnum",
          },
        ],
        internalType: "struct AngelCoreStruct.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultSplit",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.SplitDetails",
        name: "registrarSplits",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "userLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLiquid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userOverride",
        type: "bool",
      },
    ],
    name: "checkSplits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cw20",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "cw20Valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "curDeducttokenfor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curDeductamount",
        type: "uint256",
      },
    ],
    name: "deductTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceivedDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquid",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.DonationsReceived",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "genericBalanceDefault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oneOffVaultsDefault",
    outputs: [
      {
        components: [
          {
            internalType: "string[]",
            name: "locked",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedAmount",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "liquid",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidAmount",
            type: "uint256[]",
          },
        ],
        internalType: "struct AngelCoreStruct.OneOffVaults",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceDetailsDefaut",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidInvestedProfits",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lockedInterestsToLiquid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "interest_distribution",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "principle_distribution",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.RebalanceDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "curTemp",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curTokenaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
    ],
    name: "subTokenMem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c576125fb90816100228239308160080152f35b600080fdfe604060808152307f0000000000000000000000000000000000000000000000000000000000000000146004908136101561003857600080fd5b600092833560e01c90816312f1ee091461124c5781631f2c26091461120c5781632a0bc060146108805781632b15f3cc14611181578163370419131461115957816340b185af14611038578163564343ff14610f4b57816367efb78614610ec7578163692cb37014610eb15781636f331a1414610dfe578163855762df14610be257816390aac6e114610bb5578163973d5ef514610ad25781639d965a9b146109e7578163a16acfee146109a457848263aa061d00146108b557508163ad60ed5a14610880578163b8108b2c146107e5578163b9fb75c514610785578163cc48fc9614610702578163e2aaa7f8146105c3578163e84b82f714610410578163e9f474271461035c578163ee138400146102cd578163eed0c426146102ac575063f362d2d41461016657600080fd5b6102a85760803660031901126102a85735906024356044359060643591805494805495855b60ff8281831610156102a457600190885b8a828216106101fc575050906101b5916101ba57611a8f565b61018b565b6101f76001600160a01b036101e26101d284896117d8565b929054600393841b1c1687611aee565b6101ec838a6117d8565b9054911b1c87611aa0565b611a8f565b888a898661020a818c6117d8565b93905493610218878d6117d8565b956001600160a01b03809254600398891b1c1692871b1c1614610249575b505050505061024490611a8f565b61019c565b8594975061027361024496610267610298969594610281949b6117d8565b905490861b1c936117d8565b929093838554911b1c611ae1565b825460001960039390931b92831b1916911b179055565b9050883889868d610236565b8780f35b5080fd5b6020906102c46102bb3661176e565b93929092611dcd565b90519015158152f35b83858260031936011261035957813580549392602480359291906102f087611b63565b94841593815b60ff81168a811015610348578661030d83856117d8565b905491610336578961033194939261032b9260031b1c04918b611b4f565b52611a8f565b6102f6565b868660128a634e487b7160e01b835252fd5b8951806103558b8261169c565b0390f35b80fd5b84849160606003193601126102a85767ffffffffffffffff92803584811161040c5761038b90369083016113a6565b9360243590811161040c576103a291369101611533565b906103ab611390565b6001600160a01b0390811690845b865160ff8216908110156104025783836103d3838b611b4f565b5116146103ea575b506103e590611a8f565b6103b9565b6103e59196506103fa9086611b4f565b5195906103db565b6020878651908152f35b8380fd5b929190506105bf57816003193601126105bf578035602491823567ffffffffffffffff81116105bb576104469036908301611717565b938594602091828201965b855460001981019081116105a9578082101561059b5761047182886117d8565b508351610493816104858982018095611840565b03601f19810183528261133b565b5190206104b28a6104bf88875180938282019586918c51928391611414565b810103808452018261133b565b519020146104d657506104d1906117b3565b610451565b866104fe9596979899506104f09294506104f893506117d8565b5091866117d8565b90611a00565b8254801561058957600019019361051585856117d8565b93909361057957505090849161052b8254611806565b908161053a575b505050505580f35b8390601f831160011461055557505050555b82388080610532565b838252812092909161057290601f0160051c8401600185016118c3565b555561054c565b868091634e487b7160e01b825252fd5b8486603185634e487b7160e01b835252fd5b5050505090919293506104fe565b878a601188634e487b7160e01b835252fd5b8580fd5b8280fd5b8385846103595760803660031901126103595781356024356044359360643567ffffffffffffffff81116106fe576105fd91369101611533565b8454948354855b60ff80821690898210156106fa57600190895b878a8a8d8a8a8787161061067f57505050505050509061063d9291610642575b50611a8f565b610604565b6106726106799161066c6001600160a01b0361065e868a6117d8565b90549060031b1c168b611aee565b87611b4f565b5187611aa0565b89610637565b908561069861068f8c8c956117d8565b929054966117d8565b956001600160a01b03809254600398891b1c1692871b1c16146106c9575b50505050506106c490611a8f565b610617565b859497506102736106c4966106e76106ee969594610281949b611b4f565b51936117d8565b9050878d8a868e6106b6565b8880f35b8480fd5b8490816003193601126102a857908181608060a094516107218161131f565b8281528260208201528284820152826060820152015280516107428161131f565b8281526020810191838352808201601481526080606084019386855201938585528251958652511515602086015251908401525115156060830152516080820152f35b849084366003190160c0811261040c576060136105bf578151906107a882611303565b35815260243560208201526044358282015260a43590811515820361040c57906107d9916084359060643590611d2c565b82519182526020820152f35b83908580600319360112610359578060208351610801816112d1565b845161080c816112d1565b838152838382015281520152815191610824836112d1565b818352602083018281526001600160a01b0360208351610843816112d1565b8681520191600383528351955186525116602085015251918483101561086d575060609350820152f35b80602186634e487b7160e01b6024945252fd5b8490816003193601126102a85761035590610899611a4d565b506108a2611a4d565b90519182916020835260208301906114dc565b8091846109a1576108c53661176e565b90926001600160a01b039283808316911681149485610995575b851561095c575b5050831561092a575b5050506108fa575050f35b610906600292516112d1565b6001810173ffffffffffffffffffffffffffffffffffffffff198154169055015580f35b9091925060018401928354161515928361094a575b5050508580806108ef565b6109549350611d80565b85808061093f565b8491929550168015159182610986575b8261097c575b50509288806108e6565b1490508880610972565b865460081c60ff16925061096c565b865460ff1695506108df565b50fd5b80858592600319360112610359576024359067ffffffffffffffff821161035957506020926109d96109e09236908301611717565b9035611e85565b9051908152f35b929190506105bf5760c03660031901126105bf573590610a05611375565b90610a0e611390565b606435906001600160a01b03808316809303610ace5760843594818616809603610aca578116911681149182610abe575b8215610a8a575b5050610a50578380f35b610a5a90516112d1565b600182019073ffffffffffffffffffffffffffffffffffffffff19825416179055600260a4359101553880808380f35b80151592509082610aaf575b82610aa5575b50503880610a46565b1490503880610a9c565b855460081c60ff169250610a96565b855460ff169250610a3f565b8780fd5b8680fd5b848361035957610ae1366116d7565b829192935b8354851015610bb157600193835b8354811015610b8157610b0787836117d8565b50835190610b54610b6060209284610b228582018093611840565b0394610b36601f199687810183528261133b565b51902093610b44868a6117d8565b5093885193849182018096611840565b0390810183528261133b565b51902014610b77575b610b72906117b3565b610af4565b9394508493610b69565b509394610b929195610b98576117b3565b93610ae6565b610bac610ba582876117d8565b5084611a25565b6117b3565b8280f35b8490816003193601126102a85761035590610bce611b2f565b50610bd7611b2f565b90519182918261162c565b905083916102a85760603660031901126102a8578235906024359067ffffffffffffffff6044358181116105bb57610c1d9036908801611717565b9160018690865491602093848701915b8460ff821610610da657505050610c42578680f35b680100000000000000009586821015610d935790610c65916001820181556117d8565b939093610d81578051928311610d6e57908291610c8c83610c868754611806565b876118da565b81601f8411600114610d0857508792610cfd575b50508160011b916000199060031b1c19161790555b805491821015610cea57610cd09293506001820181556117d8565b8154906000199060031b1b19169055808280808080808680f35b602483604186634e487b7160e01b835252fd5b015190508780610ca0565b8589528089209350601f1985169089905b828210610d56575050908460019594939210610d3d575b505050811b019055610cb5565b015160001960f88460031b161c19169055878080610d30565b80600186978294978701518155019601940190610d19565b60248760418a634e487b7160e01b835252fd5b602487808a634e487b7160e01b825252fd5b60248860418b634e487b7160e01b835252fd5b610db0818b6117d8565b508251610dc4816104858a82018095611840565b519020825187810190610ddf89828d516104b281878c611414565b51902014610df6575b610df190611a8f565b610c2d565b8a9350610de8565b848361035957610e0d366116ed565b9091600190818086815b610e44575b5050610e26578480f35b610e36610e3c9460028301611aee565b01611aa0565b818080808480f35b60028401805460ff83161015610eab5781610e5e916117d8565b9054906001600160a01b03600392818b1692841b1c1614610e8a575b50610e8490611a8f565b81610e17565b9250610e8490610ea589948861028161027385888b016117d8565b90610e7a565b50610e1c565b61035590610bd7610ec136611591565b91611b95565b848361035957610ed6366116ed565b9190835b6002830190815460ff82161015610f4757610ef881610f19936117d8565b9054906001600160a01b0360039281871692841b1c1614610f1e5750611a8f565b610eda565b610f419086610281610f338560018a016117d8565b929093838554911b1c611a82565b86610637565b8580f35b848361035957610f5a366116d7565b919081935b60029384830190815487101561103457600193855b8783018054821015610ff457610f8a8a866117d8565b50610b54610fd58851610fc58660209583610fa88882018093611840565b0393610fbc601f199586810183528261133b565b519020966117d8565b50938a5193849182018096611840565b51902014610fec575b610fe7906117b3565b610f74565b869550610fde565b505095879261100d94989295611016575b5050506117b3565b93929092610f5f565b61102c92611023916117d8565b50908501611a25565b808780611005565b8480f35b848460803660031901126102a85767ffffffffffffffff9181358381116102a85761106690369084016113a6565b9360249384359081116105bf576110809036908501611533565b92611089611390565b946064928335946001600160a01b03809816905b895160ff82169081101561114c57828a6110b7838e611b4f565b5116146110ce575b506110c990611a8f565b61109d565b876110d9828b611b4f565b51111561110a5790816111036110fc8a6110f66110c9968e611b4f565b51611a82565b918b611b4f565b52906110bf565b505050906020601292519362461bcd60e51b85528401528201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152fd5b8351806103558b8261169c565b839085606036600319011261035957506102c4602092611177611375565b6044359135611d80565b849061118c36611591565b919093611197611b2f565b505b8382015180519060ff8316918210156111ff5790806111d693926111c66001600160a01b03928392611b4f565b5116908816146111db5750611a8f565b611199565b6111f86020850151916111f2876110f68386611b4f565b92611b4f565b5286610637565b855180610355868261162c565b8480600319360112610359578060208351611226816112d1565b828152015260208251611238816112d1565b828152018181528251918252516020820152f35b8484826003193601126102a857803567ffffffffffffffff81116105bf57611276913691016113a6565b61127e611375565b6001600160a01b0390811691835b815160ff8216908110156112c557836112a6869285611b4f565b5116146112bc575b6112b790611a8f565b61128c565b600194506112ae565b60208688519015158152f35b6040810190811067ffffffffffffffff8211176112ed57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176112ed57604052565b60a0810190811067ffffffffffffffff8211176112ed57604052565b90601f8019910116810190811067ffffffffffffffff8211176112ed57604052565b67ffffffffffffffff81116112ed5760051b60200190565b602435906001600160a01b038216820361138b57565b600080fd5b604435906001600160a01b038216820361138b57565b81601f8201121561138b578035916113bd8361135d565b926113cb604051948561133b565b808452602092838086019260051b82010192831161138b578301905b8282106113f5575050505090565b81356001600160a01b038116810361138b5781529083019083016113e7565b60005b8381106114275750506000910152565b8181015183820152602001611417565b908082519081815260208091019281808460051b8301019501936000915b8483106114655750505050505090565b909192939495848080600193601f1980878303018852601f8c5161149481518092818752878088019101611414565b011601019801930193019194939290611455565b90815180825260208080930193019160005b8281106114c8575050505090565b8351855293810193928101926001016114ba565b61153091606061151f61150d6114fb8551608086526080860190611437565b602086015185820360208701526114a8565b60408501518482036040860152611437565b9201519060608184039101526114a8565b90565b81601f8201121561138b5780359161154a8361135d565b92611558604051948561133b565b808452602092838086019260051b82010192831161138b578301905b828210611582575050505090565b81358152908301908301611574565b60031960608282011261138b576004359167ffffffffffffffff9182841161138b57606090848303011261138b57604051926115cc84611303565b80600401358452602481013583811161138b578260046115ee92840101611533565b6020850152604481013592831161138b5761160c92016004016113a6565b6040820152906024356001600160a01b038116810361138b579060443590565b9060209081835280518284015260406116528383015160608387015260808601906114a8565b910151926060601f198284030191015281808451928381520193019160005b82811061167f575050505090565b83516001600160a01b031685529381019392810192600101611671565b6020908160408183019282815285518094520193019160005b8281106116c3575050505090565b8351855293810193928101926001016116b5565b604090600319011261138b576004359060243590565b606090600319011261138b57600435906024356001600160a01b038116810361138b579060443590565b81601f8201121561138b5780359067ffffffffffffffff82116112ed576040519261174c601f8401601f19166020018561133b565b8284526020838301011161138b57816000926020809301838601378301015290565b60a090600319011261138b57600435906001600160a01b03602435818116810361138b5791604435828116810361138b5791606435908116810361138b579060843590565b60001981146117c25760010190565b634e487b7160e01b600052601160045260246000fd5b80548210156117f05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611836575b602083101461182057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611815565b60009291815461184f81611806565b926001918083169081156118a8575060011461186c575b50505050565b90919293945060005260209081600020906000915b8583106118975750505050019038808080611866565b805485840152918301918101611881565b60ff1916845250505081151590910201915038808080611866565b8181106118ce575050565b600081556001016118c3565b9190601f81116118e957505050565b611915926000526020600020906020601f840160051c83019310611917575b601f0160051c01906118c3565b565b9091508190611908565b908082146119fc576119338154611806565b9067ffffffffffffffff82116112ed578190611959826119538654611806565b866118da565b600090601f831160011461199057600092611985575b50508160011b916000199060031b1c1916179055565b01549050388061196f565b81526020808220858352818320935090601f1985169083905b8282106119e35750509084600195949392106119ca575b505050811b019055565b015460001960f88460031b161c191690553880806119c0565b84958192958501548155600180910196019401906119a9565b5050565b9190611a0f5761191591611921565b634e487b7160e01b600052600060045260246000fd5b90815491680100000000000000008310156112ed57826104f8916001611915950181556117d8565b604051906080820182811067ffffffffffffffff8211176112ed57604052606080838181528160208201528160408201520152565b919082039182116117c257565b60ff1660ff81146117c25760010190565b90815491680100000000000000008310156112ed5782611ac8916001611915950181556117d8565b90919082549060031b91821b91600019901b1916179055565b919082018092116117c257565b8054680100000000000000008110156112ed57611b10916001820181556117d8565b819291549060031b916001600160a01b03809116831b921b1916179055565b60405190611b3c82611303565b6060604083600081528260208201520152565b80518210156117f05760209160051b010190565b90611b6d8261135d565b611b7a604051918261133b565b8281528092611b8b601f199161135d565b0190602036910137565b919091611ba0611b2f565b50600160005b604083015180519060ff831691821015611c16578190611bcf6001600160a01b03928392611b4f565b511690871614611be9575b50611be490611a8f565b611ba6565b9150611be490600092611c0f6020860151916111f288611c098386611b4f565b51611ae1565b5290611bda565b50929392505015611d265781516020830194855151600181018091116117c257611c41604091611b63565b94019182515193600185018095116117c257611c5c8561135d565b94611c6a604051968761133b565b808652611c79601f199161135d565b0136602087013760405191611c8d83611303565b8252602082019586526040820194855260005b84518051821015611cf157906001600160a01b03611cc182611cec94611b4f565b5116611cce828951611b4f565b52611cda818b51611b4f565b51611ce6828a51611b4f565b526117b3565b611ca0565b505094919692611d146001600160a01b0391611d22969893985190515190611b4f565b911690525190515190611b4f565b5290565b50905090565b91939282518511908115611d72575b8115611d65575b5015611d5f575060400180516064908103935083116117c2575190565b90509190565b6001915015151438611d42565b602084015186109150611d3b565b91906001600160a01b03808454169116149182611da9575b505015611da457600190565b600090565b6001015480159250908215611dc2575b50503880611d98565b111590503880611db9565b93906001600160a01b039283808316911681149485611e79575b8515611e40575b50508315611e0e575b505050611e045750600090565b5460101c60ff1690565b90919250600184019283541615159283611e2e575b505050388080611df7565b611e389350611d80565b388080611e23565b8491929550168015159182611e6a575b82611e60575b5050923880611dee565b1490503880611e56565b865460081c60ff169250611e50565b865460ff169550611de7565b9060408051602092838201815192611ea78682818601966104b281878a611414565b5190208351858101907f656e646f776d656e74436f6e74726f6c6c657200000000000000000000000000825260138152611ee0816112d1565b51902003611eef575050505090565b825184810190611f07868285516104b281878a611414565b5190208351858101907f6d6174757269747957686974656c697374000000000000000000000000000000825260118152611f40816112d1565b51902003611f525750505050600c0190565b825184810190611f6a868285516104b281878a611414565b5190208351858101907f73706c6974546f4c6971756964000000000000000000000000000000000000008252600d8152611fa3816112d1565b51902003611fb5575050505060300190565b825184810190611fcd868285516104b281878a611414565b5190208351858101907f69676e6f72655573657253706c69747300000000000000000000000000000000825260108152612006816112d1565b51902003612018575050505060330190565b825184810190612030868285516104b281878a611414565b5190208351858101907f73747261746567696573000000000000000000000000000000000000000000008252600a8152612069816112d1565b5190200361207b575050505060030190565b825184810190612093868285516104b281878a611414565b5190208351858101907f77686974656c697374656442656e6566696369617269657300000000000000008252601881526120cc816112d1565b519020036120de575050505060060190565b8251848101906120f6868285516104b281878a611414565b5190208351858101907f77686974656c6973746564436f6e7472696275746f727300000000000000000082526017815261212f816112d1565b51902003612141575050505060090190565b825184810190612159868285516104b281878a611414565b5190208351858101907f6d6174757269747954696d6500000000000000000000000000000000000000008252600c8152612192816112d1565b519020036121a45750505050600f0190565b8251848101906121bc868285516104b281878a611414565b5190208351858101907f70726f66696c65000000000000000000000000000000000000000000000000008252600781526121f5816112d1565b51902003612207575050505060120190565b82518481019061221f868285516104b281878a611414565b5190208351858101907f6561726e696e67734665650000000000000000000000000000000000000000008252600b8152612258816112d1565b5190200361226a575050505060150190565b825184810190612282868285516104b281878a611414565b5190208351858101907f77697468647261774665650000000000000000000000000000000000000000008252600b81526122bb816112d1565b519020036122cd575050505060180190565b8251848101906122e5868285516104b281878a611414565b5190208351858101907f6465706f736974466565000000000000000000000000000000000000000000008252600a815261231e816112d1565b519020036123305750505050601b0190565b825184810190612348868285516104b281878a611414565b5190208351858101907f61756d4665650000000000000000000000000000000000000000000000000000825260068152612381816112d1565b519020036123935750505050601e0190565b8251848101906123ab868285516104b281878a611414565b5190208351858101907f6b7963446f6e6f72734f6e6c79000000000000000000000000000000000000008252600d81526123e4816112d1565b519020036123f6575050505060210190565b82518481019061240e868285516104b281878a611414565b5190208351858101907f6e616d6500000000000000000000000000000000000000000000000000000000825260048152612447816112d1565b51902003612459575050505060240190565b825184810190612471868285516104b281878a611414565b5190208351858101907f696d6167650000000000000000000000000000000000000000000000000000008252600581526124aa816112d1565b519020036124bc575050505060270190565b8251848101906124d4868285516104b281878a611414565b5190208351858101907f6c6f676f0000000000000000000000000000000000000000000000000000000082526004815261250d816112d1565b5190200361251f5750505050602a0190565b61253984845180936104b283830196879251928391611414565b5190208151838101907f63617465676f72696573000000000000000000000000000000000000000000008252600a8152612572816112d1565b51902003612582575050602d0190565b60649250519062461bcd60e51b82526004820152600d60248201527f496e76616c6964496e70757473000000000000000000000000000000000000006044820152fdfea2646970667358221220c3d273f7ebc73d195e971511b84eadb97cfc2839c080007ffc573dc611ff846164736f6c63430008120033";

type AngelCoreStructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngelCoreStructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngelCoreStruct__factory extends ContractFactory {
  constructor(...args: AngelCoreStructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngelCoreStruct> {
    return super.deploy(overrides || {}) as Promise<AngelCoreStruct>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AngelCoreStruct {
    return super.attach(address) as AngelCoreStruct;
  }
  override connect(signer: Signer): AngelCoreStruct__factory {
    return super.connect(signer) as AngelCoreStruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelCoreStructInterface {
    return new utils.Interface(_abi) as AngelCoreStructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelCoreStruct {
    return new Contract(address, _abi, signerOrProvider) as AngelCoreStruct;
  }
}
