/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IndexFund,
  IndexFundInterface,
} from "../../../../contracts/core/index-fund/IndexFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32[]",
            name: "member_ids",
            type: "uint32[]",
          },
          {
            internalType: "uint256[]",
            name: "locked_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquid_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedSplit",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidSplit",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.DonationMessages",
        name: "messages",
        type: "tuple",
      },
    ],
    name: "DonationMessagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "IndexFundCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IndexFundRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "RegistrarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "UpdateActiveFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextFundId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage._State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "UpdateIndexFundState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
      {
        internalType: "bool",
        name: "rotatingFund",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "splitToLiquid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryHeight",
        type: "uint256",
      },
    ],
    name: "createIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "senderAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fundId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "split",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.DepositMsg",
        name: "curDetails",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum AngelCoreStruct.AssetInfoBase",
            name: "info",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AngelCoreStruct.AssetBase",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "depositERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initIndexFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryActiveFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "queryFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
    ],
    name: "queryInvolvedFunds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.StateResponseMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "removeIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "member",
        type: "uint32",
      },
    ],
    name: "removeMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.UpdateConfigMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
    ],
    name: "updateFundMembers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "updateRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600160125561399b90816100218239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806335fc44d3146124c25780633d6c7ef414611eba578063592b700a14611e1b578063608ce43314611d0d5780637863891e146119f0578063873e9e1914611972578063880cdc31146118af57806393a9d3cd1461166d578063940d203c1461157c578063b4d090851461152f578063cc2e909914611281578063d8e2bba114610d71578063e68f909d14610ccd5763eac4f623146100b657600080fd5b34610c5757600319608036820112610c57576100d0612752565b906040366023190112610c575760405190604082018281106001600160401b0382111761070457604052602435825260443560208301526001600160401b0360643511610c575760809060643536030112610c57576040519161013283612604565b606435600401356003811015610c5757835260643560248101356020850152604401356001600160a01b0381168103610c575760408401526001600160401b0360648035013511610c57576101933660046064803501356064350101612676565b60608401526101a06127b9565b82516003811015610c5c57610c935760015460405163e68f909d60e01b81526001600160a01b03909116906103e081600481855afa80156108f657610c72575b5083516003811015610c5c57610c5757602060018060a01b036040860151166024604051809481936302b05ecb60e11b835260048301525afa9081156108f657600091610c38575b5015610bfe57602083015115610bc357602083015191600254610b65575b60015460405163e68f909d60e01b815293906103e090859060049082906001600160a01b03165afa9384156108f657600094610b32575b5081511561099857508051600052600a6020526003604060002001541561096657806103279151600052600a6020526102ce6102c8604060002042906102c34391612ecb565b61369e565b15612f96565b6102f56101a08501518251600052600a6020526004604060002001546020840151916135cc565b905160005260036040600020019061031b61032260208801519360405192838092612a06565b038261263a565b61303a565b60408381015160208581015192516323b872dd60e01b81526001600160a01b0394851660048201523060248201526044810193909352919283916064918391600091165af19081156108f657600091610947575b5015610902576040828101519181018051602080860151935163095ea7b360e01b81526001600160a01b0392831660048201526024810194909452919383916044918391600091165af19081156108f6576000916108c7575b50156108825751604090910151600d546001600160a01b03918216929091166103fc826126bd565b9061040a604051928361263a565b828252601f19928361041b826126bd565b0136602085013761042b816126bd565b94610439604051968761263a565b81865284610446836126bd565b01366020880137610456826126bd565b94610464604051968761263a565b828652610470836126bd565b0160005b81811061086f575050600060105493601154600e5491600f54935b86811061071a578a8a6104be6104b76001600160a01b036104af8e6128dd565b5116936128dd565b51916128dd565b51906040519160408301908382106001600160401b0383111761070457610548946000938493604052601d86527f63616c6c20726576657274656420776974686f7574206d6573736167650000006020870152602083519301915af13d156106fc573d9061052b8261265b565b91610539604051938461263a565b82523d6000602084013e613865565b50600d546000600d55806106c4575b50600e546000600e5580610692575b50600f546000600f5580610660575b5060105460006010558061062e575b506011546000601155806105fc575b7f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b604051806105e9819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a16001601255602060405160018152f35b60116000526000805160206138e6833981519152908101905b8181106106225750610593565b60008155600101610615565b6010600052600080516020613926833981519152908101905b8181106106545750610584565b60008155600101610647565b600f600052600080516020613946833981519152908101905b8181106106865750610575565b60008155600101610679565b600e6000526000805160206138c6833981519152908101905b8181106106b85750610566565b600081556001016106ab565b600d6000526007600080516020613906833981519152910160031c8101905b8181106106f05750610557565b600081556001016106e3565b606090613865565b634e487b7160e01b600052604160045260246000fd5b81610725828b6128ea565b526000610732828d6128ea565b528060031c600080516020613906833981519152015490888110156108595780600080516020613926833981519152015484821015610859576011600052816000805160206138e683398151915201549063ffffffff60405194610795866125e9565b60e08560051b161c168452602084015260408301528481101561085957806000805160206138c683398151915201549186821015610859576107f161085493600f60005283600080516020613946833981519152015490612768565b604080519263665a62f360e01b602085015263ffffffff8151166024850152602081015160448501520151606483015288608483015260a490818301528152610839816125ce565b610843828d6128ea565b5261084e818c6128ea565b50612f48565b61048f565b634e487b7160e01b600052603260045260246000fd5b6060602082890181019190915201610474565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f20617070726f76652066756e64730000000000000000006044820152606490fd5b6108e9915060203d6020116108ef575b6108e1818361263a565b810190612fd1565b386103d4565b503d6108d7565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207472616e736665722066756e647300000000000000006044820152606490fd5b610960915060203d6020116108ef576108e1818361263a565b3861037b565b60405162461bcd60e51b815260206004820152600a602482015269115b5c1d1e48119d5b9960b21b6044820152606490fd5b60045490919015610aa65790805b6109b1575050610327565b610a8790600690610a8282549283600052600a90816020526109dc6003604060002001541515612f57565b84600052816020526109f96102c842436102c36040600020612ecb565b60045490600785610a0c82548095612bf4565b93848210610a8d5750506000805160206138a683398151915291600060209255610a38424383546136e1565b809155604051908152a19384915b6101a08a0151916000526020526003610322610a71604060002093600485015460208c0151916135cc565b9261031b6040518094819301612a06565b612bf4565b806109a6565b90919350610a9b9250612768565b905582938491610a46565b610b2d9150610b1260065480600052600a602052610acd6003604060002001541515612f57565b80600052600a602052610aed6102c8604060002042906102c34391612ecb565b6101a086015190600052600a60205260406000209260206004850154910151916135cc565b600361032260208801519361031b6040518094819301612a06565b610327565b610b579194506103e03d6103e011610b5e575b610b4f818361263a565b810190612c5e565b923861027d565b503d610b45565b6008544310610246576000805160206138a68339815191526020610b8e600654429043906136e1565b80600655604051908152a160006007555b600854804310610bbd57600254610bb591612768565b600855610b9f565b50610246565b60405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a5908199d5b9908185b5bdd5b9d606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152712737ba1030b1b1b2b83a32b2103a37b5b2b760711b6044820152606490fd5b610c51915060203d6020116108ef576108e1818361263a565b38610228565b600080fd5b634e487b7160e01b600052602160045260246000fd5b610c8c906103e03d6103e011610b5e57610b4f818361263a565b50386101e0565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206173736574207479706560701b6044820152606490fd5b34610c57576000366003190112610c575760006080604051610cee8161261f565b828152826020820152826040820152826060820152015260a0604051610d138161261f565b600180831b039081600054169182825280600154169060208301918252600254906040840191825260035492606085019384526080600454950194855260405195865251166020850152516040840152516060830152516080820152f35b34610c57576020366003190112610c5757610d8a6126d4565b610d926127b9565b60015460405163e68f909d60e01b81526001600160a01b03916103e0919082908290600490829087165afa9081156108f657604092600092611264575b50500190808251161561122057610de99151163314612b90565b60005b63ffffffff8216600052600b6020526040600020805463ffffffff831610156111d45781610e1991612935565b90546003918181841b1c600052600a9081602052610e4f8661031b610e4a8760406000200160405192838092612a06565b6137de565b929092610e6a575b5050505050610e6590612eb6565b610dec565b8382869893959794961b1c6000526020528560406000200193845463ffffffff8216101561118b575b84546000198101908111610f0c5763ffffffff821690811015610f22576001019063ffffffff8211610f0c5763ffffffff610ed1610f079388613017565b9054908a1b1c16610f00610ee58389613017565b819391549060031b9163ffffffff809116831b921b19161790565b9055612eb6565b610e93565b634e487b7160e01b600052601160045260246000fd5b5050949293919093805490811561117557610f41600019830182613017565b63ffffffff825491881b1b19169055600019820181556040519160208360001983018152019160005260206000206000905b600019830160078301106111075793807f500978d9e5f72b20b6a716a3d6efff3c09afb83b78ac2ad0f933c747827644cd97946040979461101c94610e659c9b985491600019810182106110ee575b600019810182106110d3575b600019810182106110b8575b6000198101821061109c575b60001981018210611080575b60001981018210611064575b60001981018210611048575b600019011161103a575b50039061263a565b8351921b1c815263ffffffff86166020820152a19083808080610e57565b60e01c81526020018c611014565b9092602060019163ffffffff8560c01c1681520193019061100a565b9092602060019163ffffffff8560a01c16815201930190610ffe565b9092602060019163ffffffff8560801c16815201930190610ff2565b9092602060019163ffffffff8560601c16815201930190610fe6565b9092602060019163ffffffff858e1c16815201930190610fda565b9092602060019163ffffffff85831c16815201930190610fce565b9092602060019163ffffffff8516815201930190610fc2565b805463ffffffff8082168652602082811c821690870152604082811c821690870152606082811c821690870152608082811c82169087015260a082811c82169087015260c082811c9091169086015260e090811c908501526101009093019260089190910190600101610f73565b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152601960248201527f4572726f7220696e2072656d6f76653a20696e7465726e616c000000000000006044820152606490fd5b0390fd5b63ffffffff8316600052600b602052604060002080546000825580611204575b6001601255602060405160018152f35b61121991600052602060002090810190612849565b80806111f4565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e747320636f6e7472616374206e6f7420636f6e666967757265646044820152fd5b61127a9250803d10610b5e57610b4f818361263a565b8480610dcf565b34610c57576040366003190112610c57576004356001600160401b03602435818111610c57576112b59036906004016126e7565b916112be6127b9565b6112d360018060a01b03600054163314612b90565b825160035411156114ea5780600052602091600a83526112fd604060002042906102c34391612ecb565b6114b05781600052600a83526003604060002001908451908111610704576113258183612873565b83850191600052836000208160031c9160005b83811061146d57506007198116900380611419575b5050505060005b835181101561140a5763ffffffff8061136d83876128ea565b5116600052600b9081855260406000206040519081878254918281520191600052876000209060005b8181106113f65750505085826113b76113cb979695946113bc94038261263a565b61382e565b9050156113d0575b5050612f48565b611354565b6113da83886128ea565b511660005284526113ef83604060002061294d565b85806113c4565b825484529289019260019283019201611396565b82600160125560405160018152f35b9260009360005b87828210611437575050505001558380808061134d565b611463849763ffffffff60019495965116908560021b60031b9163ffffffff809116831b921b19161790565b9601929101611420565b6000805b886008821061148857505083820155600101611338565b875191979260019263ffffffff60058b901b81811b19909316911690911b1792019601611471565b60405162461bcd60e51b8152600481018490526012602482015271125b99195e08119d5b9908115e1c1a5c995960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f46756e64206d656d626572206c696d69742065786365656465640000000000006044820152606490fd5b34610c57576000366003190112610c5757611548613615565b50600654600052600a6020526115786115646040600020612ecb565b604051918291602083526020830190612537565b0390f35b34610c5757602080600319360112610c575763ffffffff61159b6126d4565b1680600052600b8083526115b360406000205461364e565b9060005b836000528185526040600020805482101561160f57906115da8161160a93612935565b90549060031b1c600052600a86526115f56040600020612ecb565b6115ff82866128ea565b5261084e81856128ea565b6115b7565b604080518781528551818901819052600092600582901b8301810191888b01918b9085015b8287106116415785850386f35b90919293828061165d600193603f198a82030186528851612537565b9601920196019592919092611634565b34610c5757602080600319360112610c575760043561168a6127b9565b6116a060018060a01b0360005416331415612b90565b80600052600a82528060065414611884575b6116c6816040516113b78161031b81612b97565b611780575b506005546000198101908111610f0c577fb1a52d9fa203ad04e22da5c0c85bef32136b120839efb2ea6c7b7991bc80191e91839160055580600052600a8252600060066040822082815561172160018201612c01565b61172d60028201612c01565b60038101805484825580611761575b50508260048201558260058201550155604051908152a1600160125560405160018152f35b6117799185526007878620910160031c810190612849565b878061173c565b9190600c92835481101561118b575b83546000198101908111610f0c578110156117f2576001810190818111610f0c576117e86117bf6117ed936128fe565b90546117ca846128fe565b91909260031b1c9082549060031b91821b91600019901b1916179055565b612f48565b61178f565b5090918054908115611175576000199182019161180e836128fe565b909182549160031b1b1916905581815560405191848382815201916000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c79060005b868282106118705750505050908061186a92039061263a565b826116cb565b835485529093019260019283019201611851565b6000805160206138a68339815191528261189f4243856136e1565b80600655604051908152a16116b2565b34610c57576020366003190112610c57576118c8612752565b6118d06127b9565b6000546001600160a01b039190828116330361193e577f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b92602092168091611919821515612775565b6001600160a01b03191617600055604051908152a16001601255602060405160018152f35b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b34610c57576000366003190112610c57576000606060405161199381612604565b828152826020820152826040820152015260806005546006546007546008549160606040516119c181612604565b858152602081019283526040810193845201928352604051938452516020840152516040830152516060820152f35b34610c57576080366003190112610c5757604051611a0d81612604565b611a15612752565b815260208082016024358152604083016044358152606084019160643583526013549260ff8460081c161593848095611d00575b8015611ce9575b15611c8d5760ff19811660011760135584611c7b575b5085516001600160a01b039690871615611c3657611b60949596611aed91601e601455600a601555511692519351915192836080604051611aa68161261f565b338152838b8201528760408201528560608201520152336001600160601b0360a01b600054161760005560018060a01b03166001600160601b0360a01b6001541617600155565b826002556003556004557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d275293016260405180611b57819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b0390a143612768565b60016080604051611b708161261f565b6000815260008682015260006040820152836060820152015260006005556000600655600060075560085560016009557f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b60405180611bf6819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a1611bff57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196013541660135560405160018152a1005b60405162461bcd60e51b815260048101879052601960248201527f696e76616c6964207265676973747261722061646472657373000000000000006044820152606490fd5b61ffff19166101011760135586611a66565b60405162461bcd60e51b815260048101879052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015611a505750600160ff821614611a50565b50600160ff821610611a49565b34610c57576060366003190112610c5757604051611d2a816125e9565b600435815260208101906024358252604081016044358152611d4a6127b9565b6000546001600160a01b0316330361193e5780518015611e0f5760075411611dd957516004555b51600255516003557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d2752930162604051806105e9819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420496e7075747360901b6044820152606490fd5b50506000600455611d71565b34610c57576020366003190112610c5757611e34612752565b611e3c6127b9565b6000546001600160a01b03908116330361193e5781611ea36020927fe696533f02cb3abcaaf5e85cd893de5abf147a82fd1496ddd3e5219da0a66437941691611e86831515612775565b60018060a01b03166001600160601b0360a01b6001541617600155565b604051908152a16001601255602060405160018152f35b34610c575760e0366003190112610c57576004356001600160401b038111610c5757611eea903690600401612676565b6024356001600160401b038111610c5757611f09903690600401612676565b6044356001600160401b038111610c5757611f289036906004016126e7565b606435151560643503610c5757611f3d6127b9565b6000546001600160a01b0316330361193e5760646084351161248d5760095460405192611f69846125ce565b818452602084019485526040840152816060840152608435608084015260a43560a084015260c43560c0840152600052600a60205260406000209282518455519283516001600160401b03811161070457611fc7600183015461280f565b601f8111612458575b506020601f82116001146123e95781929394956000926123de575b50508160011b916000199060031b1c19161760018201555b60408301519283516001600160401b03811161070457612026600284015461280f565b601f811161239e575b506020601f821160011461232f578192939495600092612324575b50508160011b916000199060031b1c19161760028301555b606081015180516001600160401b03811161070457602060038501926120888385612873565b019160005260206000209060005b8160031c81106122e1575060071981168103612287575b50505060c08160806006930151600485015560a08101516005850155015191015560005b815160ff82169081101561211d576120ee63ffffffff91846128ea565b5116600052600b60205261210960406000206009549061294d565b60ff809116908114610f0c576001016120d1565b60095480600052600a6020527fb122d9f73c46b97df52cc57ddb3563f7d591316c0547c3d4f980d5904b0e9c3160406000206040518091848252604060208301528054604083015260e0606083015260066121af612182610120850160018501612970565b61219c603f19918287820301608088015260028601612970565b908582030160a086015260038401612a06565b91600481015460c0850152600581015460e085015201546101008301520390a160055415801561227d575b61225c575b60643561221a575b5060055460018101809111610f0c5760055560095460018101809111610f0c576009556001601255602060405160018152f35b600c5490600160401b8210156107045761223d8260016122569401600c556128fe565b90919082549060031b91821b91600019901b1916179055565b806121e7565b806006556000805160206138a68339815191526020604051838152a16121df565b50600654156121da565b60009260005b6007198316830381106122ab57505060031c015560c06006856120ad565b909360206122d860019263ffffffff885116908560021b60031b9163ffffffff809116831b921b19161790565b9501910161228d565b6000805b600881106122fa575083820155600101612096565b855190959160019160209163ffffffff60058a901b81811b199092169216901b17920195016122e5565b01519050858061204a565b6002840160005260206000209060005b601f1984168110612386575060019394959683601f1981161061236d575b505050811b016002830155612062565b015160001960f88460031b161c1916905585808061235d565b9091602060018192858b01518155019301910161233f565b6123ce90600285016000526020600020601f840160051c810191602085106123d4575b601f0160051c0190612849565b8561202f565b90915081906123c1565b015190508580611feb565b6001830160005260206000209060005b601f1984168110612440575060019394959683601f19811610612427575b505050811b016001820155612003565b015160001960f88460031b161c19169055858080612417565b9091602060018192858b0151815501930191016123f9565b61248790600184016000526020600020601f840160051c810191602085106123d457601f0160051c0190612849565b85611fd0565b60405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081cdc1b1a5d609a1b6044820152606490fd5b34610c57576020366003190112610c57576124db613615565b50600435600052600a6020526115786115646040600020612ecb565b919082519283825260005b848110612523575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612502565b908151815260209161256b6125598483015160e08686015260e08501906124f7565b604083015184820360408601526124f7565b92606082015193838103606085015281808651928381520195019160005b8281106125b4575050505060c081608082930151608085015260a081015160a0850152015191015290565b835163ffffffff1687529581019592810192600101612589565b60e081019081106001600160401b0382111761070457604052565b606081019081106001600160401b0382111761070457604052565b608081019081106001600160401b0382111761070457604052565b60a081019081106001600160401b0382111761070457604052565b90601f801991011681019081106001600160401b0382111761070457604052565b6001600160401b03811161070457601f01601f191660200190565b81601f82011215610c575780359061268d8261265b565b9261269b604051948561263a565b82845260208383010111610c5757816000926020809301838601378301015290565b6001600160401b0381116107045760051b60200190565b6004359063ffffffff82168203610c5757565b81601f82011215610c57578035916126fe836126bd565b9261270c604051948561263a565b808452602092838086019260051b820101928311610c57578301905b828210612736575050505090565b813563ffffffff81168103610c57578152908301908301612728565b600435906001600160a01b0382168203610c5757565b91908201809211610f0c57565b1561277c57565b60405162461bcd60e51b8152602060048201526015602482015274696e76616c696420696e707574206164647265737360581b6044820152606490fd5b6002601254146127ca576002601255565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90600182811c9216801561283f575b602083101461282957565b634e487b7160e01b600052602260045260246000fd5b91607f169161281e565b818110612854575050565b60008155600101612849565b81810292918115918404141715610f0c57565b90600160401b811161070457815481835580821061289057505050565b6128c0926000526007602060002091601c82850160031c84019460021b16806128c2575b500160031c0190612849565b565b600019908186019182549160200360031b1c169055386128b4565b8051156108595760200190565b80518210156108595760209160051b010190565b600c5481101561085957600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70190600090565b80548210156108595760005260206000200190600090565b90815491600160401b831015610704578261223d9160016128c095018155612935565b90600092918054916129818361280f565b9182825260019384811690816000146129e357506001146129a3575b50505050565b90919394506000526020928360002092846000945b8386106129cf57505050500101903880808061299d565b8054858701830152940193859082016129b8565b9294505050602093945060ff191683830152151560051b0101903880808061299d565b805480835260208093019160005282600020906000915b816007840110612b2757549184828210612b11575b828210612af9575b828210612ae0575b828210612ac7575b828210612aae575b828210612a95575b828210612a7c575b5010612a6f575b50905090565b60e01c8152018038612a69565b6001919463ffffffff8560c01c16815201930184612a62565b6001919463ffffffff8560a01c16815201930184612a5a565b6001919463ffffffff8560801c16815201930184612a52565b6001919463ffffffff8560601c16815201930184612a4a565b6001919463ffffffff8560401c16815201930184612a42565b6001919463ffffffff85831c16815201930184612a3a565b6001919463ffffffff8516815201930184612a32565b926001610100600892865463ffffffff808216835280828b1c168a84015260408183821c169084015260608183821c169084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e090811c90820152019401920191612a1d565b1561193e57565b600c5490818152602080910191600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7916000905b828210612bdd575050505090565b835485529384019360019384019390910190612bcf565b91908203918211610f0c57565b612c0b815461280f565b9081612c15575050565b81601f60009311600114612c27575055565b908083918252612c46601f60208420940160051c840160018501612849565b5555565b51906001600160a01b0382168203610c5757565b8091036103e08112610c57576040918251926103a092838501908582106001600160401b03831117610704576060918352612c9884612c4a565b8652612ca660208501612c4a565b6020870152612cb6838501612c4a565b83870152612cc5828501612c4a565b82870152612cd560808501612c4a565b6080870152612ce660a08501612c4a565b60a0870152612cf760c08501612c4a565b60c0870152612d0860e08501612c4a565b60e0870152610100612d1b818601612c4a565b90870152610120612d2d818601612c4a565b90870152610140612d3f818601612c4a565b90870152610160612d51818601612c4a565b90870152610180612d63818601612c4a565b9087015261019f190112610c5757612eaf9181612ea56103c0935195612d88876125e9565b6101a0968785015181526101c0978886015160208301526101e094858701519083015289015261020096612dbd888601612c4a565b9089015261022092612dd0848601612c4a565b9089015261024096612de3888601612c4a565b9089015261026092838501519089015261028096612e02888601612c4a565b908901526102a092612e15848601612c4a565b908901526102c096612e28888601612c4a565b908901526102e092612e3b848601612c4a565b9089015261030096612e4e888601612c4a565b9089015261032092612e61848601612c4a565b9089015261034096612e74888601612c4a565b9089015261036092612e87848601612c4a565b9089015261038096612e9a888601612c4a565b908901528301612c4a565b9086015201612c4a565b9082015290565b63ffffffff809116908114610f0c5760010190565b90604051612ed8816125ce565b60c06006829480548452604051612ef68161031b8160018601612970565b6020850152604051612f0f8161031b8160028601612970565b6040850152604051612f288161031b8160038601612a06565b606085015260048101546080850152600581015460a08501520154910152565b6000198114610f0c5760010190565b15612f5e57565b60405162461bcd60e51b815260206004820152601060248201526f115b5c1d1e48125b99195e08119d5b9960821b6044820152606490fd5b15612f9d57565b60405162461bcd60e51b815260206004820152600c60248201526b115e1c1a5c995908119d5b9960a21b6044820152606490fd5b90816020910312610c5757518015158103610c575790565b90600d5482101561085957600d600052601c8260031c600080516020613906833981519152019260021b1690565b919091805483101561085957600052601c60206000208360031c019260021b1690565b929180845190811580156135a5575b505050606482810392818411610f0c5760005b86518110156132a5576000908180600d918254915b828110613260575b50156131465750506010548210156108595785826000805160206139268339815191520155601180548310156108595760005282826000805160206138e68339815191520155836130ca8787612860565b04600e8054841015610859576000526130f5836000805160206138c683398151915201918254612768565b905561310c846131058888612860565b0486612bf4565b600f8054841015610859576131419361313a9160005260008051602061394683398151915201918254612768565b9055612f48565b61305c565b90925063ffffffff613158838b6128ea565b5116600160401b918281101561070457610ee561317c916001968782019055612fe9565b90556010805490828210156107045784820180915581101561085957879060008051602061392683398151915201556011805482811015610704578481018083558110156108595785916000526000805160206138e68339815191520155846131e58888612860565b04600e8054908382101561070457858201808255821015610859576000526000805160206138c68339815191520155613229856132228989612860565b0487612bf4565b90600f9384549182101561070457810180855581101561085957613141936000526000805160206139468339815191520155612f48565b8b8561326b83612fe9565b9290549061327f63ffffffff9384926128ea565b51169260031b1c161461329a5761329590612f48565b613071565b945050600138613079565b50505050509050604080519060209081835260c0808401918360a0928382880152600d5480955260e0808801956000805160206139068339815191526000905b826007830110613541575493828210613529575b82821061350f575b8282106134f5575b8282106134da575b8282106134bf575b8282106134a5575b82821061348d575b501061347e575b505050601f939293199081868603019086015282600e549485815201936000805160206138c68339815191529060005b81811061346a575050508085850301606086015282600f549485815201936000805160206139468339815191529060005b8181106134565750505080858503016080860152826010549485815201936000805160206139268339815191529060005b8181106134425750505084840301908401528060115492838152019160116000526000805160206138e6833981519152916000905b82821061342b575050505090807f60a7668728d323bbf6313b5698e94df25d3276093fcfb61da0e8ae6d742ef9a1920390a1565b8354855293840193600193840193909101906133f7565b8254875295850195600192830192016133c2565b825487529585019560019283019201613391565b825487529585019560019283019201613360565b1c845290920191833880613330565b84901c63ffffffff1688529684019660010138613329565b90978560019163ffffffff878b1c16815201980190613321565b90978560019163ffffffff8760801c16815201980190613319565b90978560019163ffffffff8760601c16815201980190613311565b90978560019163ffffffff878a1c16815201980190613309565b90978560019163ffffffff87831c16815201980190613301565b90978560019163ffffffff87168152019801906132f9565b805463ffffffff8082168b52818c1c81168c8c015281891c8116898c0152606082811c8216908c0152608082811c8216908c0152818a1c81168a8c015281871c16868b0152841c848a015261010090980197899550600891909101906001016132e5565b909192506135b65704388080613049565b634e487b7160e01b600052601260045260246000fd5b60009290918061360e5750806135e6575060409150015190565b90602081015182119081613603575b506135fe575090565b905090565b9050518110386135f5565b9250505090565b60405190613622826125ce565b600060c08382815260606020820152606060408201526060808201528260808201528260a08201520152565b90613658826126bd565b613665604051918261263a565b8281528092613676601f19916126bd565b019060005b82811061368757505050565b602090613692613615565b8282850101520161367b565b60c08101518015159392846136d6575b505082156136bb57505090565b60a00151801515925090826136cf57505090565b1015905090565b1015925038806136ae565b9091600c54906136f08261364e565b9360005b8381106137595750505050613713906040516113b78161031b81612b97565b158015613743575b1561372f575061372a906128dd565b515190565b60018101809111610f0c5761372a916128ea565b5081516000198101908111610f0c57811461371b565b8061376661379c926128fe565b9054600391821b1c600052600a60209080825260409161378d88886102c386600020612ecb565b156137a1575b50505050612f48565b6136f4565b6137bf936137ae866128fe565b9054911b1c60005252600020612ecb565b6137c982896128ea565b526137d481886128ea565b5038808080613793565b9060005b825163ffffffff9081831690811015613821576138008291866128ea565b5116908316146138185761381390612eb6565b6137e2565b91505090600190565b5050505050600090600090565b9060005b825181101561385a578161384682856128ea565b51146138185761385590612f48565b613832565b505050600090600090565b90919015613871575090565b8151156138815750805190602001fd5b60405162461bcd60e51b8152602060048201529081906111d09060248301906124f756fe35cd92409e9df67a917c3d763d3d253f9f2a33f2fb7343a29bf6c420e4901780bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68d7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb51b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a2646970667358221220348fe01576af1833495f1d5420fd37fbff0d5a09f47cd4d4a8888c518a86e52a64736f6c63430008120033";

type IndexFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndexFund__factory extends ContractFactory {
  constructor(...args: IndexFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IndexFund> {
    return super.deploy(overrides || {}) as Promise<IndexFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IndexFund {
    return super.attach(address) as IndexFund;
  }
  override connect(signer: Signer): IndexFund__factory {
    return super.connect(signer) as IndexFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexFundInterface {
    return new utils.Interface(_abi) as IndexFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexFund {
    return new Contract(address, _abi, signerOrProvider) as IndexFund;
  }
}
