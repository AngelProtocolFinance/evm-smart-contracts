/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IndexFund,
  IndexFundInterface,
} from "../../../../contracts/core/index-fund/IndexFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "AllianceMemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "AllianceMemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "alliance_members",
            type: "address[]",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "member_ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "locked_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquid_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedSplit",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidSplit",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.DonationMessages",
        name: "messages",
        type: "tuple",
      },
    ],
    name: "DonationMessagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "members",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "rotatingFund",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "IndexFundCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IndexFundRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberId",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberId",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "RegistrarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "UpdateActiveFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "round_donations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextFundId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage._State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "UpdateIndexFundState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "members",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "rotatingFund",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "splitToLiquid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryHeight",
        type: "uint256",
      },
    ],
    name: "createIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "senderAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fundId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "split",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.DepositMsg",
        name: "curDetails",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum AngelCoreStruct.AssetInfoBase",
            name: "info",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AngelCoreStruct.AssetBase",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "depositERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initIndexFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryActiveFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "members",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "rotatingFund",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryAllianceMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "alliance_members",
            type: "address[]",
          },
        ],
        internalType: "struct IndexFundStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "queryFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "members",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "rotatingFund",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "queryFundsList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "members",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "rotatingFund",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
    ],
    name: "queryInvolvedFunds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "members",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "rotatingFund",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "round_donations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.StateResponseMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "removeIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "member",
        type: "uint256",
      },
    ],
    name: "removeMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "action",
        type: "string",
      },
    ],
    name: "updateAllianceMemberList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.UpdateConfigMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "add",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "remove",
        type: "uint256[]",
      },
    ],
    name: "updateFundMembers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "updateRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type IndexFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndexFund__factory extends ContractFactory {
  constructor(...args: IndexFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IndexFund> {
    return super.deploy(overrides || {}) as Promise<IndexFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IndexFund {
    return super.attach(address) as IndexFund;
  }
  override connect(signer: Signer): IndexFund__factory {
    return super.connect(signer) as IndexFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexFundInterface {
    return new utils.Interface(_abi) as IndexFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexFund {
    return new Contract(address, _abi, signerOrProvider) as IndexFund;
  }
}
