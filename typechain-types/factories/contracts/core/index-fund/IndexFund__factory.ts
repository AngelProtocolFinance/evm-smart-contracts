/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IndexFund,
  IndexFundInterface,
} from "../../../../contracts/core/index-fund/IndexFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32[]",
            name: "member_ids",
            type: "uint32[]",
          },
          {
            internalType: "uint256[]",
            name: "locked_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquid_donation_amount",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "lockedSplit",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "liquidSplit",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage.DonationMessages",
        name: "messages",
        type: "tuple",
      },
    ],
    name: "DonationMessagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "IndexFundCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "IndexFundRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "memberId",
        type: "uint32",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "RegistrarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "UpdateActiveFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextFundId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IndexFundStorage._State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "UpdateIndexFundState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
      {
        internalType: "bool",
        name: "rotatingFund",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "splitToLiquid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryHeight",
        type: "uint256",
      },
    ],
    name: "createIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "splitToLiquid",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.InstantiateMessage",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initIndexFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryActiveFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "queryFundDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
    ],
    name: "queryInvolvedFunds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32[]",
            name: "members",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "splitToLiquid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiryHeight",
            type: "uint256",
          },
        ],
        internalType: "struct AngelCoreStruct.IndexFund[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeFund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundDonations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRotationBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.StateResponseMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
    ],
    name: "removeIndexFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "member",
        type: "uint32",
      },
    ],
    name: "removeMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fundRotation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundMemberLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingGoal",
            type: "uint256",
          },
        ],
        internalType: "struct IndexFundMessage.UpdateConfigMessage",
        name: "details",
        type: "tuple",
      },
    ],
    name: "updateConfig",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundId",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "members",
        type: "uint32[]",
      },
    ],
    name: "updateFundMembers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRegistrar",
        type: "address",
      },
    ],
    name: "updateRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600160125561372490816100218239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806335fc44d31461224b5780633d6c7ef414611c43578063592b700a14611ba4578063608ce43314611a835780637863891e14611766578063873e9e19146116e8578063880cdc311461162557806393a9d3cd146113e3578063940d203c146112f2578063b4d09085146112a5578063cc2e909914610ff7578063d8e2bba114610ae7578063e68f909d14610a435763ff611e3c146100b657600080fd5b34610a3e576080366003190112610a3e576024356004356001600160a01b0382168203610a3e576064356100e8612542565b6001600160a01b03831615610a01576044359081926002805461098e575b5060015460405163e68f909d60e01b81526103e094918590829060049082906001600160a01b03165afa9485156107815760009561095f575b50508115610823575080600052600a602052600360406000200154156107f1576101d491818592600052600a60205261019061018a604060002042906101854391612c54565b613427565b15612d1f565b600052600a60205260036101cf6101b76040600020936101a0880151600486015490613355565b926101c8604051809481930161278f565b03826123c3565b612dc3565b6040516323b872dd60e01b81523360048201523060248201526044810183905260208160648160006001600160a01b0389165af1908115610781576000916107d2575b501561078d576040019060018060a01b03825116906040519163095ea7b360e01b835260048301526024820152602081604481600060018060a01b0388165af190811561078157600091610752575b501561070d5751600d54906001600160a01b031661028382612446565b9061029160405192836123c3565b828252601f1992836102a282612446565b013660208501376102b281612446565b946102c060405196876123c3565b818652846102cd83612446565b013660208801376102dd82612446565b946102eb60405196876123c3565b8286526102f783612446565b0160005b8181106106fa575050600060105493601154600e5491600f54935b868110610598578a8a61034561033e6001600160a01b036103368e612666565b511693612666565b5191612666565b51906040519160408301908382106001600160401b03831117610582576103cf946000938493604052601d86527f63616c6c20726576657274656420776974686f7574206d6573736167650000006020870152602083519301915af13d1561057a573d906103b2826123e4565b916103c060405193846123c3565b82523d6000602084013e6135ee565b50600d546000600d5580610542575b50600e546000600e5580610510575b50600f546000600f55806104de575b506010546000601055806104ac575b5060115460006011558061047a575b7f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b60405180610470819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a16001601255005b601160005260008051602061366f833981519152908101905b8181106104a0575061041a565b60008155600101610493565b60106000526000805160206136af833981519152908101905b8181106104d2575061040b565b600081556001016104c5565b600f6000526000805160206136cf833981519152908101905b81811061050457506103fc565b600081556001016104f7565b600e60005260008051602061364f833981519152908101905b81811061053657506103ed565b60008155600101610529565b600d600052600760008051602061368f833981519152910160031c8101905b81811061056e57506103de565b60008155600101610561565b6060906135ee565b634e487b7160e01b600052604160045260246000fd5b816105a3828b612673565b5260006105b0828d612673565b528060031c60008051602061368f833981519152015490888110156106e457806000805160206136af8339815191520154848210156106e45760116000528160008051602061366f83398151915201549063ffffffff6040519461061386612372565b60e08560051b161c16845260208401526040830152848110156106e4578060008051602061364f833981519152015491868210156106e45761066f6106df93600f600052836000805160206136cf8339815191520154906124f1565b6040805163665a62f360e01b602080830191909152845163ffffffff166024830152840151604482015292015160648301526001600160a01b038916608483015260a48083019190915281526106c481612357565b6106ce828d612673565b526106d9818c612673565b50612cd1565b610316565b634e487b7160e01b600052603260045260246000fd5b60606020828901810191909152016102fb565b60405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f20617070726f76652066756e64730000000000000000006044820152606490fd5b610774915060203d60201161077a575b61076c81836123c3565b810190612d5a565b38610266565b503d610762565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207472616e736665722066756e647300000000000000006044820152606490fd5b6107eb915060203d60201161077a5761076c81836123c3565b38610217565b60405162461bcd60e51b815260206004820152600a602482015269115b5c1d1e48119d5b9960b21b6044820152606490fd5b6004549091501561091757805b61083b5750506101d4565b6108f8906006906108f3825480600052600a9360209480865260039161086983604060002001541515612ce0565b8360005281875261088561018a42436101856040600020612c54565b60045487600792886108998554809561297d565b938482106108fe575050600060008051602061362f8339815191529394556108c34243835461346a565b809155604051908152a19586935b600052526040600020906101cf6101b7896101a08c0151600486015490613355565b61297d565b80610830565b9150915061090c92506124f1565b9055849586936108d1565b61095a9160065480600052600a60205261093a6003604060002001541515612ce0565b80600052600a60205261019061018a604060002042906101854391612c54565b6101d4565b61097f929550803d10610987575b61097781836123c3565b8101906129e7565b92388061013f565b503d61096d565b60089081544310156109a1575b50610106565b9260008051602061362f83398151915260206109c760069895979498544290439061346a565b80600655604051908152a160006007555b85548043106109f35784546109ec916124f1565b86556109d8565b50925092909350388061099b565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420546f6b656e204164647265737360581b6044820152606490fd5b600080fd5b34610a3e576000366003190112610a3e5760006080604051610a64816123a8565b828152826020820152826040820152826060820152015260a0604051610a89816123a8565b600180831b039081600054169182825280600154169060208301918252600254906040840191825260035492606085019384526080600454950194855260405195865251166020850152516040840152516060830152516080820152f35b34610a3e576020366003190112610a3e57610b0061245d565b610b08612542565b60015460405163e68f909d60e01b81526001600160a01b03916103e0919082908290600490829087165afa90811561078157604092600092610fda575b505001908082511615610f9657610b5f9151163314612919565b60005b63ffffffff8216600052600b6020526040600020805463ffffffff83161015610f4a5781610b8f916126be565b90546003918181841b1c600052600a9081602052610bc5866101c8610bc0876040600020016040519283809261278f565b6135a7565b929092610be0575b5050505050610bdb90612c3f565b610b62565b8382869893959794961b1c6000526020528560406000200193845463ffffffff82161015610f01575b84546000198101908111610c825763ffffffff821690811015610c98576001019063ffffffff8211610c825763ffffffff610c47610c7d9388612da0565b9054908a1b1c16610c76610c5b8389612da0565b819391549060031b9163ffffffff809116831b921b19161790565b9055612c3f565b610c09565b634e487b7160e01b600052601160045260246000fd5b50509492939190938054908115610eeb57610cb7600019830182612da0565b63ffffffff825491881b1b19169055600019820181556040519160208360001983018152019160005260206000206000905b60001983016007830110610e7d5793807f500978d9e5f72b20b6a716a3d6efff3c09afb83b78ac2ad0f933c747827644cd979460409794610d9294610bdb9c9b98549160001981018210610e64575b60001981018210610e49575b60001981018210610e2e575b60001981018210610e12575b60001981018210610df6575b60001981018210610dda575b60001981018210610dbe575b6000190111610db0575b5003906123c3565b8351921b1c815263ffffffff86166020820152a19083808080610bcd565b60e01c81526020018c610d8a565b9092602060019163ffffffff8560c01c16815201930190610d80565b9092602060019163ffffffff8560a01c16815201930190610d74565b9092602060019163ffffffff8560801c16815201930190610d68565b9092602060019163ffffffff8560601c16815201930190610d5c565b9092602060019163ffffffff858e1c16815201930190610d50565b9092602060019163ffffffff85831c16815201930190610d44565b9092602060019163ffffffff8516815201930190610d38565b805463ffffffff8082168652602082811c821690870152604082811c821690870152606082811c821690870152608082811c82169087015260a082811c82169087015260c082811c9091169086015260e090811c908501526101009093019260089190910190600101610ce9565b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152601960248201527f4572726f7220696e2072656d6f76653a20696e7465726e616c000000000000006044820152606490fd5b0390fd5b63ffffffff8316600052600b602052604060002080546000825580610f7a575b6001601255602060405160018152f35b610f8f916000526020600020908101906125d2565b8080610f6a565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e747320636f6e7472616374206e6f7420636f6e666967757265646044820152fd5b610ff09250803d106109875761097781836123c3565b8480610b45565b34610a3e576040366003190112610a3e576004356001600160401b03602435818111610a3e5761102b903690600401612470565b91611034612542565b61104960018060a01b03600054163314612919565b825160035411156112605780600052602091600a8352611073604060002042906101854391612c54565b6112265781600052600a835260036040600020019084519081116105825761109b81836125fc565b83850191600052836000208160031c9160005b8381106111e35750600719811690038061118f575b5050505060005b83518110156111805763ffffffff806110e38387612673565b5116600052600b9081855260406000206040519081878254918281520191600052876000209060005b81811061116c57505050858261112d611141979695946111329403826123c3565b613567565b905015611146575b5050612cd1565b6110ca565b6111508388612673565b511660005284526111658360406000206126d6565b858061113a565b82548452928901926001928301920161110c565b82600160125560405160018152f35b9260009360005b878282106111ad57505050500155838080806110c3565b6111d9849763ffffffff60019495965116908560021b60031b9163ffffffff809116831b921b19161790565b9601929101611196565b6000805b88600882106111fe575050838201556001016110ae565b875191979260019263ffffffff60058b901b81811b19909316911690911b17920196016111e7565b60405162461bcd60e51b8152600481018490526012602482015271125b99195e08119d5b9908115e1c1a5c995960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f46756e64206d656d626572206c696d69742065786365656465640000000000006044820152606490fd5b34610a3e576000366003190112610a3e576112be61339e565b50600654600052600a6020526112ee6112da6040600020612c54565b6040519182916020835260208301906122c0565b0390f35b34610a3e57602080600319360112610a3e5763ffffffff61131161245d565b1680600052600b8083526113296040600020546133d7565b9060005b8360005281855260406000208054821015611385579061135081611380936126be565b90549060031b1c600052600a865261136b6040600020612c54565b6113758286612673565b526106d98185612673565b61132d565b604080518781528551818901819052600092600582901b8301810191888b01918b9085015b8287106113b75785850386f35b9091929382806113d3600193603f198a820301865288516122c0565b96019201960195929190926113aa565b34610a3e57602080600319360112610a3e57600435611400612542565b61141660018060a01b0360005416331415612919565b80600052600a825280600654146115fa575b61143c8160405161112d816101c881612920565b6114f6575b506005546000198101908111610c82577fb1a52d9fa203ad04e22da5c0c85bef32136b120839efb2ea6c7b7991bc80191e91839160055580600052600a825260006006604082208281556114976001820161298a565b6114a36002820161298a565b600381018054848255806114d7575b50508260048201558260058201550155604051908152a1600160125560405160018152f35b6114ef9185526007878620910160031c8101906125d2565b87806114b2565b9190600c928354811015610f01575b83546000198101908111610c8257811015611568576001810190818111610c825761155e61153561156393612687565b905461154084612687565b91909260031b1c9082549060031b91821b91600019901b1916179055565b612cd1565b611505565b5090918054908115610eeb576000199182019161158483612687565b909182549160031b1b1916905581815560405191848382815201916000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c79060005b868282106115e6575050505090806115e09203906123c3565b82611441565b8354855290930192600192830192016115c7565b60008051602061362f8339815191528261161542438561346a565b80600655604051908152a1611428565b34610a3e576020366003190112610a3e5761163e6124db565b611646612542565b6000546001600160a01b03919082811633036116b4577f4ffd725fc4a22075e9ec71c59edf9c38cdeb588a91b24fc5b61388c5be41282b9260209216809161168f8215156124fe565b6001600160a01b03191617600055604051908152a16001601255602060405160018152f35b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b34610a3e576000366003190112610a3e57600060606040516117098161238d565b828152826020820152826040820152015260806005546006546007546008549160606040516117378161238d565b858152602081019283526040810193845201928352604051938452516020840152516040830152516060820152f35b34610a3e576080366003190112610a3e576040516117838161238d565b61178b6124db565b815260208082016024358152604083016044358152606084019160643583526013549260ff8460081c161593848095611a76575b8015611a5f575b15611a035760ff198116600117601355846119f1575b5085516001600160a01b0396908716156119ac576118d694959661186391601e601455600a60155551169251935191519283608060405161181c816123a8565b338152838b8201528760408201528560608201520152336001600160601b0360a01b600054161760005560018060a01b03166001600160601b0360a01b6001541617600155565b826002556003556004557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d2752930162604051806118cd819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b0390a1436124f1565b600160806040516118e6816123a8565b6000815260008682015260006040820152836060820152015260006005556000600655600060075560085560016009557f654adb5cbaa52baea9293330b42459de9dc9b3046fced4e5dc39dcd396571f6b6040518061196c819060a082019160055481526006546020820152600754604082015260085460608201526080600954910152565b0390a161197557005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196013541660135560405160018152a1005b60405162461bcd60e51b815260048101879052601960248201527f696e76616c6964207265676973747261722061646472657373000000000000006044820152606490fd5b61ffff191661010117601355866117dc565b60405162461bcd60e51b815260048101879052602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156117c65750600160ff8216146117c6565b50600160ff8216106117bf565b34610a3e576060366003190112610a3e57604051611aa081612372565b600435815260208101906024358252604081016044358152611ac0612542565b6000546001600160a01b031633036116b45780518015611b985760075411611b6257516004555b51600255516003557fd41a848f4338796659fc6f85bedcd07fe9eee900c21349ea011e3d275293016260405180611b4f819060a082019160018060a01b0380600054168252600154166020820152600254604082015260035460608201526080600454910152565b0390a16001601255602060405160018152f35b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420496e7075747360901b6044820152606490fd5b50506000600455611ae7565b34610a3e576020366003190112610a3e57611bbd6124db565b611bc5612542565b6000546001600160a01b0390811633036116b45781611c2c6020927fe696533f02cb3abcaaf5e85cd893de5abf147a82fd1496ddd3e5219da0a66437941691611c0f8315156124fe565b60018060a01b03166001600160601b0360a01b6001541617600155565b604051908152a16001601255602060405160018152f35b34610a3e5760e0366003190112610a3e576004356001600160401b038111610a3e57611c739036906004016123ff565b6024356001600160401b038111610a3e57611c929036906004016123ff565b6044356001600160401b038111610a3e57611cb1903690600401612470565b606435151560643503610a3e57611cc6612542565b6000546001600160a01b031633036116b4576064608435116122165760095460405192611cf284612357565b818452602084019485526040840152816060840152608435608084015260a43560a084015260c43560c0840152600052600a60205260406000209282518455519283516001600160401b03811161058257611d506001830154612598565b601f81116121e1575b506020601f8211600114612172578192939495600092612167575b50508160011b916000199060031b1c19161760018201555b60408301519283516001600160401b03811161058257611daf6002840154612598565b601f8111612127575b506020601f82116001146120b85781929394956000926120ad575b50508160011b916000199060031b1c19161760028301555b606081015180516001600160401b0381116105825760206003850192611e1183856125fc565b019160005260206000209060005b8160031c811061206a575060071981168103612010575b50505060c08160806006930151600485015560a08101516005850155015191015560005b815160ff821690811015611ea657611e7763ffffffff9184612673565b5116600052600b602052611e926040600020600954906126d6565b60ff809116908114610c8257600101611e5a565b60095480600052600a6020527fb122d9f73c46b97df52cc57ddb3563f7d591316c0547c3d4f980d5904b0e9c3160406000206040518091848252604060208301528054604083015260e060608301526006611f38611f0b6101208501600185016126f9565b611f25603f199182878203016080880152600286016126f9565b908582030160a08601526003840161278f565b91600481015460c0850152600581015460e085015201546101008301520390a1600554158015612006575b611fe5575b606435611fa3575b5060055460018101809111610c825760055560095460018101809111610c82576009556001601255602060405160018152f35b600c5490600160401b82101561058257611fc6826001611fdf9401600c55612687565b90919082549060031b91821b91600019901b1916179055565b80611f70565b8060065560008051602061362f8339815191526020604051838152a1611f68565b5060065415611f63565b60009260005b60071983168303811061203457505060031c015560c0600685611e36565b9093602061206160019263ffffffff885116908560021b60031b9163ffffffff809116831b921b19161790565b95019101612016565b6000805b60088110612083575083820155600101611e1f565b855190959160019160209163ffffffff60058a901b81811b199092169216901b179201950161206e565b015190508580611dd3565b6002840160005260206000209060005b601f198416811061210f575060019394959683601f198116106120f6575b505050811b016002830155611deb565b015160001960f88460031b161c191690558580806120e6565b9091602060018192858b0151815501930191016120c8565b61215790600285016000526020600020601f840160051c8101916020851061215d575b601f0160051c01906125d2565b85611db8565b909150819061214a565b015190508580611d74565b6001830160005260206000209060005b601f19841681106121c9575060019394959683601f198116106121b0575b505050811b016001820155611d8c565b015160001960f88460031b161c191690558580806121a0565b9091602060018192858b015181550193019101612182565b61221090600184016000526020600020601f840160051c8101916020851061215d57601f0160051c01906125d2565b85611d59565b60405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081cdc1b1a5d609a1b6044820152606490fd5b34610a3e576020366003190112610a3e5761226461339e565b50600435600052600a6020526112ee6112da6040600020612c54565b919082519283825260005b8481106122ac575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161228b565b90815181526020916122f46122e28483015160e08686015260e0850190612280565b60408301518482036040860152612280565b92606082015193838103606085015281808651928381520195019160005b82811061233d575050505060c081608082930151608085015260a081015160a0850152015191015290565b835163ffffffff1687529581019592810192600101612312565b60e081019081106001600160401b0382111761058257604052565b606081019081106001600160401b0382111761058257604052565b608081019081106001600160401b0382111761058257604052565b60a081019081106001600160401b0382111761058257604052565b90601f801991011681019081106001600160401b0382111761058257604052565b6001600160401b03811161058257601f01601f191660200190565b81601f82011215610a3e57803590612416826123e4565b9261242460405194856123c3565b82845260208383010111610a3e57816000926020809301838601378301015290565b6001600160401b0381116105825760051b60200190565b6004359063ffffffff82168203610a3e57565b81601f82011215610a3e5780359161248783612446565b9261249560405194856123c3565b808452602092838086019260051b820101928311610a3e578301905b8282106124bf575050505090565b813563ffffffff81168103610a3e5781529083019083016124b1565b600435906001600160a01b0382168203610a3e57565b91908201809211610c8257565b1561250557565b60405162461bcd60e51b8152602060048201526015602482015274696e76616c696420696e707574206164647265737360581b6044820152606490fd5b600260125414612553576002601255565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90600182811c921680156125c8575b60208310146125b257565b634e487b7160e01b600052602260045260246000fd5b91607f16916125a7565b8181106125dd575050565b600081556001016125d2565b81810292918115918404141715610c8257565b90600160401b811161058257815481835580821061261957505050565b612649926000526007602060002091601c82850160031c84019460021b168061264b575b500160031c01906125d2565b565b600019908186019182549160200360031b1c1690553861263d565b8051156106e45760200190565b80518210156106e45760209160051b010190565b600c548110156106e457600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70190600090565b80548210156106e45760005260206000200190600090565b90815491600160401b8310156105825782611fc6916001612649950181556126be565b906000929180549161270a83612598565b91828252600193848116908160001461276c575060011461272c575b50505050565b90919394506000526020928360002092846000945b838610612758575050505001019038808080612726565b805485870183015294019385908201612741565b9294505050602093945060ff191683830152151560051b01019038808080612726565b805480835260208093019160005282600020906000915b8160078401106128b05754918482821061289a575b828210612882575b828210612869575b828210612850575b828210612837575b82821061281e575b828210612805575b50106127f8575b50905090565b60e01c81520180386127f2565b6001919463ffffffff8560c01c168152019301846127eb565b6001919463ffffffff8560a01c168152019301846127e3565b6001919463ffffffff8560801c168152019301846127db565b6001919463ffffffff8560601c168152019301846127d3565b6001919463ffffffff8560401c168152019301846127cb565b6001919463ffffffff85831c168152019301846127c3565b6001919463ffffffff85168152019301846127bb565b926001610100600892865463ffffffff808216835280828b1c168a84015260408183821c169084015260608183821c169084015260808183821c169084015260a08183821c169084015260c09082821c169083015260e090811c908201520194019201916127a6565b156116b457565b600c5490818152602080910191600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7916000905b828210612966575050505090565b835485529384019360019384019390910190612958565b91908203918211610c8257565b6129948154612598565b908161299e575050565b81601f600093116001146129b0575055565b9080839182526129cf601f60208420940160051c8401600185016125d2565b5555565b51906001600160a01b0382168203610a3e57565b8091036103e08112610a3e576040918251926103a092838501908582106001600160401b03831117610582576060918352612a21846129d3565b8652612a2f602085016129d3565b6020870152612a3f8385016129d3565b83870152612a4e8285016129d3565b82870152612a5e608085016129d3565b6080870152612a6f60a085016129d3565b60a0870152612a8060c085016129d3565b60c0870152612a9160e085016129d3565b60e0870152610100612aa48186016129d3565b90870152610120612ab68186016129d3565b90870152610140612ac88186016129d3565b90870152610160612ada8186016129d3565b90870152610180612aec8186016129d3565b9087015261019f190112610a3e57612c389181612c2e6103c0935195612b1187612372565b6101a0968785015181526101c0978886015160208301526101e094858701519083015289015261020096612b468886016129d3565b9089015261022092612b598486016129d3565b9089015261024096612b6c8886016129d3565b9089015261026092838501519089015261028096612b8b8886016129d3565b908901526102a092612b9e8486016129d3565b908901526102c096612bb18886016129d3565b908901526102e092612bc48486016129d3565b9089015261030096612bd78886016129d3565b9089015261032092612bea8486016129d3565b9089015261034096612bfd8886016129d3565b9089015261036092612c108486016129d3565b9089015261038096612c238886016129d3565b9089015283016129d3565b90860152016129d3565b9082015290565b63ffffffff809116908114610c825760010190565b90604051612c6181612357565b60c06006829480548452604051612c7f816101c881600186016126f9565b6020850152604051612c98816101c881600286016126f9565b6040850152604051612cb1816101c8816003860161278f565b606085015260048101546080850152600581015460a08501520154910152565b6000198114610c825760010190565b15612ce757565b60405162461bcd60e51b815260206004820152601060248201526f115b5c1d1e48125b99195e08119d5b9960821b6044820152606490fd5b15612d2657565b60405162461bcd60e51b815260206004820152600c60248201526b115e1c1a5c995908119d5b9960a21b6044820152606490fd5b90816020910312610a3e57518015158103610a3e5790565b90600d548210156106e457600d600052601c8260031c60008051602061368f833981519152019260021b1690565b91909180548310156106e457600052601c60206000208360031c019260021b1690565b9291808451908115801561332e575b505050606482810392818411610c825760005b865181101561302e576000908180600d918254915b828110612fe9575b5015612ecf5750506010548210156106e45785826000805160206136af8339815191520155601180548310156106e457600052828260008051602061366f833981519152015583612e5387876125e9565b04600e80548410156106e457600052612e7e8360008051602061364f833981519152019182546124f1565b9055612e9584612e8e88886125e9565b048661297d565b600f80548410156106e457612eca93612ec3916000526000805160206136cf833981519152019182546124f1565b9055612cd1565b612de5565b90925063ffffffff612ee1838b612673565b5116600160401b918281101561058257610c5b612f05916001968782019055612d72565b9055601080549082821015610582578482018091558110156106e45787906000805160206136af83398151915201556011805482811015610582578481018083558110156106e457859160005260008051602061366f833981519152015584612f6e88886125e9565b04600e80549083821015610582578582018082558210156106e45760005260008051602061364f8339815191520155612fb285612fab89896125e9565b048761297d565b90600f938454918210156105825781018085558110156106e457612eca936000526000805160206136cf8339815191520155612cd1565b8b85612ff483612d72565b9290549061300863ffffffff938492612673565b51169260031b1c16146130235761301e90612cd1565b612dfa565b945050600138612e02565b50505050509050604080519060209081835260c0808401918360a0928382880152600d5480955260e08088019560008051602061368f8339815191526000905b8260078301106132ca5754938282106132b2575b828210613298575b82821061327e575b828210613263575b828210613248575b82821061322e575b828210613216575b5010613207575b505050601f939293199081868603019086015282600e5494858152019360008051602061364f8339815191529060005b8181106131f3575050508085850301606086015282600f549485815201936000805160206136cf8339815191529060005b8181106131df5750505080858503016080860152826010549485815201936000805160206136af8339815191529060005b8181106131cb57505050848403019084015280601154928381520191601160005260008051602061366f833981519152916000905b8282106131b4575050505090807f60a7668728d323bbf6313b5698e94df25d3276093fcfb61da0e8ae6d742ef9a1920390a1565b835485529384019360019384019390910190613180565b82548752958501956001928301920161314b565b82548752958501956001928301920161311a565b8254875295850195600192830192016130e9565b1c8452909201918338806130b9565b84901c63ffffffff16885296840196600101386130b2565b90978560019163ffffffff878b1c168152019801906130aa565b90978560019163ffffffff8760801c168152019801906130a2565b90978560019163ffffffff8760601c1681520198019061309a565b90978560019163ffffffff878a1c16815201980190613092565b90978560019163ffffffff87831c1681520198019061308a565b90978560019163ffffffff8716815201980190613082565b805463ffffffff8082168b52818c1c81168c8c015281891c8116898c0152606082811c8216908c0152608082811c8216908c0152818a1c81168a8c015281871c16868b0152841c848a0152610100909801978995506008919091019060010161306e565b9091925061333f5704388080612dd2565b634e487b7160e01b600052601260045260246000fd5b60009290918061339757508061336f575060409150015190565b9060208101518211908161338c575b50613387575090565b905090565b90505181103861337e565b9250505090565b604051906133ab82612357565b600060c08382815260606020820152606060408201526060808201528260808201528260a08201520152565b906133e182612446565b6133ee60405191826123c3565b82815280926133ff601f1991612446565b019060005b82811061341057505050565b60209061341b61339e565b82828501015201613404565b60c081015180151593928461345f575b5050821561344457505090565b60a001518015159250908261345857505090565b1015905090565b101592503880613437565b9091600c5490613479826133d7565b9360005b8381106134e2575050505061349c9060405161112d816101c881612920565b1580156134cc575b156134b857506134b390612666565b515190565b60018101809111610c82576134b391612673565b5081516000198101908111610c825781146134a4565b806134ef61352592612687565b9054600391821b1c600052600a602090808252604091613516888861018586600020612c54565b1561352a575b50505050612cd1565b61347d565b6135489361353786612687565b9054911b1c60005252600020612c54565b6135528289612673565b5261355d8188612673565b503880808061351c565b9060005b825181101561359c578161357f8285612673565b51146135935761358e90612cd1565b61356b565b91505090600190565b505050600090600090565b9060005b825163ffffffff90818316908110156135e1576135c9829186612673565b511690831614613593576135dc90612c3f565b6135ab565b5050505050600090600090565b909190156135fa575090565b81511561360a5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610f4690602483019061228056fe35cd92409e9df67a917c3d763d3d253f9f2a33f2fb7343a29bf6c420e4901780bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68d7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb51b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a2646970667358221220efc0da1635ec0e99afca3f9f39dec6fec57d0edc2774522e08d5a39b657f200764736f6c63430008120033";

type IndexFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IndexFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IndexFund__factory extends ContractFactory {
  constructor(...args: IndexFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IndexFund> {
    return super.deploy(overrides || {}) as Promise<IndexFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IndexFund {
    return super.attach(address) as IndexFund;
  }
  override connect(signer: Signer): IndexFund__factory {
    return super.connect(signer) as IndexFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexFundInterface {
    return new utils.Interface(_abi) as IndexFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexFund {
    return new Contract(address, _abi, signerOrProvider) as IndexFund;
  }
}
