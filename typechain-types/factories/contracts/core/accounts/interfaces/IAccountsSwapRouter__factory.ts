/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import type {Provider} from "@ethersproject/providers";
import type {
  IAccountsSwapRouter,
  IAccountsSwapRouterInterface,
} from "../../../../../contracts/core/accounts/interfaces/IAccountsSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
    ],
    name: "swapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAccountsSwapRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IAccountsSwapRouterInterface {
    return new utils.Interface(_abi) as IAccountsSwapRouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IAccountsSwapRouter {
    return new Contract(address, _abi, signerOrProvider) as IAccountsSwapRouter;
  }
}
