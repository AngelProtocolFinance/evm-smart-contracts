/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import type {Provider, TransactionRequest} from "@ethersproject/providers";
import type {PromiseOrValue} from "../../../../../common";
import type {
  AccountsQueryEndowments,
  AccountsQueryEndowmentsInterface,
} from "../../../../../contracts/core/accounts/facets/AccountsQueryEndowments";

const _abi = [
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextAccountId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGeneralCategoryId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "subDao",
            type: "address",
          },
          {
            internalType: "address",
            name: "gateway",
            type: "address",
          },
          {
            internalType: "address",
            name: "gasReceiver",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percentage",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "earlyLockedWithdrawFee",
            type: "tuple",
          },
        ],
        internalType: "struct AccountMessages.ConfigResponse",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "queryEndowmentDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "sdgs",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "general",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.Categories",
            name: "categories",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "tier",
            type: "uint256",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endowType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maturityTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedPercentage",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidPercentage",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AccountStrategies",
            name: "strategies",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedAmount",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidAmount",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.OneOffVaults",
            name: "oneoffVaults",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidProfits",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "lockedRebalanceToLiquid",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "interestDistribution",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint32",
                name: "principleDistribution",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "basis",
                type: "uint32",
              },
            ],
            internalType: "struct LocalRegistrarLib.RebalanceParams",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "kycDonorsOnly",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "pendingRedemptions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalLink",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "multisig",
            type: "address",
          },
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "donationMatchActive",
            type: "bool",
          },
          {
            internalType: "address",
            name: "donationMatchContract",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlistedBeneficiaries",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "allowlistedContributors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "maturityAllowlist",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percentage",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "earlyLockedWithdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percentage",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "withdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percentage",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "depositFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "percentage",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "balanceFee",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "acceptedTokens",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "lockedInvestmentManagement",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "liquidInvestmentManagement",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedBeneficiaries",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedContributors",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityAllowlist",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityTime",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "earlyLockedWithdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "withdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "depositFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "balanceFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "name",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "image",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "logo",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "categories",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "splitToLiquid",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "locked",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "ignoreUserSplits",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.SettingsController",
            name: "settingsController",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "parent",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "ignoreUserSplits",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "referralId",
            type: "uint256",
          },
        ],
        internalType: "struct AccountStorage.Endowment",
        name: "endowment",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
    ],
    name: "queryState",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "closingEndowment",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "endowId",
                    type: "uint32",
                  },
                  {
                    internalType: "uint256",
                    name: "fundId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                ],
                internalType: "struct AngelCoreStruct.BeneficiaryData",
                name: "data",
                type: "tuple",
              },
              {
                internalType: "enum AngelCoreStruct.BeneficiaryEnum",
                name: "enumData",
                type: "uint8",
              },
            ],
            internalType: "struct AngelCoreStruct.Beneficiary",
            name: "closingBeneficiary",
            type: "tuple",
          },
        ],
        internalType: "struct AccountMessages.StateResponse",
        name: "stateResponse",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "accountType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "queryTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576116c3908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816302d008f214610fa9575080639969dd1e14610ed9578063c99c8f22146104295763e68f909d1461004b57600080fd5b346104245760003660031901126104245760405161006881611351565b6000815260606020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e0820152610100604051916100ad836112ad565b6000808452602084015201527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d45547ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d47547ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d48547ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d49547ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4a547ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4b54604051956001600160a01b039182169592821694938216939291166101a987611351565b865260405160007ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d46548060011c90600181161561041a575b60208210600182161461040457818452600181169081156103e0575060011461035d575b50906102198163ffffffff9493038261138a565b602088015260018060a01b038116604088015260a01c166060860152608085015260a084015260c083015260e0820152604051610255816112ad565b60018060a01b037ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4c541681527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4d54602082015261010082015260405180916020825260018060a01b0381511660208301526103596101006102e7602084015161014060408701526101608601906110e3565b60408401516001600160a01b0390811660608781019190915285015160808088019190915285015160a087810191909152850151811660c080880191909152850151811660e0808801919091528501518116838701529190930151805190911661012085015260200151610140840152565b0390f35b929190507ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d466000527febb685a78b10aaac3bab71ad259c60cb6817d2de30fb2196f0835ca255c2a897926000905b8082106103c45750919250908101602001610219610205565b91929360018160209254838588010152019101909392916103ab565b60ff191660208086019190915291151560051b840190910191506102199050610205565b634e487b7160e01b600052602260045260246000fd5b90607f16906101e1565b600080fd5b346104245760203660031901126104245763ffffffff6104476110d0565b60006103c0604051610458816112fb565b8281526060602082015260405161046e816112ad565b60608152606060208201526040820152826060820152826080820152606060a0820152606060c08201528260e08201526104a66113ac565b6101008201526104b46113ac565b6101208201526040516104c681611318565b8381528360208201528360408201528360608201528360808201528360a08201526101408201528261016082015282610180820152826101a0820152826101c0820152826101e08201528261020082015282610220820152826102408201526060610260820152606061028082015260606102a0820152604051610549816112ad565b8381528360208201526102c0820152604051610564816112ad565b8381528360208201526102e082015260405161057f816112ad565b83815283602082015261030082015260405161059a816112ad565b8381528360208201526103208201526040516105b581611334565b6105bd6113d0565b81526105c76113d0565b60208201526105d46113d0565b60408201526105e16113d0565b60608201526105ee6113d0565b60808201526105fb6113d0565b60a08201526106086113d0565b60c08201526106156113d0565b60e08201526106226113d0565b6101008201526106306113d0565b61012082015261063e6113d0565b61014082015261064c6113d0565b61016082015261065a6113d0565b6101808201526106686113d0565b6101a08201526106766113d0565b6101c08201526106846113d0565b6101e08201526106926113d0565b61020082015261034082015282610360820152826103808201526106b46113fe565b6103a08201520152166000527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d426020526040602081600020605b8351916106fa836112fb565b80546001600160a01b031683526107136001820161141d565b848401528451610722816112ad565b61072e600283016114ec565b815261073c600383016114ec565b85820152858401526004810154606084015260ff60058201541661075f81611157565b60808401526107706006820161141d565b60a08401526107816007820161141d565b60c0840152600881015460e084015261079c6009820161159b565b6101008401526107ae600d820161159b565b61012084015284516107bf81611318565b63ffffffff601183015460ff811615158352818160081c1687840152818160281c168884015260ff8160481c1615156060840152818160501c16608084015260701c1660a082015261014084015260ff6012820154161515610160840152601381015461018084015260148101546101a084015260018060a01b036015820154166101c084015260018060a01b036016820154166101e084015260ff601782015460018060a01b03811661020086015260a01c16151561022084015260018060a01b0360188201541661024084015261089a601982016115e9565b6102608401526108ac601a82016115e9565b6102808401526108be601b82016115e9565b6102a08401526108d0601c8201611641565b6102c08401526108e2601e8201611641565b6102e08401526108f3848201611641565b61030084015261090560228201611641565b610320840152845161091681611334565b61092260248301611668565b815261093060278301611668565b85820152610940602a8301611668565b86820152610950602d8301611668565b606082015261096160308301611668565b608082015261097260338301611668565b60a082015261098360368301611668565b60c082015261099460398301611668565b60e08201526109a5603c8301611668565b6101008201526109b7603f8301611668565b6101208201526109c960428301611668565b6101408201526109db60458301611668565b6101608201526109ed60488301611668565b6101808201526109ff604b8301611668565b6101a0820152610a11604e8301611668565b6101c0820152610a2360518301611668565b6101e0820152610a3560548301611668565b61020082015261034084015260ff605782015463ffffffff8116610360860152851c1615156103808401528451610a6b816112df565b60588201548152605982015485820152605a820154868201526103a084015201546103c08201526103c0610cb9610ca1610c89610b99610b81610b5e610b48610b15610adc8a610b808e519e8f9e8f9381855260018060a01b03815116828601520151920152610ba08d01906110e3565b60408b0151908c6060601f19828403019101526020610b048351604084526040840190611123565b920151906020818403910152611123565b60608a015160808c015260808a0151610b2d81611157565b60a08c015260a08a0151601f198c83030160c08d01526110e3565b60c08901518a8203601f190160e08c01526110e3565b60e08801516101008a0152610100880151601f198a8303016101208b01526111bd565b610120870151888203601f19016101408a01526111bd565b63ffffffff60a0610140880151805115156101608b0152826020820151166101808b0152826040820151166101a08b0152606081015115156101c08b0152826080820151166101e08b015201511661020088015261016086015115156102208801526101808601516102408801526101a086015161026088015260018060a01b036101c08701511661028088015260018060a01b036101e0870151166102a088015260018060a01b03610200870151166102c088015261022086015115156102e088015260018060a01b0361024087015116610300880152610260860151601f1988830301610320890152611214565b610280850151868203601f1901610340880152611214565b6102a0840151858203601f1901610360870152611214565b6102c083015180516001600160a01b0316610380860152602001516103a0850152916102e081015180516001600160a01b031685840190815260209182015191015261030081015180516001600160a01b03166104008601526020015161042085015261032081015180516001600160a01b031661044086015260200151610460850152610e8a610200610340830151610d5861048088018251611251565b610d6b60208201516104e0890190611251565b610d7e6040820151610540890190611251565b610d9160608201516105a0890190611251565b610da46080820151610600890190611251565b610db760a0820151610660890190611251565b610dca60c08201516106c0890190611251565b610ddd60e0820151610720890190611251565b610df1610100820151610780890190611251565b610e056101208201516107e0890190611251565b610e19610140820151610840890190611251565b610e2d6101608201516108a0890190611251565b610e41610180820151610900890190611251565b610e556101a0820151610960890190611251565b610e696101c08201516109c0890190611251565b610e7d6101e0820151610a20890190611251565b0151610a80860190611251565b63ffffffff61036082015116610ae08501526103808101511515610b0085015260406103a08201518051610b208701526020810151610b408701520151610b608501520151610b808301520390f35b3461042457606036600319011261042457610ef26110d0565b602435906002821015610424576044356001600160a01b0381169290839003610424578215610f6c57610f2481611157565b610f4c57610f33600191611278565b019060005260205260206040600020545b604051908152f35b610f57600391611278565b01906000526020526020604060002054610f44565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b346104245760208060031936011261042457610fc36110d0565b91610fcd816112ad565b600081528160405191610fdf836112ad565b610fe76113fe565b8352600082840152015261100a60ff600461100185611278565b01541692611278565b60405192611017846112ad565b15158352604051611027816112ad565b60405190611034826112df565b60ff600863ffffffff9485600582015416855260068101548786015260018060a01b039485600783015416604082015284520154169060048210156110ba576040918582015284860190815281519551151586525192835190815116858701528481015182870152015116606084015201519060048210156110ba5760a0916080820152f35b634e487b7160e01b600052602160045260246000fd5b6004359063ffffffff8216820361042457565b919082519283825260005b84811061110f575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110ee565b90815180825260208080930193019160005b828110611143575050505090565b835185529381019392810192600101611135565b600211156110ba57565b908082519081815260208091019281808460051b8301019501936000915b84831061118f5750505050505090565b90919293949584806111ad600193601f198682030187528a516110e3565b980193019301919493929061117f565b6112119160606112006111ee6111dc8551608086526080860190611161565b60208601518582036020870152611123565b60408501518482036040860152611161565b920151906060818403910152611123565b90565b90815180825260208080930193019160005b828110611234575050505090565b83516001600160a01b031685529381019392810192600101611226565b80511515825260209081015180516001600160a01b0316828401520151604090910152565b565b63ffffffff166000527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d41602052604060002090565b6040810190811067ffffffffffffffff8211176112c957604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176112c957604052565b6103e0810190811067ffffffffffffffff8211176112c957604052565b60c0810190811067ffffffffffffffff8211176112c957604052565b610220810190811067ffffffffffffffff8211176112c957604052565b610120810190811067ffffffffffffffff8211176112c957604052565b6080810190811067ffffffffffffffff8211176112c957604052565b90601f8019910116810190811067ffffffffffffffff8211176112c957604052565b604051906113b98261136e565b606080838181528160208201528160408201520152565b604051906113dd826112ad565b600082526040516020836113f0836112ad565b600083526000828401520152565b6040519061140b826112df565b60006040838281528260208201520152565b90604051906000835490600182811c908084169687156114e2575b60209485841089146114ce57879884899798995290816000146114ac575060011461146d575b5050506112769250038361138a565b600090815285812095935091905b818310611494575050611276935082010138808061145e565b8554888401850152948501948794509183019161147b565b9250505061127694925060ff191682840152151560051b82010138808061145e565b634e487b7160e01b85526022600452602485fd5b91607f1691611438565b9060405191828154918282526020928383019160005283600020936000905b828210611521575050506112769250038361138a565b85548452600195860195889550938101939091019061150b565b90815467ffffffffffffffff81116112c957604051926020611562818460051b018661138a565b82855260009182528082208186015b84841061157f575050505050565b600183819261158d8561141d565b815201920193019290611571565b906040516115a88161136e565b60606115e4600383956115ba8161153b565b85526115c8600182016114ec565b60208601526115d96002820161153b565b6040860152016114ec565b910152565b9060405191828154918282526020928383019160005283600020936000905b82821061161e575050506112769250038361138a565b85546001600160a01b031684526001958601958895509381019390910190611608565b9060405161164e816112ad565b82546001600160a01b031681526001909201546020830152565b90604051611675816112ad565b60206115e46001839560ff815416151585520161164156fea2646970667358221220ce5aba03d007fe1f93d3ce5f5b2b140de0a31bc313461e51544cde960903ec6c64736f6c63430008120033";

type AccountsQueryEndowmentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsQueryEndowmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountsQueryEndowments__factory extends ContractFactory {
  constructor(...args: AccountsQueryEndowmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<AccountsQueryEndowments> {
    return super.deploy(overrides || {}) as Promise<AccountsQueryEndowments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountsQueryEndowments {
    return super.attach(address) as AccountsQueryEndowments;
  }
  override connect(signer: Signer): AccountsQueryEndowments__factory {
    return super.connect(signer) as AccountsQueryEndowments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsQueryEndowmentsInterface {
    return new utils.Interface(_abi) as AccountsQueryEndowmentsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AccountsQueryEndowments {
    return new Contract(address, _abi, signerOrProvider) as AccountsQueryEndowments;
  }
}
