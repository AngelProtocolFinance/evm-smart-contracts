/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AccountsStrategiesUpdateEndowments,
  AccountsStrategiesUpdateEndowmentsInterface,
} from "../../../../../contracts/core/accounts/facets/AccountsStrategiesUpdateEndowments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "expires",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "allowanceAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "configured",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.AllowanceData",
        name: "allowance",
        type: "tuple",
      },
    ],
    name: "AllowanceStateUpdatedTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.CurveTypeEnum",
                        name: "curve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.CurveTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.CurveType",
                    name: "bondingCurveCurveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingCurveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "curCreatedaomessage",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
    ],
    name: "DaoContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "curId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
    ],
    name: "DonationDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donationMatchContract",
        type: "address",
      },
    ],
    name: "DonationMatchSetup",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "sdgs",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "general",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.Categories",
            name: "categories",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "tier",
            type: "uint256",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "depositApproved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "withdrawApproved",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maturityTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedPercentage",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidPercentage",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AccountStrategies",
            name: "strategies",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedAmount",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidAmount",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.OneOffVaults",
            name: "oneoffVaults",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "pendingRedemptions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "copycatStrategy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalLink",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "donationMatchActive",
            type: "bool",
          },
          {
            internalType: "address",
            name: "donationMatchContract",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlistedBeneficiaries",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "allowlistedContributors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "maturityWhitelist",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "earningsFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "withdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "depositFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "balanceFee",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "endowmentController",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "strategies",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedBeneficiaries",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedContributors",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityWhitelist",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityTime",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "profile",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "earningsFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "withdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "depositFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "balanceFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "name",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "image",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "logo",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "categories",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "splitToLiquid",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "ignoreUserSplits",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.SettingsController",
            name: "settingsController",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "parent",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ignoreUserSplits",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Endowment",
        name: "endowment",
        type: "tuple",
      },
    ],
    name: "EndowmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "setting",
        type: "string",
      },
    ],
    name: "EndowmentSettingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "RemoveAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "curId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.AccountType",
        name: "curAccountType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "curTokenin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "curTokenout",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curAmountout",
        type: "uint256",
      },
    ],
    name: "SwapToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextAccountId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGeneralCategoryId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "UpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "sdgs",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "general",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.Categories",
            name: "categories",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "tier",
            type: "uint256",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "depositApproved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "withdrawApproved",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maturityTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedPercentage",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid_vault",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidPercentage",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.AccountStrategies",
            name: "strategies",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string[]",
                name: "locked",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "lockedAmount",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "liquid",
                type: "string[]",
              },
              {
                internalType: "uint256[]",
                name: "liquidAmount",
                type: "uint256[]",
              },
            ],
            internalType: "struct AngelCoreStruct.OneOffVaults",
            name: "oneoffVaults",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "rebalanceLiquidInvestedProfits",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "lockedInterestsToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "interest_distribution",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lockedPrincipleToLiquid",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "principle_distribution",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.RebalanceDetails",
            name: "rebalance",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "pendingRedemptions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "copycatStrategy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalLink",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "donationMatchActive",
            type: "bool",
          },
          {
            internalType: "address",
            name: "donationMatchContract",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "allowlistedBeneficiaries",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "allowlistedContributors",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "maturityWhitelist",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "earningsFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "withdrawFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "depositFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "payoutAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feePercentage",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct AngelCoreStruct.EndowmentFee",
            name: "balanceFee",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "endowmentController",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "strategies",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedBeneficiaries",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "allowlistedContributors",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityWhitelist",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "maturityTime",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "profile",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "earningsFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "withdrawFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "depositFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "balanceFee",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "name",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "image",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "logo",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "categories",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "splitToLiquid",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "modifiableAfterInit",
                    type: "bool",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "Addr",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "expires",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.Delegate",
                    name: "delegate",
                    type: "tuple",
                  },
                ],
                internalType: "struct AngelCoreStruct.SettingsPermission",
                name: "ignoreUserSplits",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.SettingsController",
            name: "settingsController",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "parent",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ignoreUserSplits",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defaultSplit",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.SplitDetails",
            name: "splitToLiquid",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.Endowment",
        name: "endowment",
        type: "tuple",
      },
    ],
    name: "UpdateEndowment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "locked",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquid",
                type: "uint256",
              },
            ],
            internalType: "struct AngelCoreStruct.DonationsReceived",
            name: "donationsReceived",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "coinNativeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256[]",
                    name: "Cw20CoinVerified_amount",
                    type: "uint256[]",
                  },
                  {
                    internalType: "address[]",
                    name: "Cw20CoinVerified_addr",
                    type: "address[]",
                  },
                ],
                internalType: "struct AngelCoreStruct.GenericBalance",
                name: "locked",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "coinNativeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256[]",
                    name: "Cw20CoinVerified_amount",
                    type: "uint256[]",
                  },
                  {
                    internalType: "address[]",
                    name: "Cw20CoinVerified_addr",
                    type: "address[]",
                  },
                ],
                internalType: "struct AngelCoreStruct.GenericBalance",
                name: "liquid",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.BalanceInfo",
            name: "balances",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "closingEndowment",
            type: "bool",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "id",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                ],
                internalType: "struct AngelCoreStruct.BeneficiaryData",
                name: "data",
                type: "tuple",
              },
              {
                internalType: "enum AngelCoreStruct.BeneficiaryEnum",
                name: "enumData",
                type: "uint8",
              },
            ],
            internalType: "struct AngelCoreStruct.Beneficiary",
            name: "closingBeneficiary",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct AccountStorage.EndowmentState",
        name: "state",
        type: "tuple",
      },
    ],
    name: "UpdateEndowmentState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curId",
        type: "uint256",
      },
      {
        internalType: "enum AngelCoreStruct.AccountType",
        name: "curAccountType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "vault",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
        ],
        internalType: "struct AccountMessages.Strategy[]",
        name: "curStrategies",
        type: "tuple[]",
      },
    ],
    name: "updateStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611803908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c631f6dcf861461002757600080fd5b346102d85760603660031901126102d857600360243510156102d8576001600160401b03604435116102d8573660236044350112156102d857604435600401356100708161147c565b9061007e604051928361145b565b80825260208201903660248260051b6044350101116102d857602460443501915b60248260051b6044350101831061138057837ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4b5460ff8160a01c16158015611377575b15611332573330036112fd575b507ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d465460043560009081526000805160206117ae83398151915260205260409020546001600160a01b0391821692911633036112c9576004356000527ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4160205260ff6008604060002001541661128f576004356000526000805160206117ae833981519152602052601660406000200154611253576000915b81518060001981011161024b57600019018310156103065760018301831161024b57600183015b82518110156102f15761021160206101e786866114ae565b51516101f384876114ae565b51516040516360353db960e01b81529384928392906004840161152d565b038173__$cdb3a974a6603f5f21ad73b7f4e0c6fc0b$__5af49081156102e5576000916102a6575b506102615760018101809111156101cf575b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601b60248201527f5374726174656779436f6d706f6e656e74734e6f74556e6971756500000000006044820152606490fd5b90506020813d6020116102dd575b816102c16020938361145b565b810103126102d8576102d2906114d8565b85610239565b600080fd5b3d91506102b4565b6040513d6000823e3d90fd5b509160018101811161024b57600101916101a8565b906004356000526000805160206117ae833981519152602052600060ff60056040832001541660e46040518095819363144e410960e21b835285600484015261034e81611569565b602483015261035e602435611569565b602435604483015260036064830152600160848301528460a48301528460c48301525afa9182156102e557600092610fc8575b50600081516103b86103a28261147c565b916103b0604051938461145b565b80835261147c565b60005b601f1982018110610fb75750508251926103d48461147c565b936103e2604051958661145b565b8085526103f1601f199161147c565b013660208601376000915b815183101561055a5760009560005b81518110156105085761042f602061042387876114ae565b51516101f384866114ae565b038173__$cdb3a974a6603f5f21ad73b7f4e0c6fc0b$__5af49081156102e5576000916104ce575b5061046f575b60018101811161024b5760010161040b565b6001975094602061048086866114ae565b510151810180911161024b579461049785856114ae565b51516104a386856114ae565b526104ae85846114ae565b5060206104bb86866114ae565b5101516104c886896114ae565b5261045d565b90506020813d602011610500575b816104e96020938361145b565b810103126102d8576104fa906114d8565b89610457565b3d91506104dc565b5095929092156105255760018101811161024b57600101916103fc565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964496e7075747360981b6044820152606490fd5b849060648511610f725761056f602435611569565b602435610cd6576004356000526000805160206117ae833981519152602052600a60406000200190805190600160401b8211610b2a578254828455808310610c60575b50602001916000526020600020916000905b828210610b4057505050506004356000526000805160206117ae833981519152602052600b604060002001908051906001600160401b038211610b2a57600160401b8211610b2a576020908354838555808410610b0d575b50019160005260206000209160005b828110610af957505050505b6004356000526000805160206117ae833981519152602052604060002060405160043581526040602082015260018060a01b038254166040820152610c00606082015261068b610c408201600184016115c4565b916107106106fc6106c9603f199586868203016080870152604081526106b7604082016002870161165a565b9060208183039101526003850161165a565b600484015460a086015260ff6005850154166106e481611569565b60c0860152858582030160e0860152600684016115c4565b8484820301610100850152600783016115c4565b9060088101549160ff83166004811015610ae3577f33a08eee3d4b2bcb47904c6dd0ef9f81d3fdf828011201fc44a2ed88b4dbd0e49561087e61086a6107b061079c60629660ff8b9a610892986101208d0152818160081c1615156101408d015260101c1615156101608b015260098901546101808b0152858a8203016101a08b0152600a89016116f0565b84898203016101c08a0152600e88016116f0565b601287015460ff81811615156101e08b015260089190911c811615156102008a015260138801546102208a01526014880154811615156102408a015260158801546102608a015260168801546102808a015260178801546102a08a015260188801546102c08a015260198801546001600160a01b039081166102e08b0152601a8901548082166103008c015260a01c90911615156103208a0152601b880154166103408901528781038401610360890152601c870161173f565b8287820301610380880152601d860161173f565b90858203016103a0860152601e840161173f565b601f8301546001600160a01b03166103c085015260208301546103e0850152602183015460ff1615156104008501529160228101546001600160a01b03166104208501526023810154610440850152602481015460ff16151561046085015260258101546001600160a01b031661048085015260268101546104a0850152602781015460ff1615156104c085015260288101546001600160a01b03166104e08501526029810154610500850152602a81015460ff1615156105208501526109606105408501602b8301611785565b6109716105a08501602e8301611785565b610982610600850160318301611785565b610993610660850160348301611785565b6109a46106c0850160378301611785565b6109b56107208501603a8301611785565b6109c66107808501603d8301611785565b6109d76107e0850160408301611785565b6109e8610840850160438301611785565b6109f96108a0850160468301611785565b610a0a610900850160498301611785565b610a1b6109608501604c8301611785565b610a2c6109c08501604f8301611785565b610a3d610a20850160528301611785565b610a4e610a80850160558301611785565b610a5f610ae0850160588301611785565b610a70610b408501605b8301611785565b605e810154610ba085015260ff605f820154161515610bc08501526060810154610be08501526061810154610c008501520154610c208301520390a1333003610ab557005b7ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4b805460ff60a01b19169055005b634e487b7160e01b600052602160045260246000fd5b60019060208351930192818601550161062b565b610b249085600052848460002091820191016115ad565b8461061c565b634e487b7160e01b600052604160045260246000fd5b80518051906001600160401b038211610b2a57610b5d8654611573565b601f8111610c23575b50602090601f8311600114610bb3579282600194936020938695600092610ba8575b5050600019600383901b1c191690841b1787555b019401910190926105c4565b015190508a80610b88565b908660005260206000209160005b601f1985168110610c0b575083602093600196938796938794601f19811610610bf2575b505050811b018755610b9c565b015160001960f88460031b161c191690558a8080610be5565b91926020600181928685015181550194019201610bc1565b610c5090876000526020600020601f850160051c81019160208610610c56575b601f0160051c01906115ad565b87610b66565b9091508190610c43565b836000526020600020908382015b8183018110610c7e5750506105b2565b80610c8b60019254611573565b80610c98575b5001610c6e565b601f908181118414610cb1575050600081555b88610c91565b610ccd60009284845260208420920160051c82018583016115ad565b81835555610cab565b610ce1602435611569565b600160243514610cf3575b5050610637565b6004356000526000805160206117ae833981519152602052600c60406000200190805190600160401b8211610b2a578254828455808310610efc575b50602001916000526020600020916000905b828210610de757505050506004356000526000805160206117ae833981519152602052600d604060002001908051906001600160401b038211610b2a57600160401b8211610b2a576020908354838555808410610dca575b50019160005260206000209160005b828110610db6575050610cec565b600190602083519301928186015501610da8565b610de19085600052848460002091820191016115ad565b84610d99565b80518051906001600160401b038211610b2a57610e048654611573565b601f8111610eca575b50602090601f8311600114610e5a579282600194936020938695600092610e4f575b5050600019600383901b1c191690841b1787555b01940191019092610d41565b015190508a80610e2f565b908660005260206000209160005b601f1985168110610eb2575083602093600196938796938794601f19811610610e99575b505050811b018755610e43565b015160001960f88460031b161c191690558a8080610e8c565b91926020600181928685015181550194019201610e68565b610ef690876000526020600020601f850160051c81019160208610610c5657601f0160051c01906115ad565b87610e0d565b836000526020600020908382015b8183018110610f1a575050610d2f565b80610f2760019254611573565b80610f34575b5001610f0a565b601f908181118414610f4d575050600081555b88610f2d565b610f6960009284845260208420920160051c82018583016115ad565b81835555610f47565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69645374726174656779416c6c6f636174696f6e000000000000006044820152606490fd5b8060606020809386010152016103bb565b9091503d806000833e610fdb818361145b565b60208282810103126102d85781516001600160401b0381116102d857818301601f8285010112156102d85780830151906110148261147c565b93611022604051958661145b565b828552602085019184820160208560051b8385010101116102d857602081830101925b60208560051b83850101018410611063575050505050509082610391565b83516001600160401b0381116102d857610100848401820188860103601f1901126102d85760405190816101008101106001600160401b0361010084011117610b2a5761010082016040526020818587010101516001600160401b0381116102d857818587010101603f9089870182820112156102d8576020810151906110e982611493565b916110f7604051938461145b565b8083528b8901604082840101116102d8576111199160406020850191016114e5565b835285850182016040810151602085015261113690606001611555565b6040840152608061114c8184888a010101611555565b606085015261116160a084888a0101016114d8565b9084015260c082868801010151906001600160401b0382116102d857898701908284888a0101010112156102d8576020818387890101010151906111a48261147c565b916111b2604051938461145b565b808352602083018b890160408a85888c8760051b930101010101116102d857604083868a8c01010101905b60408a85888c8760051b930101010101821061123a575050505060a083015260e0818587010101519060038210156102d8576101009160c084015284860101015160048110156102d85760e0820152815260209384019301611045565b815160038110156102d8578152602091820191016111dd565b60405162461bcd60e51b8152602060048201526014602482015273526564656d7074696f6e496e50726f677265737360601b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271155c19185d195cd0599d195c90db1bdcd95960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b60ff60a01b1916600160a01b177ff42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d4b55816100ef565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503330146100e2565b8235906001600160401b0382116102d85760406044358301360360231901126102d8576040518060408101106001600160401b03604083011117610b2a5760408101604052602483604435010135916001600160401b0383116102d857366043848660443501010112156102d85760248385604435010101359161140383611493565b93611411604051958661145b565b838552366044858389833501010101116102d857856020956000878781986044809760249d823501010183860137830101528352813501013583820152815201930192905061009f565b90601f801991011681019081106001600160401b03821117610b2a57604052565b6001600160401b038111610b2a5760051b60200190565b6001600160401b038111610b2a57601f01601f191660200190565b80518210156114c25760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b519081151582036102d857565b60005b8381106114f85750506000910152565b81810151838201526020016114e8565b90602091611521815180928185528580860191016114e5565b601f01601f1916010190565b909161154461155293604084526040840190611508565b916020818403910152611508565b90565b51906001600160a01b03821682036102d857565b60031115610ae357565b90600182811c921680156115a3575b602083101461158d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611582565b8181106115b8575050565b600081556001016115ad565b90600092918054916115d583611573565b91828252600193848116908160001461163757506001146115f7575b50505050565b90919394506000526020928360002092846000945b8386106116235750505050010190388080806115f1565b80548587018301529401938590820161160c565b9294505050602093945060ff191683830152151560051b010190388080806115f1565b90815480825260208092019260005281600020916000905b828210611680575050505090565b835485529384019360019384019390910190611672565b908154808252602080920191828260051b84019460005281600020936000915b8483106116c75750505050505090565b9091929394958460016116e0838583950387528a6115c4565b98019301930191949392906116b7565b906003611552926080835261173061171f61170e6080860184611697565b85810360208701526001840161165a565b848103604086015260028301611697565b9260608185039101520161165a565b90815480825260208092019260005281600020916000905b828210611765575050505090565b83546001600160a01b031685529384019360019384019390910190611757565b805460ff161515825260018101546001600160a01b031660208301526002015460409091015256fef42c870234ce1595c214fdf331f4ac5d8ba4c010e9f64d466736c93812624d42a26469706673582212205ba26f8bf947a77e404ecf1b9c1d65cb15c42abbb5f3e4c8aafccd4ed7b809ea64736f6c63430008120033";

type AccountsStrategiesUpdateEndowmentsConstructorParams =
  | [
      linkLibraryAddresses: AccountsStrategiesUpdateEndowmentsLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsStrategiesUpdateEndowmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AccountsStrategiesUpdateEndowments__factory extends ContractFactory {
  constructor(...args: AccountsStrategiesUpdateEndowmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccountsStrategiesUpdateEndowments__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AccountsStrategiesUpdateEndowmentsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cdb3a974a6603f5f21ad73b7f4e0c6fc0b\\$__", "g"),
      linkLibraryAddresses["contracts/lib/Strings/string.sol:StringArray"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountsStrategiesUpdateEndowments> {
    return super.deploy(
      overrides || {}
    ) as Promise<AccountsStrategiesUpdateEndowments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountsStrategiesUpdateEndowments {
    return super.attach(address) as AccountsStrategiesUpdateEndowments;
  }
  override connect(
    signer: Signer
  ): AccountsStrategiesUpdateEndowments__factory {
    return super.connect(signer) as AccountsStrategiesUpdateEndowments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsStrategiesUpdateEndowmentsInterface {
    return new utils.Interface(
      _abi
    ) as AccountsStrategiesUpdateEndowmentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountsStrategiesUpdateEndowments {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountsStrategiesUpdateEndowments;
  }
}

export interface AccountsStrategiesUpdateEndowmentsLibraryAddresses {
  ["contracts/lib/Strings/string.sol:StringArray"]: string;
}
