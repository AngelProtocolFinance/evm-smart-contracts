/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GoldfinchLockedVault,
  GoldfinchLockedVaultInterface,
} from "../../../../contracts/integrations/goldfinch/GoldfinchLockedVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crvPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104cf3803806104cf8339818101604052810190610032919061009d565b5050506100f0565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061006a8261003f565b9050919050565b61007a8161005f565b811461008557600080fd5b50565b60008151905061009781610071565b92915050565b6000806000606084860312156100b6576100b561003a565b5b60006100c486828701610088565b93505060206100d586828701610088565b92505060406100e686828701610088565b9150509250925092565b6103d0806100ff6000396000f3fe60806040526004361061003f5760003560e01c806320dcd90b146100445780634dc237721461006057806375baf37f1461009057806388bb447b146100bb575b600080fd5b61005e600480360381019061005991906101d9565b6100e4565b005b61007a600480360381019061007591906101d9565b6100e9565b604051610087919061023b565b60405180910390f35b34801561009c57600080fd5b506100a56100f2565b6040516100b291906102cd565b60405180910390f35b3480156100c757600080fd5b506100e260048036038101906100dd919061034d565b6100fb565b005b505050565b60009392505050565b60006001905090565b5050565b600080fd5b600080fd5b600063ffffffff82169050919050565b61012281610109565b811461012d57600080fd5b50565b60008135905061013f81610119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061017082610145565b9050919050565b61018081610165565b811461018b57600080fd5b50565b60008135905061019d81610177565b92915050565b6000819050919050565b6101b6816101a3565b81146101c157600080fd5b50565b6000813590506101d3816101ad565b92915050565b6000806000606084860312156101f2576101f16100ff565b5b600061020086828701610130565b93505060206102118682870161018e565b9250506040610222868287016101c4565b9150509250925092565b610235816101a3565b82525050565b6000602082019050610250600083018461022c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061029657610295610256565b5b50565b60008190506102a782610285565b919050565b60006102b782610299565b9050919050565b6102c7816102ac565b82525050565b60006020820190506102e260008301846102be565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261030d5761030c6102e8565b5b8235905067ffffffffffffffff81111561032a576103296102ed565b5b602083019150836020820283011115610346576103456102f2565b5b9250929050565b60008060208385031215610364576103636100ff565b5b600083013567ffffffffffffffff81111561038257610381610104565b5b61038e858286016102f7565b9250925050925092905056fea2646970667358221220b8216a32d37acdeb7a65e225ff41c6b45a50198f79b9ce3dac02cc6d0b4103b764736f6c634300080a0033";

type GoldfinchLockedVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldfinchLockedVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldfinchLockedVault__factory extends ContractFactory {
  constructor(...args: GoldfinchLockedVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GoldfinchLockedVault> {
    return super.deploy(
      _registrar,
      _stakingPool,
      _crvPool,
      overrides || {}
    ) as Promise<GoldfinchLockedVault>;
  }
  override getDeployTransaction(
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registrar,
      _stakingPool,
      _crvPool,
      overrides || {}
    );
  }
  override attach(address: string): GoldfinchLockedVault {
    return super.attach(address) as GoldfinchLockedVault;
  }
  override connect(signer: Signer): GoldfinchLockedVault__factory {
    return super.connect(signer) as GoldfinchLockedVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldfinchLockedVaultInterface {
    return new utils.Interface(_abi) as GoldfinchLockedVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldfinchLockedVault {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoldfinchLockedVault;
  }
}
