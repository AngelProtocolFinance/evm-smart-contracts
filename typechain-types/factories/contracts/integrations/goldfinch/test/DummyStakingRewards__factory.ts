/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DummyStakingRewards,
  DummyStakingRewardsInterface,
} from "../../../../../contracts/integrations/goldfinch/test/DummyStakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedRewardsPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addToStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceByTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fiduAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "depositToCurveAndStakeFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalUnvested",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalVested",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalPreviouslyVested",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalClaimed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
            ],
            internalType: "struct StakingRewardsVesting.Rewards",
            name: "rewards",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "leverageMultiplier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedUntil",
            type: "uint256",
          },
          {
            internalType: "enum IStakingRewards.StakedPositionType",
            name: "positionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "unsafeEffectiveMultiplier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unsafeBaseTokenExchangeRate",
            type: "uint256",
          },
        ],
        internalType: "struct IStakingRewards.StakedPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "kick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsByTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalanceByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "setCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setRewardByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IStakingRewards.StakedPositionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "stakedBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000359576001600160401b03601f601f1962001a4738819003838101831686019190858311878410176200034357808792604094855283398101031262000359576200004f846200035e565b926200005f60208096016200035e565b926200006a62000373565b926200007562000373565b9084519084821162000343576000918254966001978881811c9116801562000338575b8c8210146200032457908b8288859411620002ce575b50508b90878311600114620002695785926200025d575b5050600019600383901b1c191690871b1782555b8251948511620002495785548681811c911680156200023e575b8a8210146200022a57848111620001e2575b50889385116001146200017c57508394959697509262000170575b5050600019600383901b1c191690821b1790555b600980546001600160a01b039384166001600160a01b031991821617909155600a80549290931691161790556040516116a29081620003a58239f35b01519050388062000120565b8493929193169785845280842093905b898210620001ca575050838596979810620001b0575b505050811b01905562000134565b015160001960f88460031b161c19169055388080620001a2565b8087859682949686015181550195019301906200018c565b8683528983208580880160051c8201928c891062000220575b0160051c019087905b8281106200021457505062000105565b84815501879062000204565b92508192620001fb565b634e487b7160e01b83526022600452602483fd5b90607f1690620000f3565b634e487b7160e01b82526041600452602482fd5b015190503880620000c5565b908c91858b95168780528388209388905b828210620002b457505084116200029a575b505050811b018255620000d9565b015160001960f88460031b161c191690553880806200028c565b8484015186558d979095019493840193908101906200027a565b90919250858052878287209181860160051c83019386106200031a575b918b91869594930160051c01915b8281106200030b57508d9150620000ae565b8781558594508b9101620002f9565b92508192620002eb565b634e487b7160e01b85526022600452602485fd5b90607f169062000098565b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036200035957565b60408051919082016001600160401b0381118382101762000343576040526004825263151154d560e21b602083015256fe60806040908082526004918236101561001757600080fd5b600091823560e01c90816301ffc9a714610dd65750806306fdde0314610d0b578063081812fc14610ce3578063095ea7b314610b4e57806310087fb1146109895780631c4b774b1461092457806323b872dd146108fa578063259c5f25146108d257806338962186146102d457806342842e0e146108aa5780636352211e1461087a57806369d00e791461086057806370a08231146107b75780638bb5d9c31461079d578063958c87f51461077f57806395d89b41146106695780639c65613a146103d65780639e2c8a5b146105bf578063a22cb465146104ef578063a83f5eef146104d1578063a9f4939d146103fe578063aa04295f146103d6578063b88d4fde14610348578063c87b56dd146102d9578063c8f33c91146102d4578063ce0cf1a5146102bf578063e985e9c5146102725763eb02c3011461015957600080fd5b3461026e576020918260031936011261026b57833591610177611572565b50821561022957610186611572565b9282526006845260a08183205494858552825195865280850151908151818801528101518387015282810151606087015260608101516080870152608081015182870152015160c085015282015160e084015260608201516101008401526080820151906002821015610216576101808460c0858561012084015260a08101516101408401520151610160820152f35b80602186634e487b7160e01b6024945252fd5b8484606492519162461bcd60e51b8352820152601060248201527f496e76616c696420746f6b656e204944000000000000000000000000000000006044820152fd5b80fd5b5080fd5b503461026e578060031936011261026e5760ff81602093610291610ee6565b610299610f01565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b823461026b57602036600319011261026b5780f35b610f4c565b503461026e57602036600319011261026e57610317610312610344943560005260026020526001600160a01b0360406000205416151590565b610fee565b81815161032381610f7e565b5280519161033083610f7e565b825251918291602083526020830190610ea6565b0390f35b508290346103d25760803660031901126103d257610364610ee6565b61036c610f01565b846064359467ffffffffffffffff861161026e573660238701121561026e57850135946103a461039b87610fd2565b95519586610fb0565b858552366024878301011161026e57856103cf9660246020930183880137850101526044359161110c565b80f35b8280fd5b5082346103d25760203660031901126103d25760209282913581526006845220549051908152f35b5082346103d25761040e36610f68565b92906001600160a01b03600a54166020835180926323b872dd60e01b825281898161045b8b30338d85016040919493929460608201956001600160a01b0380921683521660208201520152565b03925af180156104c757610499575b5084526006602052832090815492830180931161048657505580f35b836011602492634e487b7160e01b835252fd5b6104b99060203d81116104c0575b6104b18183610fb0565b810190611609565b508561046a565b503d6104a7565b83513d88823e3d90fd5b503461026e576104e036610f68565b91908352600660205282205580f35b508290346103d257806003193601126103d25761050a610ee6565b90602435918215158093036105bb576001600160a01b0316928333146105795750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b503461026e576105ce36610f68565b90835260066020528183208054908282039182116106565755600a54825163a9059cbb60e01b815233958101958652602086810193909352939484916001600160a01b0316908290879082906040015b03925af190811561064d5750610632575080f35b6106499060203d81116104c0576104b18183610fb0565b5080f35b513d84823e3d90fd5b602485601188634e487b7160e01b835252fd5b50903461026b578060031936011261026b578151918160019283549384811c91818616958615610775575b6020968785108114610762578899509688969785829a52918260001461073b5750506001146106e0575b50505061034492916106d1910385610fb0565b51928284938452830190610ea6565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061072357505050820101816106d16103446106be565b8054848a01860152889550879490930192810161070a565b60ff19168782015293151560051b860190930193508492506106d1915061034490506106be565b60248360228c634e487b7160e01b835252fd5b92607f1692610694565b503461026e5761078e36610f68565b91908352600760205282205580f35b82843461026e57602036600319011261026e573560085580f35b50913461026e57602036600319011261026e576001600160a01b036107da610ee6565b169081156107f75760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b823461026b57606036600319011261026b57610649610ee6565b50903461026b57602036600319011261026b57506001600160a01b036108a260209335611039565b915191168152f35b503461026e576103cf906108bd36610f17565b919251926108ca84610f7e565b85845261110c565b5082346103d25760203660031901126103d25760209282913581526007845220549051908152f35b823461026b576103cf61090c36610f17565b9161091f61091a84336111a2565b61109b565b611281565b508290346103d25760203660031901126103d257602061061e926001600160a01b03600954168135865260078352838620549186855180978195829463a9059cbb60e01b845233908401602090939291936001600160a01b0360408201951681520152565b50913461026e578260031936011261026e57803592600260243510156103d257600a5481516323b872dd60e01b81523384820190815230602082810191909152604082018890529692879183916001600160a01b03169082908990829060600103925af18015610b4457610b27575b506008546000198114610b14576001018060085584526006855281842055600854913315610ad45750610a4a610a448360005260026020526001600160a01b0360406000205416151590565b15611621565b610a6d610a448360005260026020526001600160a01b0360406000205416151590565b3383526003845280832060018154019055818352600284528083203373ffffffffffffffffffffffffffffffffffffffff19825416179055519133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46008548152f35b8480606493519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b602485601186634e487b7160e01b835252fd5b610b3d90863d88116104c0576104b18183610fb0565b50386109f8565b83513d87823e3d90fd5b5082346103d257816003193601126103d257610b68610ee6565b90602435926001600160a01b03918280610b8187611039565b16941693808514610c7a57803314908115610c5b575b5015610bf35784865260205284208273ffffffffffffffffffffffffffffffffffffffff19825416179055610bcb83611039565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541687610b97565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b50903461026b57602036600319011261026b57506001600160a01b036108a26020933561105e565b50903461026b578060031936011261026b5781519181825492600184811c91818616958615610dcc575b6020968785108114610762578899509688969785829a52918260001461073b575050600114610d715750505061034492916106d1910385610fb0565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610db457505050820101816106d16103446106be565b8054848a018601528895508794909301928101610d9b565b92607f1692610d35565b839085346103d25760203660031901126103d257357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103d257602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115610e7c575b8115610e52575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610e4b565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610e44565b919082519283825260005b848110610ed2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610eb1565b600435906001600160a01b0382168203610efc57565b600080fd5b602435906001600160a01b0382168203610efc57565b6060906003190112610efc576001600160a01b03906004358281168103610efc57916024359081168103610efc579060443590565b34610efc576000366003190112610efc57602060405160008152f35b6040906003190112610efc576004359060243590565b6020810190811067ffffffffffffffff821117610f9a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610f9a57604052565b67ffffffffffffffff8111610f9a57601f01601f191660200190565b15610ff557565b606460405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b60005260026020526001600160a01b036040600020541661105b811515610fee565b90565b6110816103128260005260026020526001600160a01b0360406000205416151590565b60005260046020526001600160a01b036040600020541690565b156110a257565b608460405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152fd5b9061113093929161112061091a84336111a2565b61112b838383611281565b6113b5565b1561113757565b60405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b906001600160a01b0380806111b684611039565b169316918383149384156111e9575b5083156111d3575b50505090565b6111df9192935061105e565b16143880806111cd565b909350600052600560205260406000208260005260205260ff6040600020541692386111c5565b1561121757565b608460405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b906112a99161128f84611039565b916001600160a01b03938493848094169485911614611210565b1691821561134c57816112c6916112bf86611039565b1614611210565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600084815260046020526040812073ffffffffffffffffffffffffffffffffffffffff199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b608460405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b9293600093909291803b156115675794849161142996604051809481937f150b7a0200000000000000000000000000000000000000000000000000000000978884523360048501526001600160a01b0380921660248501526044840152608060648401528260209b8c976084830190610ea6565b0393165af184918161150f575b506114e6575050503d6000146114de573d61145081610fd2565b9061145e6040519283610fb0565b81528091833d92013e5b805191826114db5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b506060611468565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d8311611560575b6115278183610fb0565b810103126105bb57517fffffffff00000000000000000000000000000000000000000000000000000000811681036105bb579038611436565b503d61151d565b505050915050600190565b604090815160e081019067ffffffffffffffff9181811083821117610f9a578452809360009283835281519060c0820190828210908211176115f55791849160c09493825282815282602082015282828201528260608201528260808201528260a082015260208401528201528260608201528260808201528260a08201520152565b602485634e487b7160e01b81526041600452fd5b90816020910312610efc57518015158103610efc5790565b1561162857565b606460405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152fdfea2646970667358221220e3ff59518ea9d27ea72c88f3a9d6e659569bbe31e228998c1ce0d51ad7ad2dc064736f6c63430008120033";

type DummyStakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyStakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyStakingRewards__factory extends ContractFactory {
  constructor(...args: DummyStakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardToken: PromiseOrValue<string>,
    _stakeToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyStakingRewards> {
    return super.deploy(
      _rewardToken,
      _stakeToken,
      overrides || {}
    ) as Promise<DummyStakingRewards>;
  }
  override getDeployTransaction(
    _rewardToken: PromiseOrValue<string>,
    _stakeToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _stakeToken,
      overrides || {}
    );
  }
  override attach(address: string): DummyStakingRewards {
    return super.attach(address) as DummyStakingRewards;
  }
  override connect(signer: Signer): DummyStakingRewards__factory {
    return super.connect(signer) as DummyStakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyStakingRewardsInterface {
    return new utils.Interface(_abi) as DummyStakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyStakingRewards {
    return new Contract(address, _abi, signerOrProvider) as DummyStakingRewards;
  }
}
