/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GoldfinchVault,
  GoldfinchVaultInterface,
} from "../../../../contracts/integrations/goldfinch/GoldfinchVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_vaultType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crvPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fidu",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gfi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [],
    name: "FIDU",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GFI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "principleByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "usdcP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fiduP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "tokenIdByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012457601f620021df38819003918201601f19168301916001600160401b03831184841017620001295780849260e0946040528339810103126200012457805190600282101562000124576200005d602082016200013f565b916200006c604083016200013f565b6200007a606084016200013f565b9262000089608082016200013f565b92620000a660c06200009e60a085016200013f565b93016200013f565b9360ff6000549160018060a01b0380988180988160018060a01b03199d168d6003541617600355168b600554161760055516896004541617600455610100600160a81b039060081b1692169060018060a81b0319161717600055168360015416176001551690600254161760025560405161208a9081620001558239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001245756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263034afe7b14610e2357508163150b7a0214610daa5781631c2a709b14610d6c57816320dcd90b1461082b5781634dc237721461059957816375baf37f1461057057816388bb447b146103ca57816389a302711461039e5781639fdafa6d14610375578163c2ec3be6146100d4575063e52022691461009e57600080fd5b346100d05760203660031901126100d0578060209263ffffffff6100c0610e48565b1681526006845220549051908152f35b5080fd5b905082602092836003193601126100d0576100ed610e48565b916100fe6100f9611048565b6111ae565b63ffffffff8316938482526006865261011b8383205415156111f0565b6005548583526006875283832054845163eb02c30160e01b808252848201929092526001600160a01b03979261018092908916918381602481865afa90811561036b5784929161017591899161034e575b505115156111f0565b84875260068b5260248888205491895194859384928352898301525afa9182156103175790849392918692610321575b505060a08860035416875195868092635c77d24760e11b82525afa9384156103175790899493929186946102e3575b50610209906101e289611ad6565b6101ed81518a6119ee565b9861020182516101fb6118d6565b90611960565b915190611edd565b96806102c4575b5084526007835284842060018101859055849055835460609290920151855163095ea7b360e01b81529088166001600160a01b0316918101918252602082018790529596949594859260081c16908290859082906040015b03925af180156102b85761027f575b505051908152f35b8482813d83116102b1575b6102948183610f55565b810103126102ae57506102a690610f77565b508380610277565b80fd5b503d61028a565b508251903d90823e3d90fd5b6102d7610268979887928695949661181f565b97965092909192610210565b6102099194506103099060a03d8111610310575b6103018183610f55565b810190610fcc565b93906101d4565b503d6102f7565b86513d87823e3d90fd5b6103409250803d10610347575b6103388183610f55565b81019061122a565b89806101a5565b503d61032e565b6103659150843d8611610347576103388183610f55565b8d61016c565b88513d89823e3d90fd5b5050346100d057816003193601126100d05760015490516001600160a01b039091168152602090f35b5050346100d057816003193601126100d0579054905160089190911c6001600160a01b03168152602090f35b90503461056c576020908160031936011261056857803567ffffffffffffffff928382116105645736602383011215610564578183013593841161056457602494600592368787861b830101116105605784936104286100f9611048565b6003548351635c77d24760e11b8152956001600160a01b03939160a0918891829087165afa958615610556578a96610536575b50895b888110610469578a80f35b8981841b830101358b63ffffffff82168083036100d057808d9183526006808b526104988a85205415156111f0565b888854169184528a5288832054908c8a51938493849263eb02c30160e01b84528301526101809384935afa92831561052b57926104eb94926104e6928d959261050e575b50505115156111f0565b61132f565b60001981146104fc5760010161045e565b634e487b7160e01b8b5260118852898bfd5b6105249250803d10610347576103388183610f55565b38806104dc565b8951903d90823e3d90fd5b61054f91965060a03d8111610310576103018183610f55565b943861045b565b84513d8c823e3d90fd5b8780fd5b8580fd5b8380fd5b8280fd5b5050346100d057816003193601126100d05760ff602092541690519061059581610e92565b8152f35b9050826105a536610e5b565b94919290936105b56100f9611048565b6105d060018060a01b03958680855460081c16911614610eb2565b63ffffffff841694858352602095600687526105f08585205415156111f0565b81600554169781855260068852858520549686519963eb02c30160e01b98898c52868c015261018098898c602481855afa9b8c156107da5788999a9b9c61064191899a9161080e57505115156111f0565b60a086600354168b51998a8092635c77d24760e11b82525afa97881561080457908b918a996107e4575b50858a5260068d5260248b8b2054918c51948593849283528b8301525afa998a156107da57889a6107b3575b505090816106a76106ba93611ad6565b6106b28a51826119ee565b995190611d37565b919080988061079f575b505069d3c21bcecceda100000080830283810482148415171561078c579387969383889361071d61070c8f9a97998f9a8f6102689f8e60019360079252528920015490611302565b83875260078b528d872054906112ef565b04918185526007895261073760018d872001918254611322565b905583526007875261074d8a8420918254611322565b9055606081835460081c16940151169188519788958694859363095ea7b360e01b8552840160209093929193604081019460018060a01b031681520152565b634e487b7160e01b885260118652602488fd5b6107ab9299508661181f565b9689806106c4565b6106ba93929a5090816107d192903d10610347576103388183610f55565b9890918b610697565b89513d8a823e3d90fd5b6107fd91995060a03d8111610310576103018183610f55565b978d61066b565b8a513d8b823e3d90fd5b61082591508d803d10610347576103388183610f55565b8e61016c565b905061083636610e5b565b92919390610842611048565b8015610cda575b15610ca857855460081c6001600160a01b039081169161086c9082168314610eb2565b6108746118d6565b9080855416968885519463556d6e9f60e01b86528188870152856001958660248301528a60448301528b82606460209a8b935afa918215610c9e57918a9b9c91899a9b99938692610c65575b50906108cf86949392826112ef565b606490046108dc91611322565b8b5163095ea7b360e01b8082526001600160a01b039093169a81019a8b5260208b018f9052919990949193849291839190829060400103925af18015610c5b5788928c97969594928c92610c1a575b50908260849287835416908d519a8b968795630b68372160e31b87528601528a6024860152604485015260648401525af1938415610ac2578a94610be7575b5063ffffffff1693848a5260068652868a20548015600014610acc5750825460055488519283526001600160a01b039084161689830190815260208101869052879183918290036040019082908e9087165af18015610ac2579184918793610a82575b5060449060055416988b89519a8b9485936310087fb160e01b85528401528160248401525af1958615610a78578896610a40575b50610a35906006959697848a5260078652610a20888b20918254610f84565b90558389526007855286892001918254610f84565b905585525282205580f35b909495508381813d8311610a71575b610a598183610f55565b81010312610a6c57519493610a35610a01565b600080fd5b503d610a4f565b85513d8a823e3d90fd5b8381949293503d8311610abb575b610a9a8183610f55565b81010312610ab75760448491610ab08894610f77565b50906109cd565b8980fd5b503d610a90565b87513d8c823e3d90fd5b835460055489519384526001600160a01b03908516168a8401908152602081018790529a9b9a9599949897969591939291879183918290036040019082908e9087165af18015610ac257610bb3575b506005541691823b15610baf579060448992838851958694859363a9f4939d60e01b85528401528b60248401525af18015610ba557610b89575b5090818697600793610b84979852838352610b74858a20918254610f84565b9055875252842001918254610f84565b905580f35b90610b849596610b9b60079493610ef3565b9695509091610b55565b84513d89823e3d90fd5b8880fd5b8581813d8311610be0575b610bc88183610f55565b81010312610ab757610bd990610f77565b5038610b1b565b503d610bbe565b9093508581813d8311610c13575b610bff8183610f55565b81010312610ab757519263ffffffff61096a565b503d610bf5565b975092905086813d8311610c54575b610c338183610f55565b810103126102ae5760848a828a94610c4b8f9a610f77565b5091925061092b565b503d610c29565b89513d85823e3d90fd5b92995092905081813d8311610c97575b610c7f8183610f55565b8101031261056857518a9789929091906108cf6108c0565b503d610c75565b89513d86823e3d90fd5b815162461bcd60e51b8152602081850152600c60248201526b139bdd08185c1c1c9bdd995960a21b6044820152606490fd5b506003546001600160a01b0390811660a0610cf36110b3565b60248651809481936342b8c5e960e01b835263ffffffff60e01b168a8301525afa908115610d625760209182918a91610d34575b5001510151163314610849565b610d55915060a03d8111610d5b575b610d4d8183610f55565b810190611152565b38610d27565b503d610d43565b84513d8a823e3d90fd5b5050346100d05760203660031901126100d057809163ffffffff610d8e610e48565b1681526007602052206001815491015482519182526020820152f35b90503461056c57608036600319011261056c576001600160a01b03813581811603610568576024359081160361056c576064359067ffffffffffffffff90818311610e1f5736602384011215610e1f5782013590811161056857369101602401116100d05751630a85bd0160e11b8152602090f35b8480fd5b8490346100d057816003193601126100d0576002546001600160a01b03168152602090f35b6004359063ffffffff82168203610a6c57565b6060906003190112610a6c5760043563ffffffff81168103610a6c57906024356001600160a01b0381168103610a6c579060443590565b60021115610e9c57565b634e487b7160e01b600052602160045260246000fd5b15610eb957565b60405162461bcd60e51b815260206004820152601260248201527113db9b1e481554d110c81858d8d95c1d195960721b6044820152606490fd5b67ffffffffffffffff8111610f0757604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117610f0757604052565b6020810190811067ffffffffffffffff821117610f0757604052565b90601f8019910116810190811067ffffffffffffffff821117610f0757604052565b51908115158203610a6c57565b91908201809211610f9157565b634e487b7160e01b600052601160045260246000fd5b519063ffffffff82168203610a6c57565b51906001600160a01b0382168203610a6c57565b908160a0910312610a6c576040519060a0820182811067ffffffffffffffff821117610f07576110409160809160405261100581610fa7565b845261101360208201610fa7565b602085015261102460408201610fb8565b604085015261103560608201610fb8565b606085015201610fb8565b608082015290565b600354604051635c77d24760e11b81526001600160a01b039160a0908290600490829086165afa80156110a757606091600091611089575b50015116331490565b6110a1915060a03d8111610310576103018183610f55565b38611080565b6040513d6000823e3d90fd5b6040516020810160208152600960408301526808eded8c8ccd2dcc6d60bb1b6060830152606082526080820182811067ffffffffffffffff821117610f0757604052905190206001600160e01b03191690565b9190826040910312610a6c576040516040810181811067ffffffffffffffff821117610f075760405280928051906002821015610a6c57602061114d918193855201610fb8565b910152565b60a081830312610a6c57604051916060830183811067ffffffffffffffff821117610f075760405281516004811015610a6c576111a692606091855261119b8360208301611106565b602086015201611106565b604082015290565b156111b557565b60405162461bcd60e51b81526020600482015260136024820152722737ba1030b8383937bb32b2102937baba32b960691b6044820152606490fd5b156111f757565b60405162461bcd60e51b815260206004820152600b60248201526a2737903837b9b4ba34b7b760a91b6044820152606490fd5b809103906101808212610a6c57604080519260e084019084821067ffffffffffffffff831117610f075760c091835283518552601f190112610a6c57805161127181610f1d565b602083015181528183015160208201526060830151828201526080830151606082015260a0830151608082015260c083015160a0820152602084015260e0820151908301526101008101516060830152610120810151906002821015610a6c5761016091608084015261014081015160a0840152015160c082015290565b81810292918115918404141715610f9157565b811561130c570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211610f9157565b60018060a01b0380600554169063ffffffff918284169160009383855260206006815260409687872054948851809163eb02c30160e01b8252600497888301528160246101809485935afa918215610804578992611802575b505061139382611ad6565b61139e8151836119ee565b9384156117f557878952600784526113cf69d3c21bcecceda10000006113c7878d8d20546112ef565b048096611ca2565b94600160ff8b54166113e081610e92565b1461172a5790879160c088600354168d519485809263edbcc59960e01b82525afa928315611720579386938993898c98948f98899461166a575b509061142591611322565b818784015116611434916112ef565b9160a001511661144391611302565b9051906114509089610f84565b9061145a92611d37565b8a859e929e52600784528c85206001019081549061147791611322565b90558354908c01518c5163a9059cbb60e01b8082529184166001600160a01b03169681019687526020870189905290959094859384928390604001039360081c165af19081156107da578891611635575b50156115de57836003541660a06114dd6110b3565b60248b51809481936342b8c5e960e01b835263ffffffff60e01b168b8301525afa9081156107da578a8a9285928b91611617575b50888b858a825460081c1693019661155a6115338b8d898c5101511697611322565b9751978896879586948552840160209093929193604081019460018060a01b031681520152565b03925af19081156107da5788916115e2575b50156115de5761158a929184915101511692865460081c1697611322565b813b15610e1f5791846064928195948851998a9687956320dcd90b60e01b8752860152602485015260448401525af19182156115d45750506115c95750565b6115d290610ef3565b565b51903d90823e3d90fd5b8680fd5b90508281813d8311611610575b6115f98183610f55565b810103126105605761160a90610f77565b3861156c565b503d6115ef565b61162f915060a03d8111610d5b57610d4d8183610f55565b38611511565b90508281813d8311611663575b61164c8183610f55565b810103126105605761165d90610f77565b386114c8565b503d611642565b959950965050935050935060c0813d8211611718575b8161168d60c09383610f55565b8101031261171457938a93869389936114258f806117078f9b60a0908f9451936116b685610f1d565b6116bf82610f77565b85526116cc8d8301610fa7565b8d8601526116db818301610fa7565b908501526116eb60608201610f77565b60608501526116fc60808201610fa7565b608085015201610fa7565b60a082015293909161141a565b8a80fd5b3d9150611680565b8c513d8d823e3d90fd5b50509461174483979694899b936117839795965190611d37565b9a90938a81835460081c1694015116918a519687958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af19081156117eb5784916117b6575b501561056c5782526007905220600101805490916117b291611322565b9055565b90508281813d83116117e4575b6117cd8183610f55565b81010312610568576117de90610f77565b38611795565b503d6117c3565b85513d86823e3d90fd5b5050505050505050505050565b6118189250803d10610347576103388183610f55565b3880611388565b9291908161182c91611ca2565b60008054604095860151955163a9059cbb60e01b81526001600160a01b039687166004820152602481018490529195929392602091839160449183918a9160081c165af19081156118cb578591611892575b50156105685761188f929350611322565b90565b90506020813d82116118c3575b816118ac60209383610f55565b81010312610e1f576118bd90610f77565b3861187e565b3d915061189f565b6040513d87823e3d90fd5b6003546040516306e7f2fd60e11b815290602090829060049082906001600160a01b03165afa9081156110a757600091611911575b50515190565b906020823d8211611958575b8161192a60209383610f55565b810103126102ae57506040519061194082610f39565b6040519061194d82610f39565b51815281523861190b565b3d915061191d565b602060018060a01b03600454169160646040518094819363556d6e9f60e01b8352600160048401526000602484015260448301525afa9081156110a7576000916119bc575b5060646119b561188f93836112ef565b0490611322565b906020823d82116119e6575b816119d560209383610f55565b810103126102ae57505160646119a5565b3d91506119c8565b919063ffffffff6000931683526007602052604083205490602060018060a01b03600454169160646040518094819363556d6e9f60e01b83526001600484015289602484015260448301525afa908115611acb578491611a9a575b50818110611a965781611a5b91611322565b69d3c21bcecceda100000090818102918183041490151715611a825761188f929350611302565b634e487b7160e01b84526011600452602484fd5b5050565b90506020813d8211611ac3575b81611ab460209383610f55565b81010312610568575138611a49565b3d9150611aa7565b6040513d86823e3d90fd5b6005549060009163ffffffff60018060a01b03809216921683526020906006825260409283852054813b156105645785916024839287519485938492631c4b774b60e01b845260048401525af18015611c9857611c85575b5080600254168351916370a0823160e01b83523060048401528383602481855afa928315611c7b578693611c4c575b50600460a08260035416875192838092635c77d24760e11b82525afa908115611c4257918686959392611bc89795938a91611c24575b5001511687875180978195829463a9059cbb60e01b84526004840160209093929193604081019460018060a01b031681520152565b03925af1928315611c1b57508392611be5575b5050156102ae5750565b90809250813d8311611c14575b611bfc8183610f55565b810103126100d057611c0d90610f77565b3880611bdb565b503d611bf2565b513d85823e3d90fd5b611c3c915060a03d8111610310576103018183610f55565b38611b93565b86513d89823e3d90fd5b9092508381813d8311611c74575b611c648183610f55565b81010312610a6c57519138611b5d565b503d611c5a565b85513d88823e3d90fd5b611c9190949194610ef3565b9238611b2e565b84513d87823e3d90fd5b600354604051635c77d24760e11b8152919060a090839060049082906001600160a01b03165afa80156110a75769d3c21bcecceda100000093611d1193600092611d15575b50611cf291926112ef565b6020611d0763ffffffff9283855116906112ef565b9201511690611302565b0490565b611cf29250611d319060a03d8111610310576103018183610f55565b91611ce7565b90929160049060018060a01b0382541690604051809263556d6e9f60e01b825260018583015260009081602484015288604484015282606460209687935afa918215611ed0578192611ea1575b508115611e655769d3c21bcecceda1000000918281029081048303611e525788611dad91611302565b92828102928184041490151715611e3f575090611dc991611302565b948511611df2575050611dee9083611de8611de26118d6565b82611960565b91611edd565b9190565b60405162461bcd60e51b815291820152602160248201527f43616e6e6f742072656465656d206d6f7265207468616e20617661696c61626c6044820152606560f81b606482015260849150fd5b634e487b7160e01b815260118552602490fd5b634e487b7160e01b825260118652602482fd5b60405162461bcd60e51b81528086018590526015602482015274496e76616c69642065786368616e6765207261746560581b6044820152606490fd5b9091508381813d8311611ec9575b611eb98183610f55565b810103126100d057519038611d84565b503d611eaf565b50604051903d90823e3d90fd5b916005549060009063ffffffff60018060a01b03809416951682526020926006845260409586842054813b15610e1f578491604483928a519485938492639e2c8a5b60e01b845260048401528b60248401525af1801561203757612041575b5060015460048054885163095ea7b360e01b81529084166001600160a01b03169181019190915260248101879052908590829084168187816044810103925af18015612037579085939291611ffc575b5060849060045416958488519788948593630b68372160e31b855260016004860152836024860152604485015260648401525af19384156115d4575092611fd257505090565b90809250813d8311611ff5575b611fe98183610f55565b81010312610a6c575190565b503d611fdf565b90919281813d8311612030575b6120138183610f55565b8101031261056857849291612029608492610f77565b5090611f8c565b503d612009565b87513d86823e3d90fd5b61204d90939193610ef3565b9138611f3c56fea2646970667358221220abe905a9de42a99f322ba6c6db1d21429076d53599ee191bd078c8a5c2f83fe764736f6c63430008120033";

type GoldfinchVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldfinchVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldfinchVault__factory extends ContractFactory {
  constructor(...args: GoldfinchVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GoldfinchVault> {
    return super.deploy(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    ) as Promise<GoldfinchVault>;
  }
  override getDeployTransaction(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    );
  }
  override attach(address: string): GoldfinchVault {
    return super.attach(address) as GoldfinchVault;
  }
  override connect(signer: Signer): GoldfinchVault__factory {
    return super.connect(signer) as GoldfinchVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldfinchVaultInterface {
    return new utils.Interface(_abi) as GoldfinchVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldfinchVault {
    return new Contract(address, _abi, signerOrProvider) as GoldfinchVault;
  }
}
