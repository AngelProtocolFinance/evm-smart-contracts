/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GoldfinchVault,
  GoldfinchVaultInterface,
} from "../../../../contracts/integrations/goldfinch/GoldfinchVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_vaultType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crvPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fidu",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gfi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [],
    name: "FIDU",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GFI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "principleByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "usdcP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fiduP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum IRouter.VaultActionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IRouter.RedemptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "tokenIdByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012457601f6200235c38819003918201601f19168301916001600160401b03831184841017620001295780849260e0946040528339810103126200012457805190600282101562000124576200005d602082016200013f565b916200006c604083016200013f565b6200007a606084016200013f565b9262000089608082016200013f565b92620000a660c06200009e60a085016200013f565b93016200013f565b9360ff6000549160018060a01b0380988180988160018060a01b03199d168d6003541617600355168b600554161760055516896004541617600455610100600160a81b039060081b1692169060018060a81b031916171760005516836001541617600155169060025416176002556040516122079081620001558239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001245756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263034afe7b14610fa157508163150b7a0214610f285781631c2a709b14610eea57816320dcd90b146109a95781634dc23772146105f857816375baf37f146105cf57816388bb447b1461042f57816389a30271146104035781639fdafa6d146103da578163c2ec3be6146100d4575063e52022691461009e57600080fd5b346100d05760203660031901126100d0578060209263ffffffff6100c0610fc6565b1681526006845220549051908152f35b5080fd5b9050602091826003193601126103d6576100ec610fc6565b936100fd6100f861118b565b6112de565b63ffffffff851680825260068552610119838320541515611320565b6005548183526006865283832054845163eb02c30160e01b808252818801929092526001600160a01b03966101809490939092908816918581602481865afa9081156103cc578692916101769189916103af575b50511515611320565b83875260068a5260248888205491895194859384928352888301525afa9384156103a5578594610376575b5050856003541697855193635c77d24760e11b8552868585818d5afa94851561033d57602498999a88918897610347575b508151998a809263b6c54a5d60e01b82528a898301525afa97881561033d57908a9594939291879961030a575b506102349061020d83611c55565b610218815184611b6d565b9261022c8251610226611a55565b90611adf565b91519061205a565b97816102eb575b50508452600783528484206001810185905584905583549151855163095ea7b360e01b81529088166001600160a01b0316918101918252602082018790529596949594859260081c16908290859082906040015b03925af180156102df576102a6575b505051908152f35b8482813d83116102d8575b6102bb81836110ef565b810103126102d557506102cd90611111565b50388061029e565b80fd5b503d6102b1565b508251903d90823e3d90fd5b61028f979887926102ff929695949661199f565b97969391929361023b565b61023491995061032f90893d8b11610336575b61032781836110ef565b81019061141f565b98906101ff565b503d61031d565b87513d88823e3d90fd5b610368919750823d841161036f575b61036081836110ef565b810190611155565b95386101d2565b503d610356565b610396929450803d1061039e575b61038e81836110ef565b81019061135a565b9138806101a1565b503d610384565b86513d87823e3d90fd5b6103c69150843d861161039e5761038e81836110ef565b3861016d565b88513d89823e3d90fd5b8380fd5b5050346100d057816003193601126100d05760015490516001600160a01b039091168152602090f35b5050346100d057816003193601126100d0579054905160089190911c6001600160a01b03168152602090f35b9050346105cb576020806003193601126103d65767ffffffffffffffff9180358381116105c757366023820112156105c757808201359384116105c757602492600595368587891b850101116105c35761048a6100f861118b565b60018060a01b0380600354169782519463b6c54a5d60e01b86528386898160019d8e8c8301525afa9586156105b9578b9661059a575b508a5b8981106104ce578b80f35b8881841b830101358c63ffffffff82168083036100d057808c9183526006808b526104fd8a8520541515611320565b888854169184528a5288832054908c8a51938493849263eb02c30160e01b84528301526101809384935afa92831561058f5792610550949261054b928d9592610572575b5050511515611320565b61149f565b6000198114610560578a016104c3565b634e487b7160e01b8c5260118852888cfd5b6105889250803d1061039e5761038e81836110ef565b3880610541565b8951903d90823e3d90fd5b6105b2919650843d86116103365761032781836110ef565b94386104c0565b84513d8d823e3d90fd5b8780fd5b8580fd5b8280fd5b5050346100d057816003193601126100d05760ff60209254169051906105f481611010565b8152f35b83915061060436610fd9565b9390918551926106138461109b565b828452826020809501526106286100f861118b565b61064360018060a01b03918280865460081c16911614611030565b63ffffffff82169182845260068552610660888520541515611320565b81600554169683855260068652888520549189519263eb02c30160e01b9081855289850152838a8160246101809788935afa908115610947578a9695949392916106b3918a9161098c5750511515611320565b84600354169a8c8c815198898092635c77d24760e11b82525afa96871561098257918b918b8f948c8c91819c610951575b5089959492602494926006925252858d20549551958694859384528301525afa938415610947578894610928575b50508a8760248b83519d8e93849263b6c54a5d60e01b84528301525afa998a1561091e57879a6108f9575b50908161074c61075f93611c55565b610757845182611b6d565b935190611eb4565b918199816108e5575b50505069d3c21bcecceda10000008082028281048214831517156108d257928a8a936107d7600161082a98956107c38b868f9b8f906107b49060078f8685525287848420015490611461565b92815260078d5220549061144e565b04938a8c52600789528b2001918254611481565b9055868852600785526107ee8c8920918254611481565b905580875460081c16915116868b5180968195829463095ea7b360e01b84528d840160209093929193604081019460018060a01b031681520152565b03925af180156108c857610894575b508551946108468661109b565b85528285019060018252825260078352858220541561088b575b85519451855251926005841015610878575050820152f35b634e487b7160e01b825260219052602490fd5b60028152610860565b8381813d83116108c1575b6108a981836110ef565b810103126105cb576108ba90611111565b5086610839565b503d61089f565b87513d85823e3d90fd5b634e487b7160e01b875260118952602487fd5b6108f0939a5061199f565b96898080610768565b61075f92919a50610916908c8d3d106103365761032781836110ef565b99909161073d565b8b513d89823e3d90fd5b61093f929450803d1061039e5761038e81836110ef565b918b80610712565b8c513d8a823e3d90fd5b6006919c5092602494926109748c9897958a3d8c1161036f5761036081836110ef565b9d92509294509294956106e4565b8d513d8b823e3d90fd5b6109a39150863d881161039e5761038e81836110ef565b8e61016d565b90506109b436610fd9565b929193906109c061118b565b8015610e58575b15610e2657855460081c6001600160a01b03908116916109ea9082168314611030565b6109f2611a55565b9080855416968885519463556d6e9f60e01b86528188870152856001958660248301528a60448301528b82606460209a8b935afa918215610e1c57918a9b9c91899a9b99938692610de3575b5090610a4d869493928261144e565b60649004610a5a91611481565b8b5163095ea7b360e01b8082526001600160a01b039093169a81019a8b5260208b018f9052919990949193849291839190829060400103925af18015610dd95788928c97969594928c92610d98575b50908260849287835416908d519a8b968795630b68372160e31b87528601528a6024860152604485015260648401525af1938415610c40578a94610d65575b5063ffffffff1693848a5260068652868a20548015600014610c4a5750825460055488519283526001600160a01b039084161689830190815260208101869052879183918290036040019082908e9087165af18015610c40579184918793610c00575b5060449060055416988b89519a8b9485936310087fb160e01b85528401528160248401525af1958615610bf6578896610bbe575b50610bb3906006959697848a5260078652610b9e888b2091825461111e565b9055838952600785528689200191825461111e565b905585525282205580f35b909495508381813d8311610bef575b610bd781836110ef565b81010312610bea57519493610bb3610b7f565b600080fd5b503d610bcd565b85513d8a823e3d90fd5b8381949293503d8311610c39575b610c1881836110ef565b81010312610c355760448491610c2e8894611111565b5090610b4b565b8980fd5b503d610c0e565b87513d8c823e3d90fd5b835460055489519384526001600160a01b03908516168a8401908152602081018790529a9b9a9599949897969591939291879183918290036040019082908e9087165af18015610c4057610d31575b506005541691823b15610d2d579060448992838851958694859363a9f4939d60e01b85528401528b60248401525af18015610d2357610d07575b5090818697600793610d02979852838352610cf2858a2091825461111e565b905587525284200191825461111e565b905580f35b90610d029596610d1960079493611071565b9695509091610cd3565b84513d89823e3d90fd5b8880fd5b8581813d8311610d5e575b610d4681836110ef565b81010312610c3557610d5790611111565b5038610c99565b503d610d3c565b9093508581813d8311610d91575b610d7d81836110ef565b81010312610c3557519263ffffffff610ae8565b503d610d73565b975092905086813d8311610dd2575b610db181836110ef565b810103126102d55760848a828a94610dc98f9a611111565b50919250610aa9565b503d610da7565b89513d85823e3d90fd5b92995092905081813d8311610e15575b610dfd81836110ef565b810103126103d657518a978992909190610a4d610a3e565b503d610df3565b89513d86823e3d90fd5b815162461bcd60e51b8152602081850152600c60248201526b139bdd08185c1c1c9bdd995960a21b6044820152606490fd5b506003546001600160a01b0390811660a0610e716111f4565b60248651809481936342b8c5e960e01b835263ffffffff60e01b168a8301525afa908115610ee05760209182918a91610eb2575b50015101511633146109c7565b610ed3915060a03d8111610ed9575b610ecb81836110ef565b810190611282565b38610ea5565b503d610ec1565b84513d8a823e3d90fd5b5050346100d05760203660031901126100d057809163ffffffff610f0c610fc6565b1681526007602052206001815491015482519182526020820152f35b9050346105cb5760803660031901126105cb576001600160a01b038135818116036103d657602435908116036105cb576064359067ffffffffffffffff90818311610f9d5736602384011215610f9d578201359081116103d657369101602401116100d05751630a85bd0160e11b8152602090f35b8480fd5b8490346100d057816003193601126100d0576002546001600160a01b03168152602090f35b6004359063ffffffff82168203610bea57565b6060906003190112610bea5760043563ffffffff81168103610bea57906024356001600160a01b0381168103610bea579060443590565b6002111561101a57565b634e487b7160e01b600052602160045260246000fd5b1561103757565b60405162461bcd60e51b815260206004820152601260248201527113db9b1e481554d110c81858d8d95c1d195960721b6044820152606490fd5b67ffffffffffffffff811161108557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761108557604052565b60c0810190811067ffffffffffffffff82111761108557604052565b6020810190811067ffffffffffffffff82111761108557604052565b90601f8019910116810190811067ffffffffffffffff82111761108557604052565b51908115158203610bea57565b9190820180921161112b57565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b0382168203610bea57565b90816040910312610bea576111836020604051926111728461109b565b61117b81611141565b845201611141565b602082015290565b60035460408051635c77d24760e11b81526001600160a01b03929091908290600490829086165afa9081156111e8576000916111ca575b505116331490565b6111e2915060403d811161036f5761036081836110ef565b386111c2565b6040513d6000823e3d90fd5b6040516020810160208152600960408301526808eded8c8ccd2dcc6d60bb1b6060830152606082526080820182811067ffffffffffffffff82111761108557604052905190206001600160e01b03191690565b9190826040910312610bea5760405161125f8161109b565b80928051906002821015610bea57602061127d918193855201611141565b910152565b60a081830312610bea57604051916060830183811067ffffffffffffffff8211176110855760405281516004811015610bea576112d69260609185526112cb8360208301611247565b602086015201611247565b604082015290565b156112e557565b60405162461bcd60e51b81526020600482015260136024820152722737ba1030b8383937bb32b2102937baba32b960691b6044820152606490fd5b1561132757565b60405162461bcd60e51b815260206004820152600b60248201526a2737903837b9b4ba34b7b760a91b6044820152606490fd5b809103906101808212610bea57604080519260e084019084821067ffffffffffffffff8311176110855760c091835283518552601f190112610bea5780516113a1816110b7565b602083015181528183015160208201526060830151828201526080830151606082015260a0830151608082015260c083015160a0820152602084015260e0820151908301526101008101516060830152610120810151906002821015610bea5761016091608084015261014081015160a0840152015160c082015290565b90816040910312610bea576020604051916114398361109b565b61144281611141565b83520151602082015290565b8181029291811591840414171561112b57565b811561146b570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161112b57565b519063ffffffff82168203610bea57565b60018060a01b0380600554169063ffffffff918284169160009383855260206006815260409687872054948851809163eb02c30160e01b8252600497888301528160246101809485935afa918215611995578992611978575b505061150382611c55565b61150e815183611b6d565b93841561196b578789526007845261153f69d3c21bcecceda1000000611537878d8d205461144e565b048096611e23565b94600160ff8b541661155081611010565b146118a25790879160c088600354168d519485809263edbcc59960e01b82525afa928315611898579386938993898c98948f9889946117e2575b509061159591611481565b8187840151166115a49161144e565b9160a00151166115b391611461565b9051906115c0908961111e565b906115ca92611eb4565b8a859e929e52600784528c8520600101908154906115e791611481565b9055835490518c5163a9059cbb60e01b8082529184166001600160a01b03169681019687526020870189905290959094859384928390604001039360081c165af19081156117855788916117ad575b501561174c57836003541660a061164b6111f4565b60248b51809481936342b8c5e960e01b835263ffffffff60e01b168b8301525afa908115611785578a8a9285928b9161178f575b50888b858a825460081c169301966116c86116a18b8d898c5101511697611481565b9751978896879586948552840160209093929193604081019460018060a01b031681520152565b03925af1908115611785578891611750575b501561174c576116f8929184915101511692865460081c1697611481565b813b15610f9d5791846064928195948851998a9687956320dcd90b60e01b8752860152602485015260448401525af19182156117425750506117375750565b61174090611071565b565b51903d90823e3d90fd5b8680fd5b90508281813d831161177e575b61176781836110ef565b810103126105c35761177890611111565b386116da565b503d61175d565b89513d8a823e3d90fd5b6117a7915060a03d8111610ed957610ecb81836110ef565b3861167f565b90508281813d83116117db575b6117c481836110ef565b810103126105c3576117d590611111565b38611636565b503d6117ba565b959950965050935050935060c0813d8211611890575b8161180560c093836110ef565b8101031261188c57938a93869389936115958f8061187f8f9b60a0908f94519361182e856110b7565b61183782611111565b85526118448d830161148e565b8d86015261185381830161148e565b9085015261186360608201611111565b60608501526118746080820161148e565b60808501520161148e565b60a082015293909161158a565b8a80fd5b3d91506117f8565b8c513d8d823e3d90fd5b5050946118bc83979694899b936118f99795965190611eb4565b9a909380825460081c16935116918a519687958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af190811561196157849161192c575b50156105cb57825260079052206001018054909161192891611481565b9055565b90508281813d831161195a575b61194381836110ef565b810103126103d65761195490611111565b3861190b565b503d611939565b85513d86823e3d90fd5b5050505050505050505050565b61198e9250803d1061039e5761038e81836110ef565b38806114f8565b8a513d8b823e3d90fd5b929190816119ac91611e23565b60008054945160405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529195929392602091839160081c168188816044810103925af1908115611a4a578591611a11575b50156103d657611a0e929350611481565b90565b90506020813d8211611a42575b81611a2b602093836110ef565b81010312610f9d57611a3c90611111565b386119fd565b3d9150611a1e565b6040513d87823e3d90fd5b6003546040516306e7f2fd60e11b815290602090829060049082906001600160a01b03165afa9081156111e857600091611a90575b50515190565b906020823d8211611ad7575b81611aa9602093836110ef565b810103126102d5575060405190611abf826110d3565b60405190611acc826110d3565b518152815238611a8a565b3d9150611a9c565b602060018060a01b03600454169160646040518094819363556d6e9f60e01b8352600160048401526000602484015260448301525afa9081156111e857600091611b3b575b506064611b34611a0e938361144e565b0490611481565b906020823d8211611b65575b81611b54602093836110ef565b810103126102d55750516064611b24565b3d9150611b47565b919063ffffffff6000931683526007602052604083205490602060018060a01b03600454169160646040518094819363556d6e9f60e01b83526001600484015289602484015260448301525afa908115611c4a578491611c19575b50818110611c155781611bda91611481565b69d3c21bcecceda100000090818102918183041490151715611c0157611a0e929350611461565b634e487b7160e01b84526011600452602484fd5b5050565b90506020813d8211611c42575b81611c33602093836110ef565b810103126103d6575138611bc8565b3d9150611c26565b6040513d86823e3d90fd5b6005549060009163ffffffff60018060a01b03809216921683526020906006825260409283852054813b156105c75785916024839287519485938492631c4b774b60e01b845260048401525af18015611e1957611e06575b5080600254168351916370a0823160e01b83523060048401528383602481855afa928315611dfc578693611dcd575b50602485826003541681519283809263b6c54a5d60e01b82528b60048301525afa908115611dc3579185949291611d4a9694928991611da6575b50511687875180978195829463a9059cbb60e01b84526004840160209093929193604081019460018060a01b031681520152565b03925af1928315611d9d57508392611d67575b5050156102d55750565b90809250813d8311611d96575b611d7e81836110ef565b810103126100d057611d8f90611111565b3880611d5d565b503d611d74565b513d85823e3d90fd5b611dbd9150883d8a116103365761032781836110ef565b38611d16565b86513d89823e3d90fd5b9092508381813d8311611df5575b611de581836110ef565b81010312610bea57519138611cdc565b503d611ddb565b85513d88823e3d90fd5b611e1290949194611071565b9238611cad565b84513d87823e3d90fd5b6003546040805163b6c54a5d60e01b81526000600482015291829060249082906001600160a01b03165afa80156111e85769d3c21bcecceda10000009361271093611e8693600093611e8b575b50602091611e7d9161144e565b9101519061144e565b040490565b611e7d91935091611eab60209360403d81116103365761032781836110ef565b93915091611e70565b90929160049060018060a01b0382541690604051809263556d6e9f60e01b825260018583015260009081602484015288604484015282606460209687935afa91821561204d57819261201e575b508115611fe25769d3c21bcecceda1000000918281029081048303611fcf5788611f2a91611461565b92828102928184041490151715611fbc575090611f4691611461565b948511611f6f575050611f6b9083611f65611f5f611a55565b82611adf565b9161205a565b9190565b60405162461bcd60e51b815291820152602160248201527f43616e6e6f742072656465656d206d6f7265207468616e20617661696c61626c6044820152606560f81b606482015260849150fd5b634e487b7160e01b815260118552602490fd5b634e487b7160e01b825260118652602482fd5b60405162461bcd60e51b81528086018590526015602482015274496e76616c69642065786368616e6765207261746560581b6044820152606490fd5b9091508381813d8311612046575b61203681836110ef565b810103126100d057519038611f01565b503d61202c565b50604051903d90823e3d90fd5b916005549060009063ffffffff60018060a01b03809416951682526020926006845260409586842054813b15610f9d578491604483928a519485938492639e2c8a5b60e01b845260048401528b60248401525af180156121b4576121be575b5060015460048054885163095ea7b360e01b81529084166001600160a01b03169181019190915260248101879052908590829084168187816044810103925af180156121b4579085939291612179575b5060849060045416958488519788948593630b68372160e31b855260016004860152836024860152604485015260648401525af193841561174257509261214f57505090565b90809250813d8311612172575b61216681836110ef565b81010312610bea575190565b503d61215c565b90919281813d83116121ad575b61219081836110ef565b810103126103d6578492916121a6608492611111565b5090612109565b503d612186565b87513d86823e3d90fd5b6121ca90939193611071565b91386120b956fea264697066735822122064b5f43676e49ec021781e4e311f5b291c3c34045508328d424ade1a014d06f164736f6c63430008120033";

type GoldfinchVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldfinchVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldfinchVault__factory extends ContractFactory {
  constructor(...args: GoldfinchVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GoldfinchVault> {
    return super.deploy(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    ) as Promise<GoldfinchVault>;
  }
  override getDeployTransaction(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    );
  }
  override attach(address: string): GoldfinchVault {
    return super.attach(address) as GoldfinchVault;
  }
  override connect(signer: Signer): GoldfinchVault__factory {
    return super.connect(signer) as GoldfinchVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldfinchVaultInterface {
    return new utils.Interface(_abi) as GoldfinchVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldfinchVault {
    return new Contract(address, _abi, signerOrProvider) as GoldfinchVault;
  }
}
