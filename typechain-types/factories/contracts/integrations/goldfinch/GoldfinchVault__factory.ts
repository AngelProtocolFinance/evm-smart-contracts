/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GoldfinchVault,
  GoldfinchVaultInterface,
} from "../../../../contracts/integrations/goldfinch/GoldfinchVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_vaultType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crvPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fidu",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gfi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [],
    name: "FIDU",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GFI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "principleByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "usdcP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fiduP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "tokenIdByAccountId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200012457601f6200238738819003918201601f19168301916001600160401b03831184841017620001295780849260e0946040528339810103126200012457805190600282101562000124576200005d602082016200013f565b916200006c604083016200013f565b6200007a606084016200013f565b9262000089608082016200013f565b92620000a660c06200009e60a085016200013f565b93016200013f565b9360ff6000549160018060a01b0380988180988160018060a01b03199d168d6003541617600355168b600554161760055516896004541617600455610100600160a81b039060081b1692169060018060a81b031916171760005516836001541617600155169060025416176002556040516122329081620001558239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001245756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263034afe7b14610e9b57508163150b7a0214610e095781631c2a709b14610dcb57816320dcd90b146108265781634dc237721461059257816375baf37f1461056957816388bb447b146103c657816389a302711461039d5781639fdafa6d14610375578163c2ec3be6146100d4575063e52022691461009e57600080fd5b346100d05760203660031901126100d0578060209263ffffffff6100c0610ec0565b1681526006845220549051908152f35b5080fd5b905082602092836003193601126100d0576100ed610ec0565b916100fe6100f96110ca565b61125a565b63ffffffff8316938482526006865261011b8383205415156112a5565b6001600160a01b0394856005541681845260068852848420549085519163eb02c30160e01b9081845285840152610180928381602481865afa90811561036b5784929161017291899161034e575b505115156112a5565b84875260068b5260248888205491895194859384928352898301525afa9182156103175790849392918692610321575b505060a08860035416875195868092635c77d24760e11b82525afa9384156103175790899493929186946102e3575b50610206906101df89611c09565b6101ea81518a611b20565b986101fe82516101f86119f1565b90611a91565b915190612065565b96806102c4575b5090848798610268979894938252600786528189812081600182015555606081835460081c16940151169188519788958694859363095ea7b360e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af180156102b85761027f575b505051908152f35b8482813d83116102b1575b6102948183610fd7565b810103126102ae57506102a690610ff9565b508380610277565b80fd5b503d61028a565b508251903d90823e3d90fd5b6102d7610268979887928695949661193a565b9796509290919261020d565b6102069194506103099060a03d8111610310575b6103018183610fd7565b81019061104e565b93906101d1565b503d6102f7565b86513d87823e3d90fd5b6103409250803d10610347575b6103388183610fd7565b8101906112f0565b89806101a2565b503d61032e565b6103659150843d8611610347576103388183610fd7565b8d610169565b88513d89823e3d90fd5b5050346100d057816003193601126100d0576020906001600160a01b03600154169051908152f35b5050346100d057816003193601126100d0576001600160a01b036020925460081c169051908152f35b905034610565576020908160031936011261056157803567ffffffffffffffff9283821161055d573660238301121561055d578183013593841161055d57602494600592368787861b830101116105595784936104246100f96110ca565b6001600160a01b039160a08360035416855197888092635c77d24760e11b82525afa95861561054f578a9661052f575b50895b888110610462578a80f35b8981841b830101358b63ffffffff82168083036100d057808d9183526006808b526104918a85205415156112a5565b888854169184528a5288832054908c8a51938493849263eb02c30160e01b84528301526101809384935afa92831561052457926104e494926104df928d9592610507575b50505115156112a5565b6113f5565b60001981146104f557600101610457565b898b60118a634e487b7160e01b835252fd5b61051d9250803d10610347576103388183610fd7565b38806104d5565b8951903d90823e3d90fd5b61054891965060a03d8111610310576103018183610fd7565b9438610454565b84513d8c823e3d90fd5b8780fd5b8580fd5b8380fd5b8280fd5b5050346100d057816003193601126100d05760ff602092541690519061058e81610f0a565b8152f35b90508261059e36610ed3565b94919290936105ae6100f96110ca565b6105ca6001600160a01b03958680855460081c16911614610f2a565b63ffffffff841694858352602095600687526105ea8585205415156112a5565b81600554169781855260068852858520549686519963eb02c30160e01b98898c52868c015261018098898c602481855afa9b8c156107d55788999a9b9c61063b91899a9161080957505115156112a5565b60a086600354168b51998a8092635c77d24760e11b82525afa9788156107ff57908b918a996107df575b50858a5260068d5260248b8b2054918c51948593849283528b8301525afa998a156107d557889a6107ae575b505090816106a16106b493611c09565b6106ac8a5182611b20565b995190611e9b565b919080988061079a575b505069d3c21bcecceda100000080830283810482148415171561078757938796938388936107176107068f9a97998f9a8f6102689f8e600193600792525289200154906113c8565b83875260078b528d872054906113b5565b04918185526007895261073160018d8720019182546113e8565b90558352600787526107478a84209182546113e8565b9055606081835460081c16940151169188519788958694859363095ea7b360e01b85528401602090939291936001600160a01b0360408201951681520152565b602488601188634e487b7160e01b835252fd5b6107a69299508661193a565b9689806106be565b6106b493929a5090816107cc92903d10610347576103388183610fd7565b9890918b610691565b89513d8a823e3d90fd5b6107f891995060a03d8111610310576103018183610fd7565b978d610665565b8a513d8b823e3d90fd5b61082091508d803d10610347576103388183610fd7565b8e610169565b905061083136610ed3565b9291939061083d6110ca565b8015610d20575b15610cdd57855460081c6001600160a01b03908116916108679082168314610f2a565b61086f6119f1565b9080855416968885519463556d6e9f60e01b86528188870152856001958660248301528a60448301528b82606460209a8b935afa918215610cd357918a9b9c91899a9b99938692610c9a575b50906108ca86949392826113b5565b606490046108d7916113e8565b938d8c5194858094819363095ea7b360e01b9e8f845283019161090f92602090939291936001600160a01b0360408201951681520152565b03925af18015610c905788928c97969594928c92610c4f575b50908260849287835416908d519a8b968795630b68372160e31b87528601528a6024860152604485015260648401525af1938415610ad8578a94610c1c575b5063ffffffff1693848a5260068652868a20548015600014610ae25750825460055488519283526001600160a01b039084161689830190815260208101869052879183918290036040019082908e9087165af18015610ad8579184918793610a98575b5060449060055416988b89519a8b9485937f10087fb10000000000000000000000000000000000000000000000000000000085528401528160248401525af1958615610a8e578896610a56575b50610a4b906006959697848a5260078652610a36888b20918254611006565b90558389526007855286892001918254611006565b905585525282205580f35b909495508381813d8311610a87575b610a6f8183610fd7565b81010312610a8257519493610a4b610a17565b600080fd5b503d610a65565b85513d8a823e3d90fd5b8381949293503d8311610ad1575b610ab08183610fd7565b81010312610acd5760448491610ac68894610ff9565b50906109ca565b8980fd5b503d610aa6565b87513d8c823e3d90fd5b91908685610b289284879b9a99989c979e9d9e5416908d8660055416918c519687958694859384528c8401602090939291936001600160a01b0360408201951681520152565b03925af18015610ad857610be8575b506005541691823b15610be457906044899283885195869485937fa9f4939d0000000000000000000000000000000000000000000000000000000085528401528b60248401525af18015610bda57610bbe575b5090818697600793610bb9979852838352610ba9858a20918254611006565b9055875252842001918254611006565b905580f35b90610bb99596610bd060079493610f75565b9695509091610b8a565b84513d89823e3d90fd5b8880fd5b8581813d8311610c15575b610bfd8183610fd7565b81010312610acd57610c0e90610ff9565b5038610b37565b503d610bf3565b9093508581813d8311610c48575b610c348183610fd7565b81010312610acd57519263ffffffff610967565b503d610c2a565b975092905086813d8311610c89575b610c688183610fd7565b810103126102ae5760848a828a94610c808f9a610ff9565b50919250610928565b503d610c5e565b89513d85823e3d90fd5b92995092905081813d8311610ccc575b610cb48183610fd7565b8101031261056157518a9789929091906108ca6108bb565b503d610caa565b89513d86823e3d90fd5b606483602084519162461bcd60e51b8352820152600c60248201527f4e6f7420617070726f76656400000000000000000000000000000000000000006044820152fd5b506001600160a01b03806003541660a07fffffffff000000000000000000000000000000000000000000000000000000006024610d5b611132565b875194859384926342b8c5e960e01b8452168a8301525afa908115610dc15760209182918a91610d93575b5001510151163314610844565b610db4915060a03d8111610dba575b610dac8183610fd7565b8101906111fe565b38610d86565b503d610da2565b84513d8a823e3d90fd5b5050346100d05760203660031901126100d057809163ffffffff610ded610ec0565b1681526007602052206001815491015482519182526020820152f35b905034610565576080366003190112610565576001600160a01b038135818116036105615760243590811603610565576064359067ffffffffffffffff90818311610e975736602384011215610e975782013590811161056157369101602401116100d057602090517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b8480fd5b8490346100d057816003193601126100d0576020906001600160a01b03600254168152f35b6004359063ffffffff82168203610a8257565b6060906003190112610a825760043563ffffffff81168103610a8257906024356001600160a01b0381168103610a82579060443590565b60021115610f1457565b634e487b7160e01b600052602160045260246000fd5b15610f3157565b606460405162461bcd60e51b815260206004820152601260248201527f4f6e6c79205553444320616363657074656400000000000000000000000000006044820152fd5b67ffffffffffffffff8111610f8957604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117610f8957604052565b6020810190811067ffffffffffffffff821117610f8957604052565b90601f8019910116810190811067ffffffffffffffff821117610f8957604052565b51908115158203610a8257565b9190820180921161101357565b634e487b7160e01b600052601160045260246000fd5b519063ffffffff82168203610a8257565b51906001600160a01b0382168203610a8257565b908160a0910312610a82576040519060a0820182811067ffffffffffffffff821117610f89576110c29160809160405261108781611029565b845261109560208201611029565b60208501526110a66040820161103a565b60408501526110b76060820161103a565b60608501520161103a565b608082015290565b6001600160a01b03600460a0826003541660405192838092635c77d24760e11b82525afa801561112657606091600091611108575b50015116331490565b611120915060a03d8111610310576103018183610fd7565b386110ff565b6040513d6000823e3d90fd5b6040516020810160208152600960408301527f476f6c6466696e63680000000000000000000000000000000000000000000000606083015260608252608082019180831067ffffffffffffffff841117610f89577fffffffff00000000000000000000000000000000000000000000000000000000926040525190201690565b9190826040910312610a82576040516040810181811067ffffffffffffffff821117610f895760405280928051906002821015610a825760206111f991819385520161103a565b910152565b60a081830312610a8257604051916060830183811067ffffffffffffffff821117610f895760405281516004811015610a825761125292606091855261124783602083016111b2565b6020860152016111b2565b604082015290565b1561126157565b606460405162461bcd60e51b815260206004820152601360248201527f4e6f7420617070726f76656420526f75746572000000000000000000000000006044820152fd5b156112ac57565b606460405162461bcd60e51b815260206004820152600b60248201527f4e6f20706f736974696f6e0000000000000000000000000000000000000000006044820152fd5b809103906101808212610a8257604080519260e084019084821067ffffffffffffffff831117610f895760c091835283518552601f190112610a8257805161133781610f9f565b602083015181528183015160208201526060830151828201526080830151606082015260a0830151608082015260c083015160a0820152602084015260e0820151908301526101008101516060830152610120810151906002821015610a825761016091608084015261014081015160a0840152015160c082015290565b8181029291811591840414171561101357565b81156113d2570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161101357565b6001600160a01b0380600554169063ffffffff918284169160009383855260206006815260409687872054948851809163eb02c30160e01b8252600497888301528160246101809485935afa9182156107ff57899261191d575b505061145a82611c09565b611465815183611b20565b938415611910578789526007845261149669d3c21bcecceda100000061148e878d8d20546113b5565b048096611e09565b94600160ff8b54166114a781610f0a565b146118445790879160c088600354168d51948580927fedbcc5990000000000000000000000000000000000000000000000000000000082525afa92831561183a579386938993898c98948f988994611784575b5090611505916113e8565b818784015116611514916113b5565b9160a0015116611523916113c8565b9051906115309089611006565b9061153a92611e9b565b8a859e929e52600784528c852060010190815490611557916113e8565b9055818c8554920151168c519485938480938b63a9059cbb60e01b9a8b845283019161159892602090939291936001600160a01b0360408201951681520152565b039360081c165af19081156107d557889161174f575b50156116f857836003541660a07fffffffff0000000000000000000000000000000000000000000000000000000060246115e6611132565b8c5194859384926342b8c5e960e01b8452168b8301525afa9081156107d5578a8a9285928b91611731575b50888b858a825460081c1693019661165b6116338b8d898c51015116976113e8565b97519788968795869485528401602090939291936001600160a01b0360408201951681520152565b03925af19081156107d55788916116fc575b50156116f85761168b929184915101511692865460081c16976113e8565b813b15610e975791846064928195948851998a9687957f20dcd90b000000000000000000000000000000000000000000000000000000008752860152602485015260448401525af19182156116ee5750506116e35750565b6116ec90610f75565b565b51903d90823e3d90fd5b8680fd5b90508281813d831161172a575b6117138183610fd7565b810103126105595761172490610ff9565b3861166d565b503d611709565b611749915060a03d8111610dba57610dac8183610fd7565b38611611565b90508281813d831161177d575b6117668183610fd7565b810103126105595761177790610ff9565b386115ae565b503d61175c565b959950965050935050935060c0813d8211611832575b816117a760c09383610fd7565b8101031261182e57938a93869389936115058f806118218f9b60a0908f9451936117d085610f9f565b6117d982610ff9565b85526117e68d8301611029565b8d8601526117f5818301611029565b9085015261180560608201610ff9565b606085015261181660808201611029565b608085015201611029565b60a08201529390916114fa565b8a80fd5b3d915061179a565b8c513d8d823e3d90fd5b50509461185e83979694899b9361189e9795965190611e9b565b9a90938a81835460081c1694015116918a519687958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af19081156119065784916118d1575b50156105655782526007905220600101805490916118cd916113e8565b9055565b90508281813d83116118ff575b6118e88183610fd7565b81010312610561576118f990610ff9565b386118b0565b503d6118de565b85513d86823e3d90fd5b5050505050505050505050565b6119339250803d10610347576103388183610fd7565b388061144f565b9291908161194791611e09565b60008054604095860151955163a9059cbb60e01b81526001600160a01b039687166004820152602481018490529195929392602091839160449183918a9160081c165af19081156119e65785916119ad575b5015610561576119aa9293506113e8565b90565b90506020813d82116119de575b816119c760209383610fd7565b81010312610e97576119d890610ff9565b38611999565b3d91506119ba565b6040513d87823e3d90fd5b600460206001600160a01b0360035416604051928380927f0dcfe5fa0000000000000000000000000000000000000000000000000000000082525afa90811561112657600091611a42575b50515190565b906020823d8211611a89575b81611a5b60209383610fd7565b810103126102ae575060405190611a7182610fbb565b60405190611a7e82610fbb565b518152815238611a3c565b3d9150611a4e565b60206001600160a01b03600454169160646040518094819363556d6e9f60e01b8352600160048401526000602484015260448301525afa90811561112657600091611aee575b506064611ae76119aa93836113b5565b04906113e8565b906020823d8211611b18575b81611b0760209383610fd7565b810103126102ae5750516064611ad7565b3d9150611afa565b919063ffffffff600093168352600760205260408320549060206001600160a01b03600454169160646040518094819363556d6e9f60e01b83526001600484015289602484015260448301525afa908115611bfe578491611bcd575b50818110611bc95781611b8e916113e8565b69d3c21bcecceda100000090818102918183041490151715611bb5576119aa9293506113c8565b602484634e487b7160e01b81526011600452fd5b5050565b90506020813d8211611bf6575b81611be760209383610fd7565b81010312610561575138611b7c565b3d9150611bda565b6040513d86823e3d90fd5b6005549060009163ffffffff6001600160a01b03809216921683526020906006825260409283852054813b1561055d57859160248392875194859384927f1c4b774b00000000000000000000000000000000000000000000000000000000845260048401525af18015611dff57611dec575b5080600254168351917f70a082310000000000000000000000000000000000000000000000000000000083523060048401528383602481855afa928315611de2578693611db3575b50600460a08260035416875192838092635c77d24760e11b82525afa908115611da957918686959392611d2f9795938a91611d8b575b5001511687875180978195829463a9059cbb60e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af1928315611d8257508392611d4c575b5050156102ae5750565b90809250813d8311611d7b575b611d638183610fd7565b810103126100d057611d7490610ff9565b3880611d42565b503d611d59565b513d85823e3d90fd5b611da3915060a03d8111610310576103018183610fd7565b38611cf9565b86513d89823e3d90fd5b9092508381813d8311611ddb575b611dcb8183610fd7565b81010312610a8257519138611cc3565b503d611dc1565b85513d88823e3d90fd5b611df890949194610f75565b9238611c7b565b84513d87823e3d90fd5b60049060a06001600160a01b036003541660405193848092635c77d24760e11b82525afa80156111265769d3c21bcecceda100000093611e7593600092611e79575b50611e5691926113b5565b6020611e6b63ffffffff9283855116906113b5565b92015116906113c8565b0490565b611e569250611e959060a03d8111610310576103018183610fd7565b91611e4b565b9092916004906001600160a01b0382541690604051809263556d6e9f60e01b825260018583015260009081602484015288604484015282606460209687935afa918215612058578192612029575b508115611fe65769d3c21bcecceda1000000918281029081048303611fd35788611f12916113c8565b92828102928184041490151715611fc0575090611f2e916113c8565b948511611f57575050611f539083611f4d611f476119f1565b82611a91565b91612065565b9190565b608492506040519162461bcd60e51b8352820152602160248201527f43616e6e6f742072656465656d206d6f7265207468616e20617661696c61626c60448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b80601186634e487b7160e01b6024945252fd5b602482601188634e487b7160e01b835252fd5b606485856040519162461bcd60e51b8352820152601560248201527f496e76616c69642065786368616e6765207261746500000000000000000000006044820152fd5b9091508381813d8311612051575b6120418183610fd7565b810103126100d057519038611ee9565b503d612037565b50604051903d90823e3d90fd5b916005549060009063ffffffff6001600160a01b03809416951682526020926006845260409586842054813b15610e97578491604483928a5194859384927f9e2c8a5b00000000000000000000000000000000000000000000000000000000845260048401528b60248401525af180156121df576121e9575b50612120848683600154168460045416878b5180968195829463095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af180156121df5790859392916121a4575b5060849060045416958488519788948593630b68372160e31b855260016004860152836024860152604485015260648401525af19384156116ee57509261217a57505090565b90809250813d831161219d575b6121918183610fd7565b81010312610a82575190565b503d612187565b90919281813d83116121d8575b6121bb8183610fd7565b81010312610561578492916121d1608492610ff9565b5090612134565b503d6121b1565b87513d86823e3d90fd5b6121f590939193610f75565b91386120de56fea2646970667358221220d715c5a84527f78d893844ebd07af236a83d477a2a697801282a603da703788264736f6c63430008120033";

type GoldfinchVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldfinchVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldfinchVault__factory extends ContractFactory {
  constructor(...args: GoldfinchVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GoldfinchVault> {
    return super.deploy(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    ) as Promise<GoldfinchVault>;
  }
  override getDeployTransaction(
    _vaultType: PromiseOrValue<BigNumberish>,
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _fidu: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vaultType,
      _registrar,
      _stakingPool,
      _crvPool,
      _usdc,
      _fidu,
      _gfi,
      overrides || {}
    );
  }
  override attach(address: string): GoldfinchVault {
    return super.attach(address) as GoldfinchVault;
  }
  override connect(signer: Signer): GoldfinchVault__factory {
    return super.connect(signer) as GoldfinchVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldfinchVaultInterface {
    return new utils.Interface(_abi) as GoldfinchVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldfinchVault {
    return new Contract(address, _abi, signerOrProvider) as GoldfinchVault;
  }
}
