/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GoldfinchLiquidVault,
  GoldfinchLiquidVaultInterface,
} from "../../../../contracts/integrations/goldfinch/GoldfinchLiquidVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_crvPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouterAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gfi",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth9",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [],
    name: "FIDU",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GFI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "reinvestToLocked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
    ],
    name: "swapExactInputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ed738038062000ed783398181016040528101906200003791906200027c565b83838383836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505086600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050506200032f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002448262000217565b9050919050565b620002568162000237565b81146200026257600080fd5b50565b60008151905062000276816200024b565b92915050565b600080600080600080600060e0888a0312156200029e576200029d62000212565b5b6000620002ae8a828b0162000265565b9750506020620002c18a828b0162000265565b9650506040620002d48a828b0162000265565b9550506060620002e78a828b0162000265565b9450506080620002fa8a828b0162000265565b93505060a06200030d8a828b0162000265565b92505060c0620003208a828b0162000265565b91505092959891949750929550565b610b98806200033f6000396000f3fe6080604052600436106100a75760003560e01c80634dc23772116100645780634dc23772146101c357806375baf37f146101df57806389a302711461020a5780639fdafa6d14610235578063be31a1bc14610260578063fb62832514610289576100a7565b8063034afe7b146100ac57806304bd895b146100d7578063089fe6aa14610114578063150b7a021461013f57806320dcd90b1461017c5780634aa4a4fc14610198575b600080fd5b3480156100b857600080fd5b506100c16102b2565b6040516100ce9190610539565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610594565b6102d8565b60405161010b91906105e3565b60405180910390f35b34801561012057600080fd5b50610129610450565b604051610136919061061c565b60405180910390f35b34801561014b57600080fd5b50610166600480360381019061016191906106c8565b610456565b604051610173919061078b565b60405180910390f35b610196600480360381019061019191906107e2565b61046b565b005b3480156101a457600080fd5b506101ad610470565b6040516101ba9190610539565b60405180910390f35b6101dd60048036038101906101d891906107e2565b610496565b005b3480156101eb57600080fd5b506101f461049b565b60405161020191906108ac565b60405180910390f35b34801561021657600080fd5b5061021f6104a4565b60405161022c9190610539565b60405180910390f35b34801561024157600080fd5b5061024a6104ca565b6040516102579190610539565b60405180910390f35b34801561026c57600080fd5b50610287600480360381019061028291906108c7565b6104f0565b005b34801561029557600080fd5b506102b060048036038101906102ab91906107e2565b6104f3565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806040518060a00160405280600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bb8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bb8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051602001610369959493929190610972565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d59826040518263ffffffff1660e01b81526004016104049190610afe565b6020604051808303816000875af1158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190610b35565b91505092915050565b610bb881565b600063150b7a0260e01b905095945050505050565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b505050565b60006001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610523826104f8565b9050919050565b61053381610518565b82525050565b600060208201905061054e600083018461052a565b92915050565b600080fd5b600080fd5b6000819050919050565b6105718161055e565b811461057c57600080fd5b50565b60008135905061058e81610568565b92915050565b600080604083850312156105ab576105aa610554565b5b60006105b98582860161057f565b92505060206105ca8582860161057f565b9150509250929050565b6105dd8161055e565b82525050565b60006020820190506105f860008301846105d4565b92915050565b600062ffffff82169050919050565b610616816105fe565b82525050565b6000602082019050610631600083018461060d565b92915050565b61064081610518565b811461064b57600080fd5b50565b60008135905061065d81610637565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261068857610687610663565b5b8235905067ffffffffffffffff8111156106a5576106a4610668565b5b6020830191508360018202830111156106c1576106c061066d565b5b9250929050565b6000806000806000608086880312156106e4576106e3610554565b5b60006106f28882890161064e565b95505060206107038882890161064e565b94505060406107148882890161057f565b935050606086013567ffffffffffffffff81111561073557610734610559565b5b61074188828901610672565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61078581610750565b82525050565b60006020820190506107a0600083018461077c565b92915050565b600063ffffffff82169050919050565b6107bf816107a6565b81146107ca57600080fd5b50565b6000813590506107dc816107b6565b92915050565b6000806000606084860312156107fb576107fa610554565b5b6000610809868287016107cd565b935050602061081a8682870161064e565b925050604061082b8682870161057f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061087557610874610835565b5b50565b600081905061088682610864565b919050565b600061089682610878565b9050919050565b6108a68161088b565b82525050565b60006020820190506108c1600083018461089d565b92915050565b6000602082840312156108dd576108dc610554565b5b60006108eb848285016107cd565b91505092915050565b60008160601b9050919050565b600061090c826108f4565b9050919050565b600061091e82610901565b9050919050565b61093661093182610518565b610913565b82525050565b60008160e81b9050919050565b60006109548261093c565b9050919050565b61096c610967826105fe565b610949565b82525050565b600061097e8288610925565b60148201915061098e828761095b565b60038201915061099e8286610925565b6014820191506109ae828561095b565b6003820191506109be8284610925565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a0b5780820151818401526020810190506109f0565b83811115610a1a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610a3c826109d1565b610a4681856109dc565b9350610a568185602086016109ed565b610a5f81610a20565b840191505092915050565b610a7381610518565b82525050565b610a828161055e565b82525050565b600060a0830160008301518482036000860152610aa58282610a31565b9150506020830151610aba6020860182610a6a565b506040830151610acd6040860182610a79565b506060830151610ae06060860182610a79565b506080830151610af36080860182610a79565b508091505092915050565b60006020820190508181036000830152610b188184610a88565b905092915050565b600081519050610b2f81610568565b92915050565b600060208284031215610b4b57610b4a610554565b5b6000610b5984828501610b20565b9150509291505056fea2646970667358221220e359f3654b8d40d87a0c009eb89ac02edec49febaa9db2ac6f30412e075cd4f164736f6c634300080a0033";

type GoldfinchLiquidVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldfinchLiquidVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldfinchLiquidVault__factory extends ContractFactory {
  constructor(...args: GoldfinchLiquidVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _swapRouterAddr: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GoldfinchLiquidVault> {
    return super.deploy(
      _registrar,
      _stakingPool,
      _crvPool,
      _swapRouterAddr,
      _gfi,
      _weth9,
      _usdc,
      overrides || {}
    ) as Promise<GoldfinchLiquidVault>;
  }
  override getDeployTransaction(
    _registrar: PromiseOrValue<string>,
    _stakingPool: PromiseOrValue<string>,
    _crvPool: PromiseOrValue<string>,
    _swapRouterAddr: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _registrar,
      _stakingPool,
      _crvPool,
      _swapRouterAddr,
      _gfi,
      _weth9,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): GoldfinchLiquidVault {
    return super.attach(address) as GoldfinchLiquidVault;
  }
  override connect(signer: Signer): GoldfinchLiquidVault__factory {
    return super.connect(signer) as GoldfinchLiquidVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldfinchLiquidVaultInterface {
    return new utils.Interface(_abi) as GoldfinchLiquidVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldfinchLiquidVault {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoldfinchLiquidVault;
  }
}
