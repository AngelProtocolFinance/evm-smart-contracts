/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GFITrader,
  GFITraderInterface,
} from "../../../../contracts/integrations/goldfinch/GFITrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapRouterAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gfi",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth9",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GFI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
    ],
    name: "swapExactInputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103ee3803806103ee83398101604081905261002f9161009e565b600080546001600160a01b039586166001600160a01b03199182161790915560018054948616948216949094179093556002805492851692841692909217909155600380549190931691161790556100f2565b80516001600160a01b038116811461009957600080fd5b919050565b600080600080608085870312156100b457600080fd5b6100bd85610082565b93506100cb60208601610082565b92506100d960408601610082565b91506100e760608601610082565b905092959194509250565b6102ed806101016000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063034afe7b1461005c57806304bd895b1461008c578063089fe6aa146100ad5780634aa4a4fc146100ca57806389a30271146100dd575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a3660046101e9565b6100f0565b604051908152602001610083565b6100b6610bb881565b60405162ffffff9091168152602001610083565b60025461006f906001600160a01b031681565b60035461006f906001600160a01b031681565b6040805160a0810182526001546002546003546bffffffffffffffffffffffff19606093841b811660c086015261017760eb1b60d4860181905292841b811660d786015260eb850192909252821b1660ee830152825180830360e2018152610102830184528252336020830152428284015281018490526080810183905260008054925163c04b8d5960e01b815290926001600160a01b03169063c04b8d599061019e90849060040161020b565b6020604051808303816000875af11580156101bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e1919061029e565b949350505050565b600080604083850312156101fc57600080fd5b50508035926020909101359150565b60006020808352835160a08285015280518060c086015260005b818110156102415782810184015186820160e001528301610225565b8181111561025357600060e083880101525b50918501516001600160a01b0381166040860152916040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b6000602082840312156102b057600080fd5b505191905056fea264697066735822122070015842ee793a7ac38f50819b5b74155e367bb67e56daf96976e9aa3a08fb4a64736f6c634300080f0033";

type GFITraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GFITraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GFITrader__factory extends ContractFactory {
  constructor(...args: GFITraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouterAddr: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GFITrader> {
    return super.deploy(
      _swapRouterAddr,
      _gfi,
      _weth9,
      _usdc,
      overrides || {}
    ) as Promise<GFITrader>;
  }
  override getDeployTransaction(
    _swapRouterAddr: PromiseOrValue<string>,
    _gfi: PromiseOrValue<string>,
    _weth9: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swapRouterAddr,
      _gfi,
      _weth9,
      _usdc,
      overrides || {}
    );
  }
  override attach(address: string): GFITrader {
    return super.attach(address) as GFITrader;
  }
  override connect(signer: Signer): GFITrader__factory {
    return super.connect(signer) as GFITrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GFITraderInterface {
    return new utils.Interface(_abi) as GFITraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GFITrader {
    return new Contract(address, _abi, signerOrProvider) as GFITrader;
  }
}
