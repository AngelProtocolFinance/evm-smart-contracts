/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapUtils,
  UniswapUtilsInterface,
} from "../../../../contracts/mock/uniswapUtils.sol/UniswapUtils";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "uniswapFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "amountA",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct UniswapUtils.createUniswapPoolArgs",
        name: "details",
        type: "tuple",
      },
    ],
    name: "createPoolAndMintPosition",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcToken",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "uniswapFee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "amountA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountB",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct UniswapUtils.createUniswapPoolERC20Args",
        name: "details",
        type: "tuple",
      },
    ],
    name: "createPoolAndMintPositionErC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461003c57600080546001600160a01b03191673c36442b4a4522e871399cd717abdd847ab11fe8817905561192890816100428239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630ff1c332146100475780633e9c9fa5146100425763b44a27221461003d57600080fd5b61025f565b6101e1565b346100de57610100806003193601126100de57610065610180604052565b61006d610169565b608052610078610178565b60a052610083610185565b60c05260643560e0526084359052610099610197565b610120526100a56101b1565b610140526100b16101c1565b610160526100da6100c06107b2565b6040516001600160a01b0390911681529081906020820190565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761011557604052565b6100e3565b6040810190811067ffffffffffffffff82111761011557604052565b90601f8019910116810190811067ffffffffffffffff82111761011557604052565b6001600160a01b038116036100de57565b6004359061017682610158565b565b6024359061017682610158565b6044359062ffffff821682036100de57565b60a4359061017682610158565b6084359061017682610158565b60c435908160020b82036100de57565b60e435908160020b82036100de57565b60a435908160020b82036100de57565b60e03660031901126100de576100da6100c06040516101ff816100f9565b60043561020b81610158565b815260243561021981610158565b6020820152610226610185565b6040820152606435606082015261023b6101a4565b60808201526102486101d1565b60a08201526102556101b1565b60c082015261119e565b346100de5760003660031901126100de5760206001600160a01b0360005416604051908152f35b908160209103126100de575190565b6040513d6000823e3d90fd5b156102a857565b608460405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e742070726f6a656374546f6b656e2062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b1561031957565b606460405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742075736463546f6b656e2062616c616e636500006044820152fd5b908160209103126100de575180151581036100de5790565b1561037c57565b606460405162461bcd60e51b815260206004820152601360248201527f7472616e7366657246726f6d206661696c6564000000000000000000000000006044820152fd5b156103c757565b606460405162461bcd60e51b815260206004820152600e60248201527f617070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b67ffffffffffffffff81116101155760051b60200190565b604090815191606080840184811067ffffffffffffffff821117610115578252600284528360005b8381106104585750505050565b808360208093850101520161044b565b8051156104755760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156104755760400190565b634e487b7160e01b600052601160045260246000fd5b906107d082018092116104c057565b61049b565b67ffffffffffffffff811161011557601f01601f191660200190565b60005b8381106104f45750506000910152565b81810151838201526020016104e4565b60209081818403126100de57805167ffffffffffffffff918282116100de57019083601f830112156100de57815161053b8161040b565b9460409261054b84519788610136565b828752858088019360051b860101948286116100de57868101935b86851061057857505050505050505090565b84518381116100de5782019084603f830112156100de57888201519061059d826104c5565b6105a989519182610136565b828152868984860101116100de576105ca8b949385948b86850191016104e1565b815201940193610566565b906020916105ee815180928185528580860191016104e1565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061062e5750505050505090565b909192939495848061064c600193603f198682030187528a516105d5565b980193019301919493929061061e565b908160209103126100de575161067181610158565b90565b91908260809103126100de5781519160208101516fffffffffffffffffffffffffffffffff811681036100de57916060604083015192015190565b919082039182116104c057565b604051906106c98261011a565b600b82527f526566756e6420616d74300000000000000000000000000000000000000000006020830152565b156106fc57565b606460405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b6040519061074d8261011a565b600b82527f526566756e6420616d74310000000000000000000000000000000000000000006020830152565b604051906107868261011a565b600e82527f6372656174656420706f6f6c3a200000000000000000000000000000000000006020830152565b60806107d76107cb6107cb83516001600160a01b031690565b6001600160a01b031690565b604080516370a0823160e01b80825233600480840191909152602094919390918590849060249082905afa928315610de457600093611001575b5061082160e093845111156102a1565b60a0918561083c6107cb6107cb86516001600160a01b031690565b8351968752338388019081528791908290819060200103915afa948515610de457600095610fd2575b506108766101009586511115610312565b61088d6107cb6107cb89516001600160a01b031690565b84518784518093816000816108cf6323b872dd60e01b9788835230338c85016040919493929460608201956001600160a01b0380921683521660208201520152565b03925af1908115610de4576108f1899261093794600091610fbb575b50610375565b6109086107cb6107cb88516001600160a01b031690565b885186519283523386840190815230602082015260408101919091529193849283916000918391606090910190565b03925af18015610de45761095291600091610f9e5750610375565b600061096b6107cb6107cb8a516001600160a01b031690565b94876109b96109846107cb85546001600160a01b031690565b978351875195868094819363095ea7b360e01b9d8e84528b8401602090939291936001600160a01b0360408201951681520152565b03925af1918215610de457610a37926109da91600091610f87575b506103c0565b876109f26107cb6107cb88516001600160a01b031690565b610a076107cb6000546001600160a01b031690565b9089519160008a89519788958694859384528b8401602090939291936001600160a01b0360408201951681520152565b03925af1988915610de4576000610c2387634418b22b60e11b610be08c859f8f90610a6a908d9b8991610f7057506103c0565b610bd4610aa1610a78610423565b96610a9b610a8d8c516001600160a01b031690565b91516001600160a01b031690565b90611020565b809d929195818c14610f68578d51915b8c14610f5f5751905b60c05162ffffff1696610ad6610120516001600160a01b031690565b85516309f56ab160e11b898201526001600160a01b038681166024830152838116604483015262ffffff9a909a16606482015298166084808a01919091528852601f1997610b2560a482610136565b610b2e8c610468565b52610b388b610468565b5060c05162ffffff166101405160020b90610b566101605160020b90565b92610b60426104b1565b97519c8d9a8b0152309660248b01959194909998979362ffffff610140989461016089019c6001600160a01b0398898092168b521660208a015216604088015260020b606087015260020b608086015260a085015260c0840152600160e08401526001610100840152166101208201520152565b03908101835282610136565b610be98261048b565b52610bf38161048b565b50610c086107cb84546001600160a01b031690565b9088519d8e80948193631592ca1b60e31b83528b83016105fa565b03925af1998a15610de45760009a610f2a575b50610c70610c61610c5b6107cb610c4c8e610468565b518d808251830101910161065c565b9b61048b565b518a8082518301019101610674565b9591509150600014610f24575b82518110610e06575b50505085518110610caa575b5050505050505061067181610ca5610779565b61188d565b86610d0795610cc66107cb6107cb88516001600160a01b031690565b610cdb6107cb6000546001600160a01b031690565b9160008751809a81958294835289830160206000919392936001600160a01b0360408201951681520152565b03925af1908115610de4576107cb6107cb610d3d610d5c93610d8d9a610d376000978e9c8991610de957506103c0565b516106af565b96610d4f88610d4a610740565b611831565b516001600160a01b031690565b925180968195829463a9059cbb60e01b845233908401602090939291936001600160a01b0360408201951681520152565b03925af1908115610de457610dab92600092610db7575b50506106f5565b38808080808080610c92565b610dd69250803d10610ddd575b610dce8183610136565b81019061035d565b3880610da4565b503d610dc4565b610295565b610e0091508d803d10610ddd57610dce8183610136565b386109d4565b818a610e226107cb6107cb610e6496516001600160a01b031690565b610e376107cb6000546001600160a01b031690565b908b60008b5180988195829483528d830160206000919392936001600160a01b0360408201951681520152565b03925af1918215610de4576107cb6107cb610e95610ea2938f9798610d37610ecc9860009b8c91610f0d57506103c0565b93610d4f85610d4a6106bc565b875163a9059cbb60e01b815233888201908152602081019390935294859391928492839160400190565b03925af18015610de457610ee891600091610ef0575b506106f5565b388080610c86565b610f079150893d8b11610ddd57610dce8183610136565b38610ee2565b610e0091508b3d8d11610ddd57610dce8183610136565b92610c7d565b610c61610c5b6107cb610f55610c7094610c4c9f3d8091833e610f4d8183610136565b810190610504565b9d50505050610c36565b508c5190610aba565b805191610ab1565b610e009150833d8511610ddd57610dce8183610136565b610e0091508a3d8c11610ddd57610dce8183610136565b610fb59150883d8a11610ddd57610dce8183610136565b386108eb565b610fb59150843d8611610ddd57610dce8183610136565b610ff3919550863d8811610ffa575b610feb8183610136565b810190610286565b9338610865565b503d610fe1565b611019919350853d8711610ffa57610feb8183610136565b9138610811565b9190916001600160a01b039182841683831681811461109d5710156110925760019193925b84161561104e57565b606460405162461bcd60e51b815260206004820152600f60248201527f6e6f2061646472657373207a65726f00000000000000000000000000000000006044820152fd5b909160009190611045565b606460405162461bcd60e51b815260206004820152600a60248201527f73616d6520746f6b656e000000000000000000000000000000000000000000006044820152fd5b156110e857565b606460405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e412062616c616e636500000000006044820152fd5b604051906111398261011a565b600682527f726566756e6400000000000000000000000000000000000000000000000000006020830152565b604051906111728261011a565b600c82527f706f6f6c206164647265737300000000000000000000000000000000000000006020830152565b6111b56107cb6107cb83516001600160a01b031690565b604080516370a0823160e01b81523360048083019190915260209491939192918590859060249082905afa938415610de4576000946117a2575b506112016060840194855111156110e1565b60008561125061121e6107cb6107cb88516001600160a01b031690565b875186516323b872dd60e01b815233878201908152306020820152604081019290925294859384928391606090910190565b03925af18015610de45761126b9160009161178b5750610375565b6112826107cb6107cb85516001600160a01b031690565b906000866112d261129d6107cb84546001600160a01b031690565b948851875194858094819363095ea7b360e01b9a8b84528a8401602090939291936001600160a01b0360408201951681520152565b03925af18015610de4576112ed9160009161164457506103c0565b85840160008761134c61130d6107cb6107cb86516001600160a01b031690565b6113216107cb85546001600160a01b031690565b88519485809481938b835234908b8401602090939291936001600160a01b0360408201951681520152565b03925af18015610de4576113679160009161177457506103c0565b61136f610423565b9585886113976113878a99516001600160a01b031690565b85516001600160a01b0316610a9b565b99909290918a1561176c57898651945b8c1561176557345b878301805162ffffff169660808a01516113cf906001600160a01b031690565b85516309f56ab160e11b898201526001600160a01b038881166024830152868116604483015262ffffff9a909a16606482015298166084808a01919091528852601f199761141e60a482610136565b61142782610468565b5261143190610468565b505162ffffff169660a08901516114489060020b90565b60c08a015160020b9061145a426104b1565b9551634418b22b60e11b988101989098526001600160a01b03968716602489015293909516604487015262ffffff979097166064860152600291820b608486015292900b60a484015260c483019490945260e4820152600161010482018190526101248201523061014482015261016481019290925261018490810182526114e29082610136565b6114eb8961048b565b526114f58861048b565b506000546001600160a01b03166001600160a01b0316865180809a631592ca1b60e31b825287820190611527916105fa565b0381345a94600095f1978815610de45760009861174a575b5061154c610c618961048b565b9991509150600014611744575b8251811061165b575b5050503485106115a0575b5050505050611590916115826107cb92610468565b51805181018201910161065c565b61067161159b611165565b6117c1565b918694939160006115c26107cb6107cb6116009b97516001600160a01b031690565b926115d76107cb83546001600160a01b031690565b9451998a95869485938452830160206000919392936001600160a01b0360408201951681520152565b03925af1928315610de45761163b6116336115829361162d6107cb976115909960009161164457506103c0565b346106af565b610d4a61112c565b9282943861156d565b610e009150883d8a11610ddd57610dce8183610136565b818a6116776107cb6107cb6116b996516001600160a01b031690565b61168c6107cb6000546001600160a01b031690565b908960008c5180988195829483528d830160206000919392936001600160a01b0360408201951681520152565b03925af1918215610de4576107cb6107cb6116ea6116f7938f9798610d376117219860009b8c91610f0d57506103c0565b93610d4f85610d4a61112c565b885163a9059cbb60e01b815233888201908152602081019390935294859391928492839160400190565b03925af18015610de45761173c91600091610ef057506106f5565b388080611562565b96611559565b61175e91983d8091833e610f4d8183610136565b963861153f565b87516113af565b8934946113a7565b610e009150893d8b11610ddd57610dce8183610136565b610fb59150873d8911610ddd57610dce8183610136565b6117ba919450853d8711610ffa57610feb8183610136565b92386111ef565b611808611816610176926040519283917f41304fac0000000000000000000000000000000000000000000000000000000060208401526020602484015260448301906105d5565b03601f198101835282610136565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b61181661187991610176936040519384927fb60e72cc0000000000000000000000000000000000000000000000000000000060208501526040602485015260648401906105d5565b90604483015203601f198101835282610136565b6118166118dd91610176936001600160a01b036040519485937f319af3330000000000000000000000000000000000000000000000000000000060208601526040602486015260648501906105d5565b9116604483015203601f19810183528261013656fea2646970667358221220c02bea5c4a35f71dc31de3e774194ea68100fad2ae501c2fe8eb4b88bdf2557b64736f6c63430008120033";

type UniswapUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapUtils__factory extends ContractFactory {
  constructor(...args: UniswapUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapUtils> {
    return super.deploy(overrides || {}) as Promise<UniswapUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapUtils {
    return super.attach(address) as UniswapUtils;
  }
  override connect(signer: Signer): UniswapUtils__factory {
    return super.connect(signer) as UniswapUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapUtilsInterface {
    return new utils.Interface(_abi) as UniswapUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapUtils {
    return new Contract(address, _abi, signerOrProvider) as UniswapUtils;
  }
}
