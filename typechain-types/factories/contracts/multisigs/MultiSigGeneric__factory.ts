/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultiSigGeneric,
  MultiSigGenericInterface,
} from "../../../contracts/multisigs/MultiSigGeneric";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "curConfirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "curTransactionids",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600755611ef390816100218239f35b600080fdfe6080806040526004361015610028575b5036156100205761001e611c67565b005b61001e611c67565b60003560e01c90816301ffc9a7146119a057508063025e7c271461195e578063173825d9146117c957806320ea8d86146117135780632f54bf6e146116d45780633411c81c1461168757806354741525146115ce5780637065cb48146114d2578063784547a7146114aa5780638b51d13f1461141d57806396ff7de514610d7d5780639ace38c214610ca8578063a0e67e2b14610c2a578063a8abe69a14610ac5578063b5dc40c3146109ac578063b77bf6001461098e578063b781694a1461096b578063ba51a6df146108df578063c01a8c8414610748578063d74f8edd1461072c578063dc8452cd1461070e578063e20056e6146105cd578063ee22610b1461046a5763f72b230d1461013d573861000f565b346102895760603660031901126102895767ffffffffffffffff60043581811161028957366023820112156102895780600401359161017b83611c4f565b926101896040519485611a68565b80845260209081850193846024809360051b83010191368311610289578301905b82821061044b575050506101bc611a3d565b9060069081549060ff95868360101c16159283809461043c575b8015610423575b156103c85761ff00198116610100178555836103b5575b508851603281111590816103a8575b8161039d575b81610393575b50156102895760005b89518110156102a5576001600160a01b039081610235828d611cab565b511660005260028089528b83838c6040600020541615928361028e575b505050156102895761028492610268838e611cab565b511660005288526040600020600160ff19825416179055611c9c565b610218565b600080fd5b610299929350611cab565b5116151583838e610252565b50878997939495975191821161037e57600160401b821161037e576003548260035580831061035a575b50600360005260005b8281106103315750505035600455825494151516908160ff1986161783556102fc57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989362ff00ff191617905560405160018152a1005b81516001600160a01b0316600080516020611e9e833981519152820155908701906001016102d8565b6103789083600080516020611e9e8339815191529182019101611cbf565b886102cf565b82634e487b7160e01b60005260416004526000fd5b905015153861020f565b833515159150610209565b8091508335111590610203565b62ffff00191662010100178455386101f4565b60405162461bcd60e51b815260048101889052602e818501527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101dd57506001888260081c16146101dd565b506001888260081c16106101d6565b81356001600160a01b03811681036102895781529084019084016101aa565b34610289576020806003193601126102895760043590336000526002815260ff6040600020541615610289578160005260018152604060002033600052815260ff604060002054161561028957816000526000815260ff60056040600020015416610289576104d882611d7d565b6104de57005b61059c90826000526000815260406000209060058201600160ff19825416179055600080600460018060a01b0360028601541661053160038701549661052a6040518095819301611b35565b0383611a68565b6040519561053e87611a4c565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d156105c4573d61057f81611a8a565b9061058d6040519283611a68565b8152600081933d92013e611d39565b507f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a2005b60609150611d39565b34610289576040366003190112610289576105e6611a11565b6105ee611a27565b90303303610289576001600160a01b0390811660008181526002602052604090205460ff161561028957818316928360005260ff604060002054166102895760005b6003805482101561070457848491610647846119d6565b9054911b1c16146106605761065b90611c9c565b610630565b61068e92935061066f906119d6565b90919082549060031b9160018060a01b03809116831b921b1916179055565b806000526002602052604060002060ff19908181541690558260005260016040600020918254161790557f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b90600080a27ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d600080a2005b505050905061068e565b34610289576000366003190112610289576020600454604051908152f35b3461028957600036600319011261028957602060405160328152f35b346102895760208060031936011261028957600435610765611ce3565b336000526002825260ff80604060002054161561028957600082815280845260409020600201546001600160a01b03919082161561028957600193848152604060002033600052815281604060002054166102895783600052848152604060002033600052815260406000209160ff1992868482541617905584337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef600080a3806006541615610817575b6007869055005b6002825280604060002054161561028957846000528582526040600020336000528252806040600020541615610289578460005260008252600560406000200154166102895761086684611d7d565b610871575b80610810565b60008060046108b095878352828552604083209589600588019182541617905560028601541661053160038701549661052a6040518095819301611b35565b507f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a28180808061086b565b34610289576020366003190112610289576004353033036102895760035460328111159081610960575b81610956575b8161094c575b5015610289576020817fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a92600455604051908152a1005b9050151582610915565b821515915061090f565b808311159150610909565b3461028957600036600319011261028957602060ff600654166040519015158152f35b34610289576000366003190112610289576020600554604051908152f35b34610289576020806003193601126102895760043560038054906109cf82611e6b565b9360009360005b848110610a325786866109e881611e6b565b9160005b828110610a055760405180610a018682611c0b565b0390f35b610a2d906001600160a01b03610a1b8285611cab565b5116610a278287611cab565b52611c9c565b6109ec565b8160005260018084526040600020610a49836119d6565b90546001600160a01b0391881b1c8116600090815291865260409091205460ff16610a7f575b5050610a7a90611c9c565b6109d6565b610a8a8398936119d6565b905490871b1c16610a9b838a611cab565b528101809111610aaf5794610a7a88610a6f565b634e487b7160e01b600052601160045260246000fd5b346102895760803660031901126102895760248035600435610ae5611a3d565b92606435938415158503610289576005805491610b0183611e6b565b9660009260005b858110610b9957898989610b24610b1f8284611cd6565b611e6b565b92815b838110610b725784604051809160208083018184528251809152816040850193019160005b828110610b5b57505050500390f35b835185528695509381019392810192600101610b4c565b80610b80610b949284611cab565b51610a27610b8e8684611cd6565b88611cab565b610b27565b8380610c0f575b8015610bed575b610bba575b610bb590611c9c565b610b08565b9384610bc6828c611cab565b5260018101809111610bd85793610bac565b86634e487b7160e01b60005260116004526000fd5b50828015610ba7575080600052600060205260ff826040600020015416610ba7565b5080600052600060205260ff82604060002001541615610ba0565b346102895760003660031901126102895760405180600354918281526020809101926003600052600080516020611e9e833981519152916000905b828210610c8857610a0185610c7c81890382611a68565b60405191829182611c0b565b83546001600160a01b031686529485019460019384019390910190610c65565b34610289576020366003190112610289576004356000526000602052610d4b604060002060405190610cde8261052a8184611b35565b610d7160405191610cfd83610cf68160018501611b35565b0384611a68565b60018060a01b03600282015416906003810154610d5960ff600560405194610d3386610d2c8160048501611b35565b0387611a68565b0154169560405198899860c08a5260c08a0190611bcb565b9088820360208a0152611bcb565b92604087015260608601528482036080860152611bcb565b90151560a08301520390f35b346102895760a03660031901126102895760043567ffffffffffffffff811161028957610dae903690600401611add565b60243567ffffffffffffffff811161028957610dce903690600401611add565b906044356001600160a01b038116908190036102895760843567ffffffffffffffff8111610289573660238201121561028957610e15903690602481600401359101611aa6565b90801561028957600554936040519360c0850185811067ffffffffffffffff8211176113195760405284526020840152604083015260643560608301526080820152600060a0820152816000526000602052604060002090805192835167ffffffffffffffff811161131957610e9581610e8f8654611afb565b86611e24565b6020601f82116001146113b45781929394956000926113a9575b50508160011b916000199060031b1c19161783555b602082015192835167ffffffffffffffff811161131957610ef581610eec6001850154611afb565b60018501611e24565b6020601f821160011461133a57819293949560009261132f575b50508160011b916000199060031b1c19161760018201555b6002810160018060a01b036040850151166bffffffffffffffffffffffff60a01b82541617905560608301516003820155608083015180519067ffffffffffffffff821161131957610f8982610f806004860154611afb565b60048601611e24565b602090601f83116001146112a457918060a09492600594600092611299575b50508160011b916000199060031b1c19161760048201555b01920151151560ff19928381541660ff80931617905560055460018101809111610aaf57600555816000526000602052817fd7a3e44e966772c8f96e617308d18b83723c2b701c85a3c62134d280b0b3ce6e604060002060405180916020825260c0602083015285600561108561103a60e0860185611b35565b611054601f19918288820301604089015260018701611b35565b60028601546001600160a01b031660608801526003860154608088015286810390910160a087015260048501611b35565b92015416151560c08301520390a261109b611ce3565b336000526002602052806040600020541615610289576000828152602081905260409020600201546001600160a01b031615610289576001602052604060002033600052602052806040600020541661028957816000526001602052604060002033600052602052604060002060018482541617905581337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef600080a3806006541615611153575b6020826001600755604051908152f35b6002602052806040600020541615610289578160005260016020526040600020336000526020528060406000205416156102895781600052600060205260056040600020015416610289576020916111aa82611d7d565b156111435761126490826000526000845260406000209060016005830191825416179055600080600460018060a01b036002850154166111f960038601549561052a6040518095819301611b35565b6040519461120686611a4c565b601d86527f63616c6c20726576657274656420776974686f7574206d657373616765000000898701528883519301915af13d15611291573d9061124882611a8a565b916112566040519384611a68565b82523d60008784013e611d39565b50807f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a282611143565b606090611d39565b015190508780610fa8565b906004840160005260206000209160005b601f198516811061130157509260a0949260019260059583601f198116106112e8575b505050811b016004820155610fc0565b015160001960f88460031b161c191690558780806112d8565b919260206001819286850151815501940192016112b5565b634e487b7160e01b600052604160045260246000fd5b015190508580610f0f565b6001830160005260206000209060005b601f1984168110611391575060019394959683601f19811610611378575b505050811b016001820155610f27565b015160001960f88460031b161c19169055858080611368565b9091602060018192858b01518155019301910161134a565b015190508580610eaf565b8460005260206000209060005b601f1984168110611405575060019394959683601f198116106113ec575b505050811b018355610ec4565b015160001960f88460031b161c191690558580806113df565b9091602060018192858b0151815501930191016113c1565b34610289576020806003193601126102895760038054600091600435835b83811061144c578585604051908152f35b8160005260018087526040600020611463836119d6565b905490861b1c6001600160a01b03166000908152908852604090205460ff16611496575b5061149190611c9c565b61143b565b85919501809111610aaf5793611491611487565b346102895760203660031901126102895760206114c8600435611d7d565b6040519015158152f35b34610289576020366003190112610289576114eb611a11565b303303610289576001600160a01b03811660008181526002602052604090205490919060ff166102895781156102895760035460018101809111610aaf5760045490603281111591826115c3575b826115b9575b50816115af575b5015610289578160005260026020526040600020600160ff1982541617905560035490600160401b8210156113195761066f82600161158894016003556119d6565b7ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d600080a2005b9050151583611546565b151591508461153f565b818111159250611539565b3461028957604036600319011261028957600435801515810361028957602490813580151581036102895760009160009160058054935b84811061161757602086604051908152f35b838061166c575b801561164a575b611638575b61163390611c9c565b611605565b9460018101809111610bd8579461162a565b50828015611625575080600052600060205260ff826040600020015416611625565b5080600052600060205260ff8260406000200154161561161e565b34610289576040366003190112610289576116a0611a27565b600435600052600160205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610289576020366003190112610289576001600160a01b036116f5611a11565b166000526002602052602060ff604060002054166040519015158152f35b34610289576020806003193601126102895760043590611731611ce3565b336000526002815260ff6040600020541615610289578160005260018152604060002033600052815260ff604060002054161561028957816000526000815260ff6005604060002001541661028957600181526040600020903360005252604060002060ff198154169055337ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e9600080a36001600755005b34610289576020366003190112610289576117e2611a11565b303303610289576001600160a01b039081166000818152600260205260409020805491929160ff8116156102895760ff1916905560005b6003805460001981019291908311610aaf57828493831015611955578584611840856119d6565b905490851b1c161461185d5750506118589150611c9c565b611819565b9261066f9161186e61187a956119d6565b9054911b1c16916119d6565b600354801561193f576000190190611891826119d6565b909182549160031b1b191690558060035580600454116118d4575b507f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b90600080a2005b603281111580611937575b8061192e575b80611925575b15610289576020817fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a92600455604051908152a1816118ac565b508015156118eb565b508015156118e5565b5060016118df565b634e487b7160e01b600052603160045260246000fd5b5050505061187a565b3461028957602036600319011261028957600435600354811015610289576119876020916119d6565b905460405160039290921b1c6001600160a01b03168152f35b34610289576020366003190112610289576004359063ffffffff60e01b8216809203610289576020916301ffc9a760e01b148152f35b6003548110156119fb576003600052600080516020611e9e8339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361028957565b602435906001600160a01b038216820361028957565b60443590811515820361028957565b6040810190811067ffffffffffffffff82111761131957604052565b90601f8019910116810190811067ffffffffffffffff82111761131957604052565b67ffffffffffffffff811161131957601f01601f191660200190565b929192611ab282611a8a565b91611ac06040519384611a68565b829481845281830111610289578281602093846000960137010152565b9080601f8301121561028957816020611af893359101611aa6565b90565b90600182811c92168015611b2b575b6020831014611b1557565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b0a565b9060009291805491611b4683611afb565b918282526001938481169081600014611ba85750600114611b68575b50505050565b90919394506000526020928360002092846000945b838610611b94575050505001019038808080611b62565b805485870183015294019385908201611b7d565b9294505050602093945060ff191683830152151560051b01019038808080611b62565b919082519283825260005b848110611bf7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611bd6565b6020908160408183019282815285518094520193019160005b828110611c32575050505090565b83516001600160a01b031685529381019392810192600101611c24565b67ffffffffffffffff81116113195760051b60200190565b34611c6e57565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b6000198114610aaf5760010190565b80518210156119fb5760209160051b010190565b818110611cca575050565b60008155600101611cbf565b91908203918211610aaf57565b600260075414611cf4576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90919015611d45575090565b815115611d555750805190602001fd5b60405162461bcd60e51b815260206004820152908190611d79906024830190611bcb565b0390fd5b6000806003918254936004908154935b868110611da05750505050505050600090565b81600052600160ff60208281526040908160002090611dbe866119d6565b9054908c1b1c6001600160a01b03166000908152919052205416611dfe575b858514611df35750611dee90611c9c565b611d8d565b965050505050505090565b93848101809111611e0f5793611ddd565b601184634e487b7160e01b6000525260246000fd5b9190601f8111611e3357505050565b611e5f926000526020600020906020601f840160051c83019310611e61575b601f0160051c0190611cbf565b565b9091508190611e52565b90611e7582611c4f565b611e826040519182611a68565b8281528092611e93601f1991611c4f565b019060203691013756fec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba264697066735822122007a33af825fd1cd5d1589c71540e3514f3caf4b8a513620c737375792babd8da64736f6c63430008120033";

type MultiSigGenericConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigGenericConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigGeneric__factory extends ContractFactory {
  constructor(...args: MultiSigGenericConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigGeneric> {
    return super.deploy(overrides || {}) as Promise<MultiSigGeneric>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultiSigGeneric {
    return super.attach(address) as MultiSigGeneric;
  }
  override connect(signer: Signer): MultiSigGeneric__factory {
    return super.connect(signer) as MultiSigGeneric__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigGenericInterface {
    return new utils.Interface(_abi) as MultiSigGenericInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigGeneric {
    return new Contract(address, _abi, signerOrProvider) as MultiSigGeneric;
  }
}
