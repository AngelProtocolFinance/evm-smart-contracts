/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultiSigGeneric,
  MultiSigGenericInterface,
} from "../../../contracts/multisigs/MultiSigGeneric";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "requireExecution",
        type: "bool",
      },
    ],
    name: "ExecutionRequiredChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_requireExecution",
        type: "bool",
      },
    ],
    name: "changeRequireExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "ownerConfirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "transactionIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireExecution",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600160075561208790816100218239f35b600080fdfe6080806040526004361015610028575b5036156100205761001e611dfb565b005b61001e611dfb565b60003560e01c90816301ffc9a714611b3757508063025e7c2714611af5578063173825d91461196057806320ea8d86146118aa5780632f54bf6e1461186b5780633411c81c1461181e57806354741525146117695780637065cb481461166d578063784547a7146116455780638b51d13f146115b85780639ace38c2146114b1578063a0e67e2b14611433578063a8abe69a146112ce578063b5dc40c3146111cb578063b77bf600146111ad578063b781694a1461118a578063b9b861ef1461112c578063ba51a6df146110a0578063c01a8c8414610f09578063d74f8edd14610eed578063dc8452cd14610ecf578063e20056e614610d8e578063ee22610b14610c32578063f06a7522146104745763f72b230d14610148573861000f565b34610293576060366003190112610293576001600160401b0360043581811161029357366023820112156102935780600401359161018583611de4565b926101936040519485611cdd565b80845260209081850193846024809360051b83010191368311610293578301905b828210610455575050506101c6611be3565b9060069081549060ff95868360101c161592838094610446575b801561042d575b156103d25761ff00198116610100178555836103bf575b508851603281111590816103b2575b816103a7575b8161039d575b50156102935760005b89518110156102af576001600160a01b03908161023f828d611e3f565b511660005260028089528b83838c60406000205416159283610298575b505050156102935761028e92610272838e611e3f565b511660005288526040600020600160ff19825416179055611e30565b610222565b600080fd5b6102a3929350611e3f565b5116151583838e61025c565b50878997939495975191821161038857600160401b82116103885760035482600355808310610364575b50600360005260005b82811061033b5750505035600455825494151516908160ff19861617835561030657005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989362ff00ff191617905560405160018152a1005b81516001600160a01b0316600080516020612032833981519152820155908701906001016102e2565b61038290836000805160206120328339815191529182019101611e53565b886102d9565b82634e487b7160e01b60005260416004526000fd5b9050151538610219565b833515159150610213565b809150833511159061020d565b62ffff00191662010100178455386101fe565b60405162461bcd60e51b815260048101889052602e818501527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101e757506001888260081c16146101e7565b506001888260081c16106101e0565b81356001600160a01b03811681036102935781529084019084016101b4565b346102935760c0366003190112610293576004356001600160401b038111610293576104a4903690600401611d9d565b6024356001600160401b038111610293576104c3903690600401611d9d565b906044356001600160a01b03811690819003610293576084356001600160401b038111610293576104f8903690600401611d9d565b60a4356001600160401b03811161029357610517903690600401611d9d565b90821561029357600554926040519460e086018681106001600160401b03821117610ab357604052855260208501958652604085015260643560608501526080840152600060a084015260c083015280600052600060205260406000209282518051906001600160401b038211610ab357819061059e826105988954611bf2565b89611fb8565b602090601f8311600114610bcc57600092610bc1575b50508160011b916000199060031b1c19161784555b519283516001600160401b038111610ab3576105f5816105ec6001850154611bf2565b60018501611fb8565b6020601f8211600114610b52578192939495600092610b47575b50508160011b916000199060031b1c19161760018201555b6002810160018060a01b036040850151166bffffffffffffffffffffffff60a01b8254161790556060830151600382015560808301519283516001600160401b038111610ab3576106888161067f6004860154611bf2565b60048601611fb8565b6020601f8211600114610ad457819060c0949596600092610ac9575b50508160011b916000199060031b1c19161760048401555b6005830160a0820151151560ff8019835416911617905501518051906001600160401b038211610ab357610700826106f76006860154611bf2565b60068601611fb8565b602090601f8311600114610a43576006929160009183610a38575b50508160011b916000199060031b1c1916179101555b60055460018101809111610a2257600555806000526000602052807f180494405e1822cfac7f46cb28e05d25c4e51a01231c971781dfcab4f006392161080360406000206040519182916020835260e060208401526006610796610100850183611c2c565b916107e46107b4601f19948588820301604089015260018401611c2c565b60028301546001600160a01b0316606088015260038301546080880152868103850160a088015260048301611c2c565b9260ff600583015416151560c08701528584030160e086015201611c2c565b0390a261080e611e77565b33600052600260205260ff6040600020541615610293576000818152602081905260409020600201546001600160a01b03161561029357600160205260406000203360005260205260ff60406000205416610293578060005260016020526040600020336000526020526040600020600160ff1982541617905580337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef600080a360ff60065416156108cb575b6020906001600755604051908152f35b600260205260ff60406000205416156102935780600052600160205260406000203360005260205260ff60406000205416156102935780600052600060205260ff600560406000200154166102935780610926602092611f11565b610932575b90506108bb565b80600052600082526109ee604060002060058101600160ff19825416179055600080600460018060a01b0360028501541661098360038601549561097c6040518095819301611c2c565b0383611cdd565b6040519461099086611cc2565b601d86527f63616c6c20726576657274656420776974686f7574206d657373616765000000898701528883519301915af13d15610a1a573d906109d282611d82565b916109e06040519384611cdd565b82523d60008784013e611ecd565b50807f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a261092b565b606090611ecd565b634e487b7160e01b600052601160045260246000fd5b01519050858061071b565b906006840160005260206000209160005b601f1985168110610a9b5750918391600193600695601f19811610610a82575b505050811b01910155610731565b015160001960f88460031b161c19169055858080610a74565b91926020600181928685015181550194019201610a54565b634e487b7160e01b600052604160045260246000fd5b0151905086806106a4565b6004840160005260206000209560005b601f1984168110610b2f575095829160c0959697600194601f19811610610b16575b505050811b0160048401556106bc565b015160001960f88460031b161c19169055868080610b06565b82820151885560019097019660209283019201610ae4565b01519050858061060f565b6001830160005260206000209060005b601f1984168110610ba9575060019394959683601f19811610610b90575b505050811b016001820155610627565b015160001960f88460031b161c19169055858080610b80565b9091602060018192858b015181550193019101610b62565b0151905086806105b4565b6000888152602081209350601f198516905b818110610c1a5750908460019594939210610c01575b505050811b0184556105c9565b015160001960f88460031b161c19169055868080610bf4565b92936020600181928786015181550195019301610bde565b34610293576020806003193601126102935760043590336000526002815260ff6040600020541615610293578160005260018152604060002033600052815260ff604060002054161561029357816000526000815260ff6005604060002001541661029357610ca082611f11565b610ca657005b610d5d90826000526000815260406000209060058201600160ff19825416179055600080600460018060a01b03600286015416610cf260038701549661097c6040518095819301611c2c565b60405195610cff87611cc2565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d15610d85573d610d4081611d82565b90610d4e6040519283611cdd565b8152600081933d92013e611ecd565b507f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a2005b60609150611ecd565b3461029357604036600319011261029357610da7611ba8565b610daf611bbe565b90303303610293576001600160a01b0390811660008181526002602052604090205460ff161561029357818316928360005260ff604060002054166102935760005b60038054821015610ec557848491610e0884611b6d565b9054911b1c1614610e2157610e1c90611e30565b610df1565b610e4f929350610e3090611b6d565b90919082549060031b9160018060a01b03809116831b921b1916179055565b806000526002602052604060002060ff19908181541690558260005260016040600020918254161790557f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b90600080a27ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d600080a2005b5050509050610e4f565b34610293576000366003190112610293576020600454604051908152f35b3461029357600036600319011261029357602060405160328152f35b346102935760208060031936011261029357600435610f26611e77565b336000526002825260ff80604060002054161561029357600082815280845260409020600201546001600160a01b03919082161561029357600193848152604060002033600052815281604060002054166102935783600052848152604060002033600052815260406000209160ff1992868482541617905584337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef600080a3806006541615610fd8575b6007869055005b6002825280604060002054161561029357846000528582526040600020336000528252806040600020541615610293578460005260008252600560406000200154166102935761102784611f11565b611032575b80610fd1565b6000806004611071958783528285526040832095896005880191825416179055600286015416610cf260038701549661097c6040518095819301611c2c565b507f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed75600080a28180808061102c565b34610293576020366003190112610293576004353033036102935760035460328111159081611121575b81611117575b8161110d575b5015610293576020817fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a92600455604051908152a1005b90501515826110d6565b82151591506110d0565b8083111591506110ca565b3461029357602036600319011261029357611145611bd4565b3033036102935760207fc5c8836d4d5a31efcf66fc17ae048d7d24efd6bac1c903efa11293bcebf63cf191151560ff196006541660ff821617600655604051908152a1005b3461029357600036600319011261029357602060ff600654166040519015158152f35b34610293576000366003190112610293576020600554604051908152f35b34610293576020806003193601126102935760043560038054906111ee82611fff565b9360009360005b84811061125157868661120781611fff565b9160005b82811061122457604051806112208682611d3e565b0390f35b61124c906001600160a01b0361123a8285611e3f565b51166112468287611e3f565b52611e30565b61120b565b816000526001808452604060002061126883611b6d565b90546001600160a01b0391881b1c8116600090815291865260409091205460ff1661129e575b505061129990611e30565b6111f5565b6112a9839893611b6d565b905490871b1c166112ba838a611e3f565b528101809111610a2257946112998861128e565b3461029357608036600319011261029357602480356004356112ee611be3565b9260643593841515850361029357600580549161130a83611fff565b9660009260005b8581106113a25789898961132d6113288284611e6a565b611fff565b92815b83811061137b5784604051809160208083018184528251809152816040850193019160005b82811061136457505050500390f35b835185528695509381019392810192600101611355565b8061138961139d9284611e3f565b516112466113978684611e6a565b88611e3f565b611330565b8380611418575b80156113f6575b6113c3575b6113be90611e30565b611311565b93846113cf828c611e3f565b52600181018091116113e157936113b5565b86634e487b7160e01b60005260116004526000fd5b508280156113b0575080600052600060205260ff8260406000200154166113b0565b5080600052600060205260ff826040600020015416156113a9565b346102935760003660031901126102935760405180600354918281526020809101926003600052600080516020612032833981519152916000905b828210611491576112208561148581890382611cdd565b60405191829182611d3e565b83546001600160a01b03168652948501946001938401939091019061146e565b3461029357602036600319011261029357600435600052600060205261157d6040600020611220604051916114f1836114ea8184611c2c565b0384611cdd565b60066115a36040516115118161150a8160018801611c2c565b0382611cdd565b600284015460038501546040516001600160a01b039092169261158b906115468461153f8160048c01611c2c565b0385611cdd565b61156960ff60058a01541698611562604051809a819301611c2c565b0388611cdd565b6040519a8b9a60e08c5260e08c0190611cfe565b908a820360208c0152611cfe565b92604089015260608801528682036080880152611cfe565b91151560a085015283820360c0850152611cfe565b34610293576020806003193601126102935760038054600091600435835b8381106115e7578585604051908152f35b81600052600180875260406000206115fe83611b6d565b905490861b1c6001600160a01b03166000908152908852604090205460ff16611631575b5061162c90611e30565b6115d6565b85919501809111610a22579361162c611622565b34610293576020366003190112610293576020611663600435611f11565b6040519015158152f35b3461029357602036600319011261029357611686611ba8565b303303610293576001600160a01b03811660008181526002602052604090205490919060ff166102935781156102935760035460018101809111610a2257600454906032811115918261175e575b82611754575b508161174a575b5015610293578160005260026020526040600020600160ff1982541617905560035490600160401b821015610ab357610e308260016117239401600355611b6d565b7ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d600080a2005b90501515836116e1565b15159150846116da565b8181111592506116d4565b3461029357604036600319011261029357611782611bd4565b602490813580151581036102935760009160009160058054935b8481106117ae57602086604051908152f35b8380611803575b80156117e1575b6117cf575b6117ca90611e30565b61179c565b94600181018091116113e157946117c1565b508280156117bc575080600052600060205260ff8260406000200154166117bc565b5080600052600060205260ff826040600020015416156117b5565b3461029357604036600319011261029357611837611bbe565b600435600052600160205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610293576020366003190112610293576001600160a01b0361188c611ba8565b166000526002602052602060ff604060002054166040519015158152f35b346102935760208060031936011261029357600435906118c8611e77565b336000526002815260ff6040600020541615610293578160005260018152604060002033600052815260ff604060002054161561029357816000526000815260ff6005604060002001541661029357600181526040600020903360005252604060002060ff198154169055337ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e9600080a36001600755005b3461029357602036600319011261029357611979611ba8565b303303610293576001600160a01b039081166000818152600260205260409020805491929160ff8116156102935760ff1916905560005b6003805460001981019291908311610a2257828493831015611aec5785846119d785611b6d565b905490851b1c16146119f45750506119ef9150611e30565b6119b0565b92610e3091611a05611a1195611b6d565b9054911b1c1691611b6d565b6003548015611ad6576000190190611a2882611b6d565b909182549160031b1b19169055806003558060045411611a6b575b507f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b90600080a2005b603281111580611ace575b80611ac5575b80611abc575b15610293576020817fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a92600455604051908152a181611a43565b50801515611a82565b50801515611a7c565b506001611a76565b634e487b7160e01b600052603160045260246000fd5b50505050611a11565b346102935760203660031901126102935760043560035481101561029357611b1e602091611b6d565b905460405160039290921b1c6001600160a01b03168152f35b34610293576020366003190112610293576004359063ffffffff60e01b8216809203610293576020916301ffc9a760e01b148152f35b600354811015611b925760036000526000805160206120328339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361029357565b602435906001600160a01b038216820361029357565b60043590811515820361029357565b60443590811515820361029357565b90600182811c92168015611c22575b6020831014611c0c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c01565b9060009291805491611c3d83611bf2565b918282526001938481169081600014611c9f5750600114611c5f575b50505050565b90919394506000526020928360002092846000945b838610611c8b575050505001019038808080611c59565b805485870183015294019385908201611c74565b9294505050602093945060ff191683830152151560051b01019038808080611c59565b604081019081106001600160401b03821117610ab357604052565b90601f801991011681019081106001600160401b03821117610ab357604052565b919082519283825260005b848110611d2a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611d09565b6020908160408183019282815285518094520193019160005b828110611d65575050505090565b83516001600160a01b031685529381019392810192600101611d57565b6001600160401b038111610ab357601f01601f191660200190565b81601f8201121561029357803590611db482611d82565b92611dc26040519485611cdd565b8284526020838301011161029357816000926020809301838601378301015290565b6001600160401b038111610ab35760051b60200190565b34611e0257565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b6000198114610a225760010190565b8051821015611b925760209160051b010190565b818110611e5e575050565b60008155600101611e53565b91908203918211610a2257565b600260075414611e88576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90919015611ed9575090565b815115611ee95750805190602001fd5b60405162461bcd60e51b815260206004820152908190611f0d906024830190611cfe565b0390fd5b6000806003918254936004908154935b868110611f345750505050505050600090565b81600052600160ff60208281526040908160002090611f5286611b6d565b9054908c1b1c6001600160a01b03166000908152919052205416611f92575b858514611f875750611f8290611e30565b611f21565b965050505050505090565b93848101809111611fa35793611f71565b601184634e487b7160e01b6000525260246000fd5b9190601f8111611fc757505050565b611ff3926000526020600020906020601f840160051c83019310611ff5575b601f0160051c0190611e53565b565b9091508190611fe6565b9061200982611de4565b6120166040519182611cdd565b8281528092612027601f1991611de4565b019060203691013756fec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba26469706673582212202d6efec9476e82d74074c4cdae3e90e65301e168f21d9cf579feba54708f306664736f6c63430008120033";

type MultiSigGenericConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigGenericConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigGeneric__factory extends ContractFactory {
  constructor(...args: MultiSigGenericConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigGeneric> {
    return super.deploy(overrides || {}) as Promise<MultiSigGeneric>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultiSigGeneric {
    return super.attach(address) as MultiSigGeneric;
  }
  override connect(signer: Signer): MultiSigGeneric__factory {
    return super.connect(signer) as MultiSigGeneric__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigGenericInterface {
    return new utils.Interface(_abi) as MultiSigGenericInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigGeneric {
    return new Contract(address, _abi, signerOrProvider) as MultiSigGeneric;
  }
}
