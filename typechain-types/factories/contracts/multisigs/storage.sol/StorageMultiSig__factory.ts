/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StorageMultiSig,
  StorageMultiSigInterface,
} from "../../../../contracts/multisigs/storage.sol/StorageMultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576104b9908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163025e7c27146102c8575080632f54bf6e1461027e5780633411c81c146102245780639ace38c2146100d7578063b77bf600146100b8578063b781694a146100905763dc8452cd1461007057600080fd5b3461008c578260031936011261008c5760209250549051908152f35b8280fd5b5050346100b457816003193601126100b45760209060ff6006541690519015158152f35b5080fd5b5050346100b457816003193601126100b4576020906005549051908152f35b50823461022157602092836003193601126100b45782358252818452808220916101008361039d565b9360019161010f83860161039d565b9473ffffffffffffffffffffffffffffffffffffffff600282015416916003820154938201865195828254926101448461032b565b808a52938381169081156101fb57506001146101c4575b505050506101959860ff60058796959461017e6101b89a996101a2960389610365565b0154169786519a8b9a60c08c5260c08c0190610443565b918a8303908b0152610443565b9387015260608601528482036080860152610443565b90151560a08301520390f35b90809450528a83205b8284106101e857505050840188018860ff60056101b861015b565b80548885018d0152928b019281016101cd565b60ff19168e8b0152505050501515600590811b86018a019150899060ff906101b861015b565b80fd5b503461008c578160031936011261008c576024359073ffffffffffffffffffffffffffffffffffffffff821680920361027a5760209360ff92849235825260018652828220908252855220541690519015158152f35b8380fd5b503461008c57602036600319011261008c573573ffffffffffffffffffffffffffffffffffffffff811680910361008c57818360ff92602095526002855220541690519015158152f35b9250503461008c57602036600319011261008c573560035481101561008c5773ffffffffffffffffffffffffffffffffffffffff906003602094527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0154168152f35b90600182811c9216801561035b575b602083101461034557565b634e487b7160e01b600052602260045260246000fd5b91607f169161033a565b90601f8019910116810190811067ffffffffffffffff82111761038757604052565b634e487b7160e01b600052604160045260246000fd5b90604051918260008254926103b18461032b565b90818452600194858116908160001461042057506001146103dd575b50506103db92500383610365565b565b9093915060005260209081600020936000915b8183106104085750506103db935082010138806103cd565b855488840185015294850194879450918301916103f0565b9150506103db94506020925060ff191682840152151560051b82010138806103cd565b919082519283825260005b84811061046f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161044e56fea2646970667358221220099b3d960fdadad292f95becb4572b827603b62524c80122624baa536e15cf1564736f6c63430008120033";

type StorageMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageMultiSig__factory extends ContractFactory {
  constructor(...args: StorageMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StorageMultiSig> {
    return super.deploy(overrides || {}) as Promise<StorageMultiSig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StorageMultiSig {
    return super.attach(address) as StorageMultiSig;
  }
  override connect(signer: Signer): StorageMultiSig__factory {
    return super.connect(signer) as StorageMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageMultiSigInterface {
    return new utils.Interface(_abi) as StorageMultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StorageMultiSig {
    return new Contract(address, _abi, signerOrProvider) as StorageMultiSig;
  }
}
