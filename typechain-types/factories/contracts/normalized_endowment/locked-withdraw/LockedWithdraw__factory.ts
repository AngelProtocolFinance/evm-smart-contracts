/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LockedWithdraw,
  LockedWithdrawInterface,
} from "../../../../contracts/normalized_endowment/locked-withdraw/LockedWithdraw";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "LockedWithdrawAPTeam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "curBeneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "curTokenaddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
    ],
    name: "LockedWithdrawApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "LockedWithdrawEndowment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "curBeneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "curTokenaddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
    ],
    name: "LockedWithdrawInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
    ],
    name: "LockedWithdrawRejected",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curRegistrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "curAccounts",
        type: "address",
      },
      {
        internalType: "address",
        name: "curApteammultisig",
        type: "address",
      },
      {
        internalType: "address",
        name: "curEndowfactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "curBeneficiary",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "curTokenaddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "curAmount",
        type: "uint256[]",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "accountId",
        type: "uint256",
      },
    ],
    name: "reject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curRegistrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "curAccounts",
        type: "address",
      },
      {
        internalType: "address",
        name: "curApteammultisig",
        type: "address",
      },
      {
        internalType: "address",
        name: "curEndowfactory",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600655610e3290816100218239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610a9f5750806378b6f398146109e757806396a075601461059a578063b759f95414610259578063b8adaa11146101c55763f8c8765e1461006157600080fd5b346101c05761006f36610b07565b600554600881901c60ff161594939085806101b3575b801561019c575b156101325760ff19811660011760055585610120575b506001600160a01b0392838092816001600160a01b031997168760005416176000551685600154161760015516836002541617600255169060035416176003556100e857005b61ff0019600554166005557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61ffff191661010117600555386100a2565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b15801561008c5750600160ff82161461008c565b50600160ff821610610085565b600080fd5b346101c05760203660031901126101c0576004356101e1610bf3565b6101f76001600160a01b03600254163314610ba8565b806000526004602052610216600160ff60406000205416151514610c7c565b807fcb7f2c434a113f944d05b33c5f1c8c39794bfe8d28f239a4e6a634d491e291af600080a26000908152600460205260409020805460ff191690556001600655005b346101c0576020806003193601126101c057600435610276610bf3565b6001600160a01b039161028e83600254163314610ba8565b81600052600481526001916102ae8360ff60406000205416151514610c7c565b604080518281523360208201527f5f9402e0640a2eb0ab8ae108e4c182d1b965800fbe4ecdfc8797ffb0cf49f1d29190a180600052600482526040600020817f1d00cdddfe0003fb41878c3adc917cc399149e0b62d56b712a4f80d2ed27b06d61034283546040519182916040835260028b61032f604086018d8b01610cc7565b928584038c87015260081c169701610d0d565b0390a36040519361035285610b52565b8385528236818701378084541661036886610d4a565b526040519461037686610b52565b848652833681880137600061038a87610d4a565b526040519561039887610b52565b85875260005b85811061058b575090859661042f9392856000526004875260406000209380855460081c16946040519687917f275aac9e000000000000000000000000000000000000000000000000000000008b8401526024978a8985015260006044850152606484015260a06084840152600261041c8d60c48601908401610cc7565b8481036023190160a48601529101610d0d565b0395610443601f1997888101835282610b6e565b61044c84610d4a565b5261045683610d4a565b506040519361046485610b52565b601d85527f63616c6c20726576657274656420776974686f7574206d6573736167650000008986015260009a5b6104b2575b600088815260048a5260409020805460ff1916905560068a9055005b809998979699518b1015610581576000808c846104cf8286610d6d565b51166104e66104de8389610d6d565b519289610d6d565b51918c83519301915af1853d1561057557503d67ffffffffffffffff8111610560578b6105319288926105238d60405194601f8401160184610b6e565b82523d60008d84013e610d81565b506000198b1461054b5788809a9b99979899019a96610491565b85634e487b7160e01b60005260116004526000fd5b87634e487b7160e01b60005260416004526000fd5b61053191606090610d81565b8697989950610496565b6060888201870152850161039e565b346101c05760803660031901126101c0576024356001600160a01b03811681036101c05760443567ffffffffffffffff81116101c057366023820112156101c0578060040135916105ea83610b90565b916105f86040519384610b6e565b83835260208301906024829560051b820101903682116101c057602401915b8183106109c7575050506064359267ffffffffffffffff84116101c057366023850112156101c05783600401359361064e85610b90565b9061065c6040519283610b6e565b858252602082016024819760051b830101913683116101c057602401905b8282106109b75750505061068c610bf3565b600060206001600160a01b03600354166024604051809481937fde15304c00000000000000000000000000000000000000000000000000000000835260043560048401525af180156109ab57600090610967575b6106f591506001600160a01b03163314610ba8565b6040516080810181811067ffffffffffffffff8211176109345760405260018152602081016001600160a01b038516815260408201868152836060840152600435600052600460205260406000209183511515907fffffffffffffffffffffff00000000000000000000000000000000000000000060ff74ffffffffffffffffffffffffffffffffffffffff008654935160081b1693169116171782555180519067ffffffffffffffff82116109345768010000000000000000821161093457602060018401916107cb84845481865585610c48565b0190600052602060002060005b83811061094a57505050506002606091019101519081519167ffffffffffffffff8311610934576801000000000000000083116109345760209061082184845481865585610c48565b0190600052602060002060005b8381106109205750505050604051936040850190604086525180915260608501929060005b8181106109015750505060209084830382860152519182815201939060005b8181106108eb575050506001600160a01b0316917fdc2392a60c788a4900c84778e03ad7f725858ff5cadfe421002be204be50db2c339280600435930390a46040805160043581523360208201527f4c4609254522027db8ab56c0975580084420874f5852525bbf5c109475d4dc929190a16001600655005b8251865260209586019590920191600101610872565b82516001600160a01b0316855260209485019490920191600101610853565b60019060208451940193818401550161082e565b634e487b7160e01b600052604160045260246000fd5b60019060206001600160a01b0385511694019381840155016107d8565b506020813d6020116109a3575b8161098160209383610b6e565b810103126101c057516001600160a01b03811681036101c0576106f5906106e0565b3d9150610974565b6040513d6000823e3d90fd5b813581526020918201910161067a565b82356001600160a01b03811681036101c057815260209283019201610617565b346101c0576109f536610b07565b91926109ff610bf3565b600254916001600160a01b038095818094610a1d3383891614610ba8565b1680610a88575b501680610a71575b50169081610a5c575b50501680610a45575b6001600655005b6001600160a01b0319600354161760035580610a3e565b6001600160a01b031916176002558280610a35565b6001600160a01b0319600154161760015585610a2c565b6001600160a01b0319600054161760005587610a24565b346101c05760203660031901126101c057600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101c0577f01ffc9a700000000000000000000000000000000000000000000000000000000602092148152f35b60809060031901126101c0576001600160a01b039060043582811681036101c0579160243581811681036101c0579160443582811681036101c0579160643590811681036101c05790565b6040810190811067ffffffffffffffff82111761093457604052565b90601f8019910116810190811067ffffffffffffffff82111761093457604052565b67ffffffffffffffff81116109345760051b60200190565b15610baf57565b606460405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152fd5b600260065414610c04576002600655565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b9091828110610c5657505050565b60009182526020822092830192015b828110610c7157505050565b818155600101610c65565b15610c8357565b606460405162461bcd60e51b815260206004820152600c60248201527f50656e64696e672054786e7300000000000000000000000000000000000000006044820152fd5b90815480825260208092019260005281600020916000905b828210610ced575050505090565b83546001600160a01b031685529384019360019384019390910190610cdf565b90815480825260208092019260005281600020916000905b828210610d33575050505090565b835485529384019360019384019390910190610d25565b805115610d575760200190565b634e487b7160e01b600052603260045260246000fd5b8051821015610d575760209160051b010190565b90919015610d8d575090565b815115610d9d5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610de3575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610dc056fea26469706673582212207448c71e29415efc4c50366c6cccadb9e37500cce1c6fe7867cfdcf70c056a0364736f6c63430008120033";

type LockedWithdrawConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockedWithdrawConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockedWithdraw__factory extends ContractFactory {
  constructor(...args: LockedWithdrawConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockedWithdraw> {
    return super.deploy(overrides || {}) as Promise<LockedWithdraw>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LockedWithdraw {
    return super.attach(address) as LockedWithdraw;
  }
  override connect(signer: Signer): LockedWithdraw__factory {
    return super.connect(signer) as LockedWithdraw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockedWithdrawInterface {
    return new utils.Interface(_abi) as LockedWithdrawInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockedWithdraw {
    return new Contract(address, _abi, signerOrProvider) as LockedWithdraw;
  }
}
