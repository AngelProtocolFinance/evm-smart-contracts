/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SubdaoEmitter,
  SubdaoEmitterInterface,
} from "../../../../contracts/normalized_endowment/subdao/SubdaoEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.CurveTypeEnum",
                        name: "curve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.CurveTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.CurveType",
                    name: "bondingCurveCurveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingCurveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "SubdaoInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdatePoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "SubdaoUpdatePollStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "SubdapUpdateVotingStatus",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAccountscontract",
        type: "address",
      },
    ],
    name: "initEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.CurveTypeEnum",
                        name: "curve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.CurveTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.CurveType",
                    name: "bondingCurveCurveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingCurveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "initializeSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFromSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "updateSubdaoConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "updateSubdaoPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
      {
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "updateSubdaoPollAndStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "updateSubdaoState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "updateVotingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff196000541660005561136890816100268239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80632103dd7214610c6a5780633b3c187714610b7d57806360fb85bd14610af7578063a377732114610512578063bfecf5be14610432578063cc47f08a1461039e578063efaf65201461031b578063f1b769661461024a5763f79aa7451461007f57600080fd5b3461022f5761018036600319011261022f5760405161018081018181106001600160401b03821117610234576040526100b6610d6d565b81526100c0610d57565b60208201526100cd610d83565b60408201526064356001600160a01b038116810361022f5760608201526084356001600160a01b038116810361022f57816101a09160807fe2472413fc154370d7f9f8b5293189a9e463bd2ee20b55585be20b5eae28679394015260a43560a082015260c43560c082015260e43560e08201526101043561010082015261012435610120820152610144356101408201526101643561016082015233600052600160205261018260ff604060002054166110bc565b6101606040519133835260018060a01b03815116602084015260018060a01b03602082015116604084015260018060a01b03604082015116606084015260018060a01b03606082015116608084015260018060a01b0360808201511660a084015260a081015160c084015260c081015160e084015260e0810151610100840152610100810151610120840152610120810151610140840152610140810151828401520151610180820152a1005b600080fd5b634e487b7160e01b600052604160045260246000fd5b3461022f57606036600319011261022f576004356024356001600160401b03811161022f5761027d903690600401610e37565b9060443590600582101561022f576103186060927f430f5b080fdf16ecd0ecdc74d13ab3c975903940031db9c221ea3bb9e6fd9c986102ff7f8c5daac18f9ab14687e32950599e05e3b689af07060e556e5227d725fe92e2a9963360005260016020526102f160ff604060002054166110bc565b60405191829187338461114e565b0390a16040519233845260208401526040830190611141565ba1005b3461022f57604036600319011261022f576024356001600160401b03811161022f5761039961036f7f430f5b080fdf16ecd0ecdc74d13ab3c975903940031db9c221ea3bb9e6fd9c98923690600401610e37565b33600052600160205261038960ff604060002054166110bc565b604051918291600435338461114e565b0390a1005b3461022f57608036600319011261022f577fdcd71bb5ae1441c83cb15bd0e40e8dfeab7715ac77f33fa746f370b7e4746b7e60a06103da610d6d565b6103e2610d57565b6103ea610d83565b33600052600160205261040460ff604060002054166110bc565b60405192338452600180861b03928380921660208601521660408401521660608201526064356080820152a1005b3461022f57602036600319011261022f5761044b610d6d565b6001600160a01b038116156104c35760005460ff8116610488576001600160a81b03191660089190911b610100600160a81b031617600117600055005b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f496e76616c6964206163636f756e747320636f6e7472616374206164647265736044820152607360f81b6064820152608490fd5b3461022f57604036600319011261022f5761052b610d6d565b6001600160401b036024351161022f576101a06024353603600319011261022f576040516101a081018181106001600160401b038211176102345760405260243560040135815261057f6024803501610d99565b602082015260243560448101356040830152606481013560608301526084810135608083015260a481013560a083015260c481013560c083015260e481013560e083015261010481013561010083015261012401356001600160401b03811161022f57604060243582013603600319011261022f576105fc610d13565b90600481602435010135600381101561022f5782526024818135010135906001600160401b03821161022f576101e0602435820183013603600319011261022f5760405191826101608101106001600160401b036101608501111761023457610160830160405261067560048284602435010101610d99565b83526024803583018201908101356020850152604401356001600160401b03811161022f576106b09060043691848660243501010101610dee565b604084015260648183602435010101356001600160401b03811161022f576106e49060043691848660243501010101610dee565b606084015260a0602435830182013603608319011261022f57610705610d13565b6084828460243501010135600381101561022f578152608060243584018301360360a319011261022f576040518060808101106001600160401b03608083011117610234576080810160405261076360a48486602435010101610e0c565b81526024358401830160c481013560208301526107829060e401610e0c565b604082015261079a6101048486602435010101610e0c565b6060820152602082015260808401526101248183602435010101356001600160401b03811161022f576107d99060043691848660243501010101610dee565b60a08401526001600160401b036101448284602435010101351161022f576101c491610815366024358301840161014481013501600401610dee565b60c08501526024358101820161016481013560e08601526108399061018401610d99565b6101008501526101a482826024350101013561012085015260243501010135610140820152602082015261012082015260036101446024350135101561022f577f1344fabfc254b2b767710398bf3b920cb3801c19d17a8e7b527a9b971739bddc9161014460243501356101408301526108b861016460243501610d99565b6101608301526108cd61018460243501610d99565b6101808301526108eb60018060a01b0360005460081c1633146110bc565b60018060a01b031660005260016020526040600020600160ff198254161790556040518091338252604060208301528051604083015260018060a01b03602082015116606083015260408101516080830152606081015160a0830152608081015160c083015260a081015160e083015260c081015161010083015260e081015161012083015261010081015161014083015260206101208201516101a06101608501528051610999816110f7565b6101e0850152015190604061020084015260018060a01b038251166102208401526020820151610240840152610140610a836109e760408501516101e0610260880152610400870190611101565b610a6d610a0860608701519261021f1993848a8303016102808b0152611101565b602060808801518051610a1a816110f7565b6102a08b0152015160606001600160801b0391828151166102c08c015260208101516102e08c0152826040820151166103008c015201511661032089015260a087015183898303016103408a0152611101565b9060c08601519087830301610360880152611101565b60e08401516103808601526101008401516001600160a01b03166103a08601526101208401516103c08601529201516103e0840152610140810151610ac7816110f7565b610180848101919091526101608201516001600160a01b039081166101a0860152910151166101c08301520390a1005b3461022f57606036600319011261022f577fa76c9035995eb2a8b40386ebe50cac49c18117a4b8e5b59aa8572544d6f324426080610b33610d6d565b610b3b610d57565b90336000526001602052610b5660ff604060002054166110bc565b6040519133835260018060a01b0380921660208401521660408201526044356060820152a1005b3461022f5760a036600319011261022f57610b96610d57565b606036604319011261022f57610baa610cf4565b604435600281101561022f5781526020810191606435835260843591821515830361022f5760408101928352336000526001602052610bf060ff604060002054166110bc565b6040805133815260043560208201526001600160a01b039093169083015251916002831015610c54577f896c10dc6ccc075f8e39be1b3daf3ccc517cc3f97719fd4941a6b8bff2ee62c89360c093606084015251608083015251151560a0820152a1005b634e487b7160e01b600052602160045260246000fd5b3461022f57606036600319011261022f577fe89f1144af1ff5421e4a225aef6f42611719ceaf92c6a4cf7687aa097e6ae9f16080610ca6610cf4565b600435815260208101602435815260408201906044358252336000526001602052610cd860ff604060002054166110bc565b60405192338452516020840152516040830152516060820152a1005b60405190606082018281106001600160401b0382111761023457604052565b60405190604082018281106001600160401b0382111761023457604052565b6040519190601f01601f191682016001600160401b0381118382101761023457604052565b602435906001600160a01b038216820361022f57565b600435906001600160a01b038216820361022f57565b604435906001600160a01b038216820361022f57565b35906001600160a01b038216820361022f57565b9291926001600160401b03821161023457610dd1601f8301601f1916602001610d32565b938285528282011161022f57816000926020928387013784010152565b9080601f8301121561022f57816020610e0993359101610dad565b90565b35906001600160801b038216820361022f57565b6001600160401b0381116102345760051b60200190565b9190916101e090818185031261022f576040938451928301946001600160401b039584811087821117610234578152839583358552602091610e7a838601610d99565b8387015280850135600581101561022f5781870152606085013560608701526080850135608087015260a085013560a087015260c085013560c087015260e085013560e08701526101008086013583811161022f5785610edb918801610dee565b908701526101208086013583811161022f5785610ef9918801610dee565b908701526101408086013583811161022f5785610f17918801610dee565b90870152610160928386013583811161022f5786019460608682031261022f57610f3f610cf4565b95803585811161022f57810182601f8201121561022f57803590610f6a610f6583610e20565b610d32565b91858084838152019160051b8301019185831161022f5786809101915b8383106110ac575050505087528281013585811161022f57810182601f8201121561022f57803590610fbb610f6583610e20565b91858084838152019160051b8301019185831161022f5786809101915b8383106110945750915050880152838101359085821161022f57019080601f8301121561022f57813561100d610f6582610e20565b95848088848152019260051b8501019383851161022f57858101925b85841061105f575050505050505083015283015261018080820135908301526101a080820135908301526101c080910135910152565b833583811161022f57820185603f8201121561022f57879161108987838c86809601359101610dad565b815201930192611029565b819061109f84610d99565b8152019101908690610fd8565b8235815291810191879101610f87565b156110c357565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b60031115610c5457565b919082519283825260005b84811061112d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161110c565b906005821015610c545752565b9091939260018060a01b0380931682526020948583015260606040830152805160608301528285820151166080830152611190604082015160a0840190611141565b606081015160c0830152608081015160e083015260a081015190610100918284015260c081015191610120928385015260e0820151906101409182860152820151946101e090886111ee61016098848a8a0152610240890190611101565b958501519161122661120f605f1998610180958a8c830301878d0152611101565b95870151956101a096898b830301888c0152611101565b98860151906101c097898b0301888a015260608a0182519060608c5281518091528460808d0192019060005b81811061131c5750505083808401519d8e8d828186039101525192838152019d01916000905b828210611303575050505060400151976040818c039101528751808b52818b019180808d8460051b01019a01926000905b8382106112d5575050505050610220959697985083015190860152810151610200850152015191015290565b909192939a83808f6001938f6112f492601f1990830301875251611101565b9d0192019201909392916112a9565b835181168f529d85019d92850192600190910190611278565b825184528f96938401939092019160010161125256fea2646970667358221220a4ae2baf1df695efbf9b9ad2f1f932cb1267da90684982e91ef29d3821c1ea2564736f6c63430008120033";

type SubdaoEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubdaoEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubdaoEmitter__factory extends ContractFactory {
  constructor(...args: SubdaoEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubdaoEmitter> {
    return super.deploy(overrides || {}) as Promise<SubdaoEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubdaoEmitter {
    return super.attach(address) as SubdaoEmitter;
  }
  override connect(signer: Signer): SubdaoEmitter__factory {
    return super.connect(signer) as SubdaoEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubdaoEmitterInterface {
    return new utils.Interface(_abi) as SubdaoEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubdaoEmitter {
    return new Contract(address, _abi, signerOrProvider) as SubdaoEmitter;
  }
}
