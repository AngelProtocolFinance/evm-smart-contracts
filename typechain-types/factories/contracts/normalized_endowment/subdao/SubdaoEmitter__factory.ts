/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SubdaoEmitter,
  SubdaoEmitterInterface,
} from "../../../../contracts/normalized_endowment/subdao/SubdaoEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.CurveTypeEnum",
                        name: "curve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.CurveTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.CurveType",
                    name: "bondingCurveCurveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingCurveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "SubdaoInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubdaoTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdatePoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "SubdaoUpdatePollStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "SubdaoUpdateState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "SubdapUpdateVotingStatus",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAccountscontract",
        type: "address",
      },
    ],
    name: "initEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subdao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.TokenType",
                name: "token",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "existingCw20Data",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "newCw20InitialSupply",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "newCw20Symbol",
                    type: "string",
                  },
                  {
                    components: [
                      {
                        internalType: "enum AngelCoreStruct.CurveTypeEnum",
                        name: "curve_type",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "uint128",
                            name: "value",
                            type: "uint128",
                          },
                          {
                            internalType: "uint256",
                            name: "scale",
                            type: "uint256",
                          },
                          {
                            internalType: "uint128",
                            name: "slope",
                            type: "uint128",
                          },
                          {
                            internalType: "uint128",
                            name: "power",
                            type: "uint128",
                          },
                        ],
                        internalType: "struct AngelCoreStruct.CurveTypeData",
                        name: "data",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct AngelCoreStruct.CurveType",
                    name: "bondingCurveCurveType",
                    type: "tuple",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveName",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "bondingCurveSymbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "bondingCurveReserveDenom",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveReserveDecimals",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bondingCurveUnbondingPeriod",
                    type: "uint256",
                  },
                ],
                internalType: "struct AngelCoreStruct.DaoTokenData",
                name: "data",
                type: "tuple",
              },
            ],
            internalType: "struct AngelCoreStruct.DaoToken",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "enum AngelCoreStruct.EndowmentType",
            name: "endow_type",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "endowOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct subDaoMessage.InstantiateMsg",
        name: "instantiateMsg",
        type: "tuple",
      },
    ],
    name: "initializeSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFromSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferSubdao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "veToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapFactory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quorum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "updateSubdaoConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
    ],
    name: "updateSubdaoPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "enum subDaoStorage.PollStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endHeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "link",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "order",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "contractAddress",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "execution_message",
                type: "bytes[]",
              },
            ],
            internalType: "struct subDaoStorage.ExecuteData",
            name: "executeData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "depositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBalanceAtEndPoll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.Poll",
        name: "poll",
        type: "tuple",
      },
      {
        internalType: "enum subDaoStorage.PollStatus",
        name: "pollStatus",
        type: "uint8",
      },
    ],
    name: "updateSubdaoPollAndStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pollCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct subDaoStorage.State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "updateSubdaoState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum subDaoStorage.VoteOption",
            name: "vote",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
        ],
        internalType: "struct subDaoStorage.VoterInfo",
        name: "voterInfo",
        type: "tuple",
      },
    ],
    name: "updateVotingStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SubdaoEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubdaoEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubdaoEmitter__factory extends ContractFactory {
  constructor(...args: SubdaoEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubdaoEmitter> {
    return super.deploy(overrides || {}) as Promise<SubdaoEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubdaoEmitter {
    return super.attach(address) as SubdaoEmitter;
  }
  override connect(signer: Signer): SubdaoEmitter__factory {
    return super.connect(signer) as SubdaoEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubdaoEmitterInterface {
    return new utils.Interface(_abi) as SubdaoEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubdaoEmitter {
    return new Contract(address, _abi, signerOrProvider) as SubdaoEmitter;
  }
}
