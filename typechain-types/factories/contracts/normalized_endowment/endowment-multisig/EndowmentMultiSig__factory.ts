/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSig,
  EndowmentMultiSigInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSig";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "EMITTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ENDOWMENT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "curConfirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "curTransactionids",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "curEmitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b5760016007556123f290816100218239f35b600080fdfe6080806040526004361015610028575b5036156100205761001e611d83565b005b61001e611d83565b600090813560e01c90816301ffc9a714611a0c57508063025e7c27146119c8578063173825d91461183b57806320ea8d86146117425780632f54bf6e146117035780633411c81c146116b757806354741525146115f15780637065cb4814611489578063784547a7146114605780638b51d13f146113c05780638dcc95ca146113a257806394645f2714611379578063969e7e3414610ffd57806396ff7de514610a605780639ace38c21461098d578063a0e67e2b14610914578063a8abe69a146107b1578063b5dc40c31461069d578063b77bf6001461067f578063b781694a1461065c578063ba51a6df1461063f578063c01a8c841461061f578063d74f8edd14610603578063dc8452cd146105e5578063e20056e6146103e6578063ee22610b146102295763f72b230d0361000f5734610226576060366003190112610226576004356001600160401b0381116102225761018a903690600401611b51565b50610193611aab565b506101b660065460ff8160101c16159081610210575b81156101ed575b50611ed7565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd08125b5c1b195b595b9d1959608a1b6044820152606490fd5b303b159150816101ff575b50826101b0565b60081c60ff166001149050826101f8565b9050600160ff8260081c1610906101a9565b5080fd5b80fd5b503461022657806020806003193601126103e3576004353383526002825260ff604084205416156103df57808352600182526040832033600052825260ff60406000205416156103df5780835282825260ff6005604085200154166103df5761029181611ddd565b610299575050f35b8083528282526103526040842060058101600160ff1982541617905560018060a01b039385806004876002860154166102e86003870154966102e16040518095819301611c69565b0383611b19565b604051956102f587611afe565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d156103d6573d61033681611bbf565b906103446040519283611b19565b81528781933d92013e612313565b5060405191817f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758580a26009541660085490803b156103d257838560449281958395637a2672c760e01b8552600485015260248401525af180156103c7576103b75750f35b6103c090611aba565b6102265780f35b6040513d84823e3d90fd5b8480fd5b60609150612313565b5050fd5b50fd5b503461022657604036600319011261022657610400611a7f565b90610409611a95565b91303303610222576001600160a01b038181168084526002602052604084205460ff16156105e15781851680855260ff6040862054166103d257845b600380548210156105d75784849161045c84611a44565b9054911b1c16146104755761047090611db8565b610445565b85966104836104a292611a44565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81855260026020526040852060ff199081815416905581865260016040872091825416179055604051917f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908680a27ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8580a28160095416600854813b156105d357630b058e4560e21b835260048301526001600160a01b038416602483015284908290604490829084905af19081156105c85784916105b4575b5050600954169060085490823b156105af57604051633419164560e21b815260048101929092526001600160a01b031660248201529082908290818381604481015b03925af180156103c7576103b75750f35b505050fd5b6105bd90611aba565b6103df57823861055c565b6040513d86823e3d90fd5b8580fd5b50508495506104a2565b8380fd5b50346102265780600319360112610226576020600454604051908152f35b5034610226578060031936011261022657602060405160328152f35b50346102265760203660031901126102265761063c600435612027565b80f35b50346102265760203660031901126102265761063c600435611f51565b5034610226578060031936011261022657602060ff600654166040519015158152f35b50346102265780600319360112610226576020600554604051908152f35b503461022657602080600319360112610222576004359060038054906106c282611e84565b928594865b848110610722578787876106da82611e84565b925b8281106106f557604051806106f18682611d3f565b0390f35b61071d906001600160a01b0361070b8285611eb6565b51166107178287611eb6565b52611db8565b6106dc565b81885260018084526040892061073783611a44565b90546001600160a01b0391881b1c8116600090815291865260409091205460ff1661076d575b505061076890611db8565b6106c7565b610778839993611a44565b905490871b1c166107898389611eb6565b52810180911161079d57956107683861075d565b634e487b7160e01b88526011600452602488fd5b503461022657608036600319011261022657602480356004356107d2611aab565b9260643593841515850361090f5760058054916107ee83611e84565b968892895b858110610886578a8a8a8a61081061080b8284611eca565b611e84565b92815b83811061085f578486604051918291602080840190808552835180925280604086019401925b82811061084857505050500390f35b835185528695509381019392810192600101610839565b8061086d6108819284611eb6565b5161071761087b8684611eca565b88611eb6565b610813565b83806108f7575b80156108d8575b6108a7575b6108a290611db8565b6107f3565b93846108b3828c611eb6565b52600181018091116108c55793610899565b634e487b7160e01b8b526011600452868bfd5b508280156108945750808b528a60205260ff8260408d20015416610894565b50808b528a60205260ff8260408d200154161561088d565b600080fd5b50346102265780600319360112610226576040516003805480835290835260208083019360008051602061239d83398151915292915b82821061096d576106f18561096181890382611b19565b60405191829182611d3f565b83546001600160a01b03168652948501946001938401939091019061094a565b5034610226576020366003190112610226576040610a2e9160043581528060205220604051906109c1826102e18184611c69565b610a54604051916109e0836109d98160018501611c69565b0384611b19565b60018060a01b03600282015416906003810154610a3c60ff600560405194610a1686610a0f8160048501611c69565b0387611b19565b0154169560405198899860c08a5260c08a0190611cff565b9088820360208a0152611cff565b92604087015260608601528482036080860152611cff565b90151560a08301520390f35b50346102265760a0366003190112610226576004356001600160401b03811161022257610a91903690600401611c11565b6024356001600160401b038111610ff957610ab0903690600401611c11565b90604435906001600160a01b038216820361090f576084356001600160401b0381116103d257366023820112156103d257610af5903690602481600401359101611bda565b6001600160a01b038316156103d25760055493604051610b1481611ae3565b83815281602082015260018060a01b038516604082015260643560608201528260808201528660a0820152858752866020526040872081518051906001600160401b038211610f07578190610b7382610b6d8654611c2f565b86612357565b602090601f8311600114610f95578b92610f8a575b50508160011b916000199060031b1c19161781555b602082015180516001600160401b038111610f0757806001840192610bc682610b6d8654611c2f565b602090601f8311600114610f26578c92610f1b575b50508160011b916000199060031b1c19161790555b6002810160018060a01b036040840151166bffffffffffffffffffffffff60a01b82541617905560608201516003820155608082015180516001600160401b038111610f07576004830191610c4f82610c498554611c2f565b85612357565b6020908b601f8411600114610e9c579260059492819260a0979592610e91575b50508160011b916000199060031b1c19161790555b01910151151560ff8019835416911617905560055460018101809111610e7d57908693929160055585845283602052857fd7a3e44e966772c8f96e617308d18b83723c2b701c85a3c62134d280b0b3ce6e6040862060405180916020825260c0602083015260ff6005610d48610cfd60e0860185611c69565b610d17601f19918288820301604089015260018701611c69565b60028601546001600160a01b031660608801526003860154608088015286810390910160a087015260048501611c69565b92015416151560c08301520390a260018060a01b03600954169160085460405194610d7286611ae3565b855260208501928352604085019660018060a01b031687526060850160643581526080860192835260a0860190878252853b15610e7957610df0988a958995610e2d93610e066040519d8e9c8d9b8c9a63b8d71afd60e01b8c5260048c015260248b0152606060448b01525160c060648b01526101248a0190611cff565b93519360631994858a83030160848b0152611cff565b93516001600160a01b031660a48801525160c48701525185830390910160e4860152611cff565b9051151561010483015203925af18015610e6e57610e5a575b602082610e5281612027565b604051908152f35b610e648391611aba565b6102225781610e46565b6040513d85823e3d90fd5b8780fd5b634e487b7160e01b87526011600452602487fd5b015190503880610c6f565b50838c5260208c209190601f1984168d5b818110610eef575092600192859260a098966005989610610ed6575b505050811b019055610c84565b015160001960f88460031b161c19169055388080610ec9565b92936020600181928786015181550195019301610ead565b634e487b7160e01b8a52604160045260248afd5b015190503880610bdb565b848d5260208d209250601f1984168d5b818110610f725750908460019594939210610f59575b505050811b019055610bf0565b015160001960f88460031b161c19169055388080610f4c565b92936020600181928786015181550195019301610f36565b015190503880610b88565b848c5260208c209250601f1984168c5b818110610fe15750908460019594939210610fc8575b505050811b018155610b9d565b015160001960f88460031b161c19169055388080610fbb565b92936020600181928786015181550195019301610fa5565b8280fd5b50346102265760a036600319011261022657611017611a95565b6001600160401b03906044358281116105e157611038903690600401611b51565b90606435906084359182151580930361090f57600690815460ff94858260101c16159283809461136a575b8015611350575b61107390611ed7565b61ff00198084166101009081178755938561133d575b506001600160a01b039687168015611306576004356008556bffffffffffffffffffffffff60a01b6009541617600955855490888260101c1615948591829687936112f7575b80156112dd575b6110df90611ed7565b83161787556112ca575b508751603281111590816112bf575b816112b5575b816112ab575b50156112a75789805b895181101561118b5787611121828c611eb6565b511682526002602081815260408420548b16158a848e83611174575b505050156105e15761116d938a611154858f611eb6565b511690525260408c20805460ff19166001179055611db8565b8a9061110d565b61117f929350611eb6565b511615158a848e61113d565b509690898996978751918211610f0757600160401b8211610f075760035482600355808310611283575b5060208098019060038b528a5b838110611261575050505060045585549116918260ff198316178655611227575b50506111ed578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989162ff000019815416905560405160018152a181808280f35b62ff00ff19161783557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024988260405160018152a184806111e3565b8251821660008051602061239d833981519152820155918901916001016111c2565b6112a1908360008051602061239d8339815191529182019101611f3a565b8a6111b5565b8980fd5b9050151538611104565b82151591506110fe565b8083111591506110f8565b62ffff00191662010100178555386110e9565b50303b1580156110d65750600884901c8b166001146110d6565b5060018b8560081c16106110cf565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b62ffff0019166201010017865538611089565b50303b15801561106a5750600883901c871660011461106a565b506001878460081c1610611063565b50346102265780600319360112610226576009546040516001600160a01b039091168152602090f35b50346102265780600319360112610226576020600854604051908152f35b5034610226576020908160031936011261022657600380548291600435835b8381106113f0578686604051908152f35b81855260018088526040862061140583611a44565b905490861b1c6001600160a01b03166000908152908952604090205460ff16611438575b5061143390611db8565b6113df565b8691960180911161144c5794611433611429565b634e487b7160e01b85526011600452602485fd5b503461022657602036600319011261022657602061147f600435611ddd565b6040519015158152f35b5034610226576020366003190112610226576114a3611a7f565b90303303610226576001600160a01b03828116808352600260205260408320549193909160ff16610ff9578115610ff957600354600181018091116115dd5760045490603281111591826115d2575b826115c8575b50816115be575b5015610ff957818352600260205260408320805460ff1916600117905560035493600160401b8510156115aa5761154182610483876001889901600355611a44565b604051927ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8580a26009541660085490803b156103d257633419164560e21b845260048401919091526001600160a01b039091166024830152829082908183816044810161059e565b634e487b7160e01b84526041600452602484fd5b90501515386114ff565b15159150386114f8565b8181111592506114f2565b634e487b7160e01b84526011600452602484fd5b503461022657604036600319011261022657600435801515810361090f57602491823590811515820361090f578092819260058054945b85811061163a57602087604051908152f35b838061169f575b8015611680575b61165b575b61165690611db8565b611628565b956001810180911161166d579561164d565b634e487b7160e01b855260116004528785fd5b5082801561164857508085528460205260ff8260408720015416611648565b508085528460205260ff826040872001541615611641565b50346102265760403660031901126102265760406116d3611a95565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346102265760203660031901126102265760209060ff906040906001600160a01b0361172e611a7f565b168152600284522054166040519015158152f35b503461022657806020806003193601126103e357600435906117626122bd565b3383526002815260ff604084205416156103df57818352600181526040832033600052815260ff60406000205416156103df5781835282815260ff6005604085200154166103df576001815260408320903360005252604060002060ff1981541690556040519080337ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e98580a36001600755600954600854906001600160a01b0316803b156103d2576303df7ba160e31b845260048401919091523360248401526044830191909152829082908183816064810161059e565b503461022657602036600319011261022657611855611a7f565b303303610222576001600160a01b0381811680845260026020526040842080549293919260ff8116156105d35760ff19169055835b600380546000198101908111610e7d57808310156119be5784866118ad85611a44565b905490851b1c16146118c95750506118c490611db8565b61188a565b856118eb93926118df6104839398969798611a44565b9054911b1c1691611a44565b60035480156119aa57849291906000190161190581611a44565b8382549160031b1b1916905580600355806004541161199b575b50604051937f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908480a26009541660085491813b156105e157630b058e4560e21b855260048501929092526001600160a01b0390911660248401528290604490829084905af180156103c757611992575080f35b61063c90611aba565b6119a490611f51565b3861191f565b634e487b7160e01b85526031600452602485fd5b50505090916118eb565b503461022657602036600319011261022657600435906003548210156102265760206119f383611a44565b905460405160039290921b1c6001600160a01b03168152f35b9050346102225760203660031901126102225760043563ffffffff60e01b8116809103610ff9576301ffc9a760e01b14815260209150f35b600354811015611a6957600360005260008051602061239d8339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361090f57565b602435906001600160a01b038216820361090f57565b60443590811515820361090f57565b6001600160401b038111611acd57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b03821117611acd57604052565b604081019081106001600160401b03821117611acd57604052565b90601f801991011681019081106001600160401b03821117611acd57604052565b6001600160401b038111611acd5760051b60200190565b81601f8201121561090f57803591611b6883611b3a565b92611b766040519485611b19565b808452602092838086019260051b82010192831161090f578301905b828210611ba0575050505090565b81356001600160a01b038116810361090f578152908301908301611b92565b6001600160401b038111611acd57601f01601f191660200190565b929192611be682611bbf565b91611bf46040519384611b19565b82948184528183011161090f578281602093846000960137010152565b9080601f8301121561090f57816020611c2c93359101611bda565b90565b90600182811c92168015611c5f575b6020831014611c4957565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c3e565b9060009291805491611c7a83611c2f565b918282526001938481169081600014611cdc5750600114611c9c575b50505050565b90919394506000526020928360002092846000945b838610611cc8575050505001019038808080611c96565b805485870183015294019385908201611cb1565b9294505050602093945060ff191683830152151560051b01019038808080611c96565b919082519283825260005b848110611d2b575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611d0a565b6020908160408183019282815285518094520193019160005b828110611d66575050505090565b83516001600160a01b031685529381019392810192600101611d58565b34611d8a57565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b6000198114611dc75760010190565b634e487b7160e01b600052601160045260246000fd5b6000806003918254936004908154935b868110611e005750505050505050600090565b81600052600160ff60208281526040908160002090611e1e86611a44565b9054908c1b1c6001600160a01b03166000908152919052205416611e5e575b858514611e535750611e4e90611db8565b611ded565b965050505050505090565b93848101809111611e6f5793611e3d565b601184634e487b7160e01b6000525260246000fd5b90611e8e82611b3a565b611e9b6040519182611b19565b8281528092611eac601f1991611b3a565b0190602036910137565b8051821015611a695760209160051b010190565b91908203918211611dc757565b15611ede57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b818110611f45575050565b60008155600101611f3a565b30330361090f576003546032811115908161201c575b81612012575b81612008575b501561090f57806004557fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a6020604051838152a16009546008546001600160a01b0390911691823b1561090f57604460009283604051958694859363d6df593560e01b8552600485015260248401525af18015611ffc57611ff15750565b611ffa90611aba565b565b6040513d6000823e3d90fd5b9050151538611f73565b8215159150611f6d565b808311159150611f67565b61202f6122bd565b6000903382526020906002825260ff91604092808486205416156103d257828552848252838520600201546001600160a01b0392908316156105d35760019182825285872033885282528086882054166122b95784875282825285872033885282528587209060ff1991848382541617905585337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef8a80a3806006541615612142575b50505060075560095416600854813b156103d25783516338cf071f60e11b81526004810191909152336024820152604481019290925290919083908390606490829084905af19081156121395750612128575050565b6121328291611aba565b6102265750565b513d84823e3d90fd5b6002835280878920541615610e7957858852838352868820338952835280878920541615610e795785885287835260058789200154166122b95761218585611ddd565b612190575b806120d2565b612235918588528781528688209184600584019182541617905587806004876002860154166121cd6003870154966102e18d518095819301611c69565b8a51956121d987611afe565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d156103d6573d61221a81611bbf565b906122278a519283611b19565b81528981933d92013e612313565b508351837f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758780a28260095416600854813b15610e79576044838980948294637a2672c760e01b845260048401528960248401525af180156122af5761229c575b8061218a565b6122a890959195611aba565b9338612296565b85513d88823e3d90fd5b8680fd5b6002600754146122ce576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9091901561231f575090565b81511561232f5750805190602001fd5b60405162461bcd60e51b815260206004820152908190612353906024830190611cff565b0390fd5b9190601f811161236657505050565b611ffa926000526020600020906020601f840160051c83019310612392575b601f0160051c0190611f3a565b909150819061238556fec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba2646970667358221220390db6ff2ca12409207d091c84a636723ee6477108d588cab954f574c245f4c264736f6c63430008120033";

type EndowmentMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSig__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSig> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSig {
    return super.attach(address) as EndowmentMultiSig;
  }
  override connect(signer: Signer): EndowmentMultiSig__factory {
    return super.connect(signer) as EndowmentMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSig {
    return new Contract(address, _abi, signerOrProvider) as EndowmentMultiSig;
  }
}
