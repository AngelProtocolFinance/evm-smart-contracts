/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSig,
  EndowmentMultiSigInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSig";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Confirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Execution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "requireExecution",
        type: "bool",
      },
    ],
    name: "ExecutionRequiredChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "RequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "Revocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "Submission",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "EMITTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ENDOWMENT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_requireExecution",
        type: "bool",
      },
    ],
    name: "changeRequireExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    name: "changeRequirement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "confirmations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getConfirmations",
    outputs: [
      {
        internalType: "address[]",
        name: "ownerConfirmations",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    name: "getTransactionIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "transactionIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_emitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireExecution",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "replaceOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requireExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57600160075561260390816100218239f35b600080fdfe6080806040526004361015610028575b5036156100205761001e611f94565b005b61001e611f94565b600090813560e01c90816301ffc9a714611c1c57508063025e7c2714611bd8578063173825d914611a3757806320ea8d861461193e5780632f54bf6e146118ff5780633411c81c146118b357806354741525146117f15780637065cb4814611689578063784547a7146116605780638b51d13f146115c05780638dcc95ca146115a257806394645f2714611579578063969e7e34146111fd5780639ace38c2146110f8578063a0e67e2b1461107f578063a8abe69a14610f21578063b5dc40c314610e21578063b77bf60014610e03578063b781694a14610de0578063b9b861ef14610d3a578063ba51a6df14610d1d578063c01a8c8414610cfd578063d74f8edd14610ce1578063dc8452cd14610cc3578063e20056e614610abe578063ee22610b14610905578063f06a7522146102345763f72b230d0361000f5734610231576060366003190112610231576004356001600160401b03811161022d57610195903690600401611d70565b5061019e611cca565b506101c160065460ff8160101c1615908161021b575b81156101f8575b506120e8565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd08125b5c1b195b595b9d1959608a1b6044820152606490fd5b303b1591508161020a575b50826101bb565b60081c60ff16600114905082610203565b9050600160ff8260081c1610906101b4565b5080fd5b80fd5b50346102315760c0366003190112610231576004356001600160401b03811161022d57610265903690600401611f4d565b6024356001600160401b0381116106f657610284903690600401611f4d565b604435916001600160a01b0383168303610900576084356001600160401b0381116108fc576102b7903690600401611f4d565b9260a4356001600160401b0381116108f8576102d7903690600401611f4d565b6001600160a01b038216156108f857600554946040516102f681611d02565b84815285602082015260018060a01b038416604082015260643560608201528160808201528760a08201528260c082015286885287602052604088209080518051906001600160401b03821161080657819061035c826103568754611dde565b87612568565b602090601f8311600114610894578c92610889575b50508160011b916000199060031b1c19161782555b602081015180516001600160401b038111610806578060018501926103b5826103af8654611dde565b86612568565b602090601f8311600114610825578d9261081a575b50508160011b916000199060031b1c19161790555b6002820160018060a01b036040830151166bffffffffffffffffffffffff60a01b8254161790556060810151600383015560808101519081516001600160401b03811161080657600484019061043f816104398454611dde565b84612568565b60208c601f831160011461079c579060c09583610791575b50508160011b916000199060031b1c19161790555b6005830160a0820151151560ff801983541691161790550151908151906001600160401b03821161077d576006829101926104ab826103af8654611dde565b602090601f8311600114610719578b9261070e575b50508160011b916000199060031b1c19161790555b6005546001810181116106fa5790600188959493920160055586855284602052867f180494405e1822cfac7f46cb28e05d25c4e51a01231c971781dfcab4f00639216105ac604088206040519182916020835260e06020840152600661053f610100850183611e18565b9161058d61055d601f19948588820301604089015260018401611e18565b60028301546001600160a01b0316606088015260038301546080880152868103850160a088015260048301611e18565b9260ff600583015416151560c08701528584030160e086015201611e18565b0390a260018060a01b03600954169260085496604051956105cc87611d02565b865260208601526001600160a01b031660408501526064356060850152608084015260a0830184905260c0830152803b156106f6576106b49383604051809681958294631f9ecc9d60e31b8452600484015289602484015260606044840152610642815160e06064860152610144850190611eae565b60c061069461066360208501519360631994858983030160848a0152611eae565b60408501516001600160a01b031660a4880152606085015160c48801526080850151878203850160e4890152611eae565b9260a0810151151561010487015201519084830301610124850152611eae565b03925af180156106eb576106d7575b6020826106cf81612238565b604051908152f35b6106e18391611cd9565b61022d57816106c3565b6040513d85823e3d90fd5b8280fd5b634e487b7160e01b88526011600452602488fd5b0151905038806104c0565b848c5260208c209250601f1984168c5b818110610765575090846001959493921061074c575b505050811b0190556104d5565b015160001960f88460031b161c1916905538808061073f565b92936020600181928786015181550195019301610729565b634e487b7160e01b8a52604160045260248afd5b015190503880610457565b91929394601f19841685845260208420935b8181106107ee575091600193918560c098979694106107d5575b505050811b01905561046c565b015160001960f88460031b161c191690553880806107c8565b929360206001819287860151815501950193016107ae565b634e487b7160e01b8b52604160045260248bfd5b0151905038806103ca565b848e5260208e209250601f1984168e5b8181106108715750908460019594939210610858575b505050811b0190556103df565b015160001960f88460031b161c1916905538808061084b565b92936020600181928786015181550195019301610835565b015190503880610371565b858d5260208d209250601f1984168d5b8181106108e057509084600195949392106108c7575b505050811b018255610386565b015160001960f88460031b161c191690553880806108ba565b929360206001819287860151815501950193016108a4565b8580fd5b8480fd5b600080fd5b50346102315780602080600319360112610abb576004353383526002825260ff60408420541615610ab757808352600182526040832033600052825260ff6040600020541615610ab75780835282825260ff600560408520015416610ab75761096d81611fee565b610975575050f35b808352828252610a2e6040842060058101600160ff1982541617905560018060a01b039385806004876002860154166109c46003870154966109bd6040518095819301611e18565b0383611d38565b604051956109d187611d1d565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d15610aae573d610a1281611f32565b90610a206040519283611d38565b81528781933d92013e612524565b5060405191817f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758580a26009541660085490803b156108fc57838560449281958395637a2672c760e01b8552600485015260248401525af18015610aa357610a935750f35b610a9c90611cd9565b6102315780f35b6040513d84823e3d90fd5b60609150612524565b5050fd5b50fd5b503461023157604036600319011261023157610ad8611c8f565b90610ae1611ca5565b30330361022d576001600160a01b038381168084526002602052604084205460ff1615610cbf578183169485855260ff6040862054166108fc57845b60038054821015610cb657848491610b3484611c54565b9054911b1c1614610b4d57610b4890611fc9565b610b1d565b95610b7b85610b5c8899611c54565b90919082549060031b9160018060a01b03809116831b921b1916179055565b82865260026020526040862060ff199081815416905581875260016040882091825416179055604051927f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908780a27ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8680a2826009541660085490803b15610cb257630b058e4560e21b845260048401919091526001600160a01b0391909116602483015284908290604490829084905af1908115610ca7578491610c93575b5050600954169060085490823b15610c8e57604051633419164560e21b815260048101929092526001600160a01b031660248201529082908290818381604481015b03925af18015610aa357610a935750f35b505050fd5b610c9c90611cd9565b610ab7578238610c3b565b6040513d86823e3d90fd5b8680fd5b50508495610b7b565b8380fd5b50346102315780600319360112610231576020600454604051908152f35b5034610231578060031936011261023157602060405160328152f35b503461023157602036600319011261023157610d1a600435612238565b80f35b503461023157602036600319011261023157610d1a600435612162565b50346102315760203660031901126102315780610d55611cbb565b303303610abb57151560ff196006541660ff8216176006557fc5c8836d4d5a31efcf66fc17ae048d7d24efd6bac1c903efa11293bcebf63cf16020604051838152a16009546008546001600160a01b0390911691823b15610c8e57604484928360405195869485936316aaac7f60e01b8552600485015260248401525af18015610aa357610a935750f35b5034610231578060031936011261023157602060ff600654166040519015158152f35b50346102315780600319360112610231576020600554604051908152f35b50346102315760208060031936011261022d57600435906003805490610e4682612095565b928594865b848110610ea657878787610e5e82612095565b925b828110610e795760405180610e758682611eee565b0390f35b610ea1906001600160a01b03610e8f82856120c7565b5116610e9b82876120c7565b52611fc9565b610e60565b818852600180845260408920610ebb83611c54565b90546001600160a01b0391881b1c8116600090815291865260409091205460ff16610ef1575b5050610eec90611fc9565b610e4b565b610efc839993611c54565b905490871b1c16610f0d83896120c7565b5281018091116106fa5795610eec38610ee1565b50346102315760803660031901126102315760248035600435610f42611cca565b92606435938415158503610900576005805491610f5e83612095565b968892895b858110610ff6578a8a8a8a610f80610f7b82846120db565b612095565b92815b838110610fcf578486604051918291602080840190808552835180925280604086019401925b828110610fb857505050500390f35b835185528695509381019392810192600101610fa9565b80610fdd610ff192846120c7565b51610e9b610feb86846120db565b886120c7565b610f83565b8380611067575b8015611048575b611017575b61101290611fc9565b610f63565b9384611023828c6120c7565b52600181018091116110355793611009565b634e487b7160e01b8b526011600452868bfd5b508280156110045750808b528a60205260ff8260408d20015416611004565b50808b528a60205260ff8260408d2001541615610ffd565b5034610231578060031936011261023157604051600380548083529083526020808301936000805160206125ae83398151915292915b8282106110d857610e75856110cc81890382611d38565b60405191829182611eee565b83546001600160a01b0316865294850194600193840193909101906110b5565b50346102315760203660031901126102315760406111c29160043581528060205220610e75604051916111368361112f8184611e18565b0384611d38565b60066111e86040516111568161114f8160018801611e18565b0382611d38565b600284015460038501546040516001600160a01b03909216926111d09061118b846111848160048c01611e18565b0385611d38565b6111ae60ff60058a015416986111a7604051809a819301611e18565b0388611d38565b6040519a8b9a60e08c5260e08c0190611eae565b908a820360208c0152611eae565b92604089015260608801528682036080880152611eae565b91151560a085015283820360c0850152611eae565b50346102315760a036600319011261023157611217611ca5565b6001600160401b0390604435828111610cbf57611238903690600401611d70565b90606435906084359182151580930361090057600690815460ff94858260101c16159283809461156a575b8015611550575b611273906120e8565b61ff00198084166101009081178755938561153d575b506001600160a01b039687168015611506576004356008556bffffffffffffffffffffffff60a01b6009541617600955855490888260101c1615948591829687936114f7575b80156114dd575b6112df906120e8565b83161787556114ca575b508751603281111590816114bf575b816114b5575b816114ab575b50156114a75789805b895181101561138b5787611321828c6120c7565b511682526002602081815260408420548b16158a848e83611374575b50505015610cbf5761136d938a611354858f6120c7565b511690525260408c20805460ff19166001179055611fc9565b8a9061130d565b61137f9293506120c7565b511615158a848e61133d565b50969089899697875191821161077d57600160401b821161077d5760035482600355808310611483575b5060208098019060038b528a5b838110611461575050505060045585549116918260ff198316178655611427575b50506113ed578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989162ff000019815416905560405160018152a181808280f35b62ff00ff19161783557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024988260405160018152a184806113e3565b825182166000805160206125ae833981519152820155918901916001016113c2565b6114a190836000805160206125ae833981519152918201910161214b565b8a6113b5565b8980fd5b9050151538611304565b82151591506112fe565b8083111591506112f8565b62ffff00191662010100178555386112e9565b50303b1580156112d65750600884901c8b166001146112d6565b5060018b8560081c16106112cf565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b62ffff0019166201010017865538611289565b50303b15801561126a5750600883901c871660011461126a565b506001878460081c1610611263565b50346102315780600319360112610231576009546040516001600160a01b039091168152602090f35b50346102315780600319360112610231576020600854604051908152f35b5034610231576020908160031936011261023157600380548291600435835b8381106115f0578686604051908152f35b81855260018088526040862061160583611c54565b905490861b1c6001600160a01b03166000908152908952604090205460ff16611638575b5061163390611fc9565b6115df565b8691960180911161164c5794611633611629565b634e487b7160e01b85526011600452602485fd5b503461023157602036600319011261023157602061167f600435611fee565b6040519015158152f35b5034610231576020366003190112610231576116a3611c8f565b90303303610231576001600160a01b03828116808352600260205260408320549193909160ff166106f65781156106f657600354600181018091116117dd5760045490603281111591826117d2575b826117c8575b50816117be575b50156106f657818352600260205260408320805460ff1916600117905560035493600160401b8510156117aa5761174182610b5c876001889901600355611c54565b604051927ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d8580a26009541660085490803b156108fc57633419164560e21b845260048401919091526001600160a01b0390911660248301528290829081838160448101610c7d565b634e487b7160e01b84526041600452602484fd5b90501515386116ff565b15159150386116f8565b8181111592506116f2565b634e487b7160e01b84526011600452602484fd5b50346102315760403660031901126102315761180b611cbb565b6024918235908115158203610900578092819260058054945b85811061183657602087604051908152f35b838061189b575b801561187c575b611857575b61185290611fc9565b611824565b95600181018091116118695795611849565b634e487b7160e01b855260116004528785fd5b5082801561184457508085528460205260ff8260408720015416611844565b508085528460205260ff82604087200154161561183d565b50346102315760403660031901126102315760406118cf611ca5565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346102315760203660031901126102315760209060ff906040906001600160a01b0361192a611c8f565b168152600284522054166040519015158152f35b50346102315780602080600319360112610abb576004359061195e6124ce565b3383526002815260ff60408420541615610ab757818352600181526040832033600052815260ff6040600020541615610ab75781835282815260ff600560408520015416610ab7576001815260408320903360005252604060002060ff1981541690556040519080337ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e98580a36001600755600954600854906001600160a01b0316803b156108fc576303df7ba160e31b8452600484019190915233602484015260448301919091528290829081838160648101610c7d565b503461023157602036600319011261023157611a51611c8f565b30330361022d576001600160a01b0381811680845260026020526040842080549293919260ff8116156108f85760ff19169055835b600380546000198101908111611bc45780831015611bba578486611aa985611c54565b905490851b1c1614611ac5575050611ac090611fc9565b611a86565b85611ae79392611adb610b5c9398969798611c54565b9054911b1c1691611c54565b6003548015611ba6578492919060001901611b0181611c54565b8382549160031b1b19169055806003558060045411611b97575b50604051937f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b908480a26009541660085491813b15610cbf57630b058e4560e21b855260048501929092526001600160a01b0390911660248401528290604490829084905af18015610aa357611b8e575080f35b610d1a90611cd9565b611ba090612162565b38611b1b565b634e487b7160e01b85526031600452602485fd5b5050509091611ae7565b634e487b7160e01b87526011600452602487fd5b50346102315760203660031901126102315760043590600354821015610231576020611c0383611c54565b905460405160039290921b1c6001600160a01b03168152f35b90503461022d57602036600319011261022d5760043563ffffffff60e01b81168091036106f6576301ffc9a760e01b14815260209150f35b600354811015611c795760036000526000805160206125ae8339815191520190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361090057565b602435906001600160a01b038216820361090057565b60043590811515820361090057565b60443590811515820361090057565b6001600160401b038111611cec57604052565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b03821117611cec57604052565b604081019081106001600160401b03821117611cec57604052565b90601f801991011681019081106001600160401b03821117611cec57604052565b6001600160401b038111611cec5760051b60200190565b81601f8201121561090057803591611d8783611d59565b92611d956040519485611d38565b808452602092838086019260051b820101928311610900578301905b828210611dbf575050505090565b81356001600160a01b0381168103610900578152908301908301611db1565b90600182811c92168015611e0e575b6020831014611df857565b634e487b7160e01b600052602260045260246000fd5b91607f1691611ded565b9060009291805491611e2983611dde565b918282526001938481169081600014611e8b5750600114611e4b575b50505050565b90919394506000526020928360002092846000945b838610611e77575050505001019038808080611e45565b805485870183015294019385908201611e60565b9294505050602093945060ff191683830152151560051b01019038808080611e45565b919082519283825260005b848110611eda575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611eb9565b6020908160408183019282815285518094520193019160005b828110611f15575050505090565b83516001600160a01b031685529381019392810192600101611f07565b6001600160401b038111611cec57601f01601f191660200190565b81601f8201121561090057803590611f6482611f32565b92611f726040519485611d38565b8284526020838301011161090057816000926020809301838601378301015290565b34611f9b57565b6040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b6000198114611fd85760010190565b634e487b7160e01b600052601160045260246000fd5b6000806003918254936004908154935b8681106120115750505050505050600090565b81600052600160ff6020828152604090816000209061202f86611c54565b9054908c1b1c6001600160a01b0316600090815291905220541661206f575b858514612064575061205f90611fc9565b611ffe565b965050505050505090565b93848101809111612080579361204e565b601184634e487b7160e01b6000525260246000fd5b9061209f82611d59565b6120ac6040519182611d38565b82815280926120bd601f1991611d59565b0190602036910137565b8051821015611c795760209160051b010190565b91908203918211611fd857565b156120ef57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b818110612156575050565b6000815560010161214b565b303303610900576003546032811115908161222d575b81612223575b81612219575b501561090057806004557fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a6020604051838152a16009546008546001600160a01b0390911691823b1561090057604460009283604051958694859363d6df593560e01b8552600485015260248401525af1801561220d576122025750565b61220b90611cd9565b565b6040513d6000823e3d90fd5b9050151538612184565b821515915061217e565b808311159150612178565b6122406124ce565b6000903382526020906002825260ff91604092808486205416156108fc57828552848252838520600201546001600160a01b0392908316156108f8576001918282528587203388528252808688205416610cb25784875282825285872033885282528587209060ff1991848382541617905585337f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef8a80a3806006541615612353575b50505060075560095416600854813b156108fc5783516338cf071f60e11b81526004810191909152336024820152604481019290925290919083908390606490829084905af190811561234a5750612339575050565b6123438291611cd9565b6102315750565b513d84823e3d90fd5b60028352808789205416156124ca578588528383528688203389528352808789205416156124ca578588528783526005878920015416610cb25761239685611fee565b6123a1575b806122e3565b612446918588528781528688209184600584019182541617905587806004876002860154166123de6003870154966109bd8d518095819301611e18565b8a51956123ea87611d1d565b601d87527f63616c6c20726576657274656420776974686f7574206d657373616765000000868801528583519301915af13d15610aae573d61242b81611f32565b906124388a519283611d38565b81528981933d92013e612524565b508351837f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed758780a28260095416600854813b156124ca576044838980948294637a2672c760e01b845260048401528960248401525af180156124c0576124ad575b8061239b565b6124b990959195611cd9565b93386124a7565b85513d88823e3d90fd5b8780fd5b6002600754146124df576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b90919015612530575090565b8151156125405750805190602001fd5b60405162461bcd60e51b815260206004820152908190612564906024830190611eae565b0390fd5b9190601f811161257757505050565b61220b926000526020600020906020601f840160051c830193106125a3575b601f0160051c019061214b565b909150819061259656fec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba264697066735822122023003de33e79d24da2d7c2bb4e760717770110fff10a4a50583759b31fa0bd2364736f6c63430008120033";

type EndowmentMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSig__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSig> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSig {
    return super.attach(address) as EndowmentMultiSig;
  }
  override connect(signer: Signer): EndowmentMultiSig__factory {
    return super.connect(signer) as EndowmentMultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSig {
    return new Contract(address, _abi, signerOrProvider) as EndowmentMultiSig;
  }
}
