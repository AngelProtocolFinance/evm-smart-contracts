/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultiSigWalletFactory,
  MultiSigWalletFactoryInterface,
} from "../../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSigFactory.sol/MultiSigWalletFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "proxyAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "instantiation",
        type: "address",
      },
    ],
    name: "ContractInstantiation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "emitterAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "endowmentIdToMultisig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getInstantiationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "instantiations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isInstantiation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxyAdmin",
        type: "address",
      },
    ],
    name: "updateProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100d757601f61181d38819003918201601f19168301916001600160401b038311848410176100dc5780849260409485528339810103126100d757610052602061004b836100f2565b92016100f2565b600380546001600160a01b03198082163390811790935592936001600160a01b0392839283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a316926100aa841515610106565b16916100b7831515610106565b81600454161760045560055416176005556040516116d890816101458239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100d757565b1561010d57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fdfe60806040526004803610156200001457600080fd5b600090813560e01c8063025b22bc146200070a5780630f990c5a14620003605780632f4f3316146200032057806357183c8214620002be578063715018a6146200025e5780638da5cb5b14620002355780638f83847814620001f9578063bb48cd3a14620001b1578063de15304c146200017d5763f2fde38b146200009857600080fd5b34620001795760203660031901126200017957620000b56200074d565b620000bf620007d1565b6001600160a01b038091169182156200010f5750600354826001600160a01b0319821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60849060206040519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5080fd5b503462000179576020366003190112620001795760406020926001600160a01b039235815260028452205416604051908152f35b8234620001f6576020366003190112620001f6576001600160a01b03620001d76200074d565b620001e1620007d1565b166001600160a01b0319600554161760055580f35b80fd5b8234620001f6576020366003190112620001f65760406020916001600160a01b03620002246200074d565b168152600183522054604051908152f35b8234620001f65780600319360112620001f65760206001600160a01b0360035416604051908152f35b8234620001f65780600319360112620001f6576200027b620007d1565b60006001600160a01b036003546001600160a01b03198116600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8234620001f6576040366003190112620001f657620002dc6200074d565b602435916001600160a01b038092168152600160205260408120908154841015620001f657506020926200031091620007a2565b9190546040519260031b1c168152f35b8234620001f6576020366003190112620001f65760ff60406020926001600160a01b036200034d6200074d565b1681528084522054166040519015158152f35b509034620001f6576080366003190112620001f657602435906001600160a01b0382168203620001f6576044359167ffffffffffffffff83116200017957366023840112156200017957828401359267ffffffffffffffff841162000661578360051b9060405194620003d7602084018762000769565b855260246020860192820101903682116200070657602401915b818310620006e0575050506040517f969e7e34000000000000000000000000000000000000000000000000000000006020820152843560248201526001600160a01b038216604482015260a0606482015262000473816200045660c48201876200082a565b60643560848301528560a483015203601f19810183528262000769565b6001600160a01b03855416906001600160a01b03600554166040519283610e3981011067ffffffffffffffff610e3986011117620006cd57610e396200086a8539610e398401526020610e398401015260606040610e398401015281815191826060610e3984010152855b838110620006b0575050610e3981018083016080908101879052601f909301601f19160103019083f08015620006a1576001600160a01b0316926001600160a01b0382163b15620006ac576200058b6001600160a01b03928492836040519586809581947fa6635fa20000000000000000000000000000000000000000000000000000000083528b8d8401528c356024840152838716604484015260c0606484015260c48301906200082a565b60643560848301528360a48301520393165af18015620006a15762000674575b508181528060205260408120600160ff1982541617905533815260016020526040812080549068010000000000000000821015620006615793620005fb82602096600160409695018155620007a2565b81549060031b906001600160a01b0387831b921b19161790557f4fb057ad4a26ed17a57957fa69c306f11987596069b89521c511fc9a894e61618380513381528688820152a13581526002845220816001600160a01b0319825416179055604051908152f35b602483604187634e487b7160e01b835252fd5b67ffffffffffffffff81116200068e5760405238620005ab565b602482604186634e487b7160e01b835252fd5b6040513d84823e3d90fd5b8280fd5b60208282018101516080610e3988018401015285935001620004de565b60248660418a634e487b7160e01b835252fd5b82356001600160a01b03811681036200070257815260209283019201620003f1565b8580fd5b8480fd5b50346200017957602036600319011262000179576001600160a01b03620007306200074d565b6200073a620007d1565b166001600160a01b031982541617905580f35b600435906001600160a01b03821682036200076457565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176200078c57604052565b634e487b7160e01b600052604160045260246000fd5b8054821015620007bb5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03600354163303620007e657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90815180825260208080930193019160005b8281106200084b575050505090565b83516001600160a01b0316855293810193928101926001016200083c56fe604060808152346200030c5762000e39803803806200001e8162000311565b9283398101906060818303126200030c576200003a816200034d565b916020926200004b8484016200034d565b8584015190936001600160401b0391908282116200030c57019280601f850112156200030c5783519362000089620000838662000362565b62000311565b94808652878601928882840101116200030c578288620000aa93016200037e565b823b15620002b2577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03199081166001600160a01b0386811691821790935590959194600093909290917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2805115801590620002aa575b620001fb575b50505050507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f86865493815196818616885216958684820152a18315620001a9575016179055516109dc90816200045d8239f35b60849086519062461bcd60e51b82526004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b895194606086019081118682101762000296578a52602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c89860152660819985a5b195960ca1b8a86015251620002809493929183918291845af4903d156200028c573d62000270620000838262000362565b90815280938a3d92013e620003a3565b50388080808062000133565b60609250620003a3565b634e487b7160e01b85526041600452602485fd5b50836200012d565b865162461bcd60e51b815260048101879052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200033757604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200030c57565b6001600160401b0381116200033757601f01601f191660200190565b60005b838110620003925750506000910152565b818101518382015260200162000381565b91929015620004085750815115620003b9575090565b3b15620003c35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156200041c5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526200044e81518092816024860152602086860191016200037e565b601f01601f19168101030190fdfe60806040526004361015610018575b366100c7576100c7565b6000803560e01c80636e9960c3146100825763aaf10f421461003a575061000e565b3461007f578060031936011261007f5760207f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b0360405191168152f35b80fd5b503461007f578060031936011261007f576001600160a01b037fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660805260206080f35b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103546001600160a01b031633036102a9576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610155575061014d61058d565b602081519101f35b7f4f1ef28600000000000000000000000000000000000000000000000000000000810361018a575061018561077a565b61014d565b7f8f2839700000000000000000000000000000000000000000000000000000000081036101ba5750610185610482565b7ff851a4400000000000000000000000000000000000000000000000000000000081036101ea5750610185610381565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610218576101856103cd565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b6001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e156102ef573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761033e57604052565b6102f3565b6020810190811067ffffffffffffffff82111761033e57604052565b90601f8019910116810190811067ffffffffffffffff82111761033e57604052565b61038961080b565b6001600160a01b037fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416604051906020820152602081526103ca81610322565b90565b6103d561080b565b6001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416604051906020820152602081526103ca81610322565b600435906001600160a01b038216820361042c57565b600080fd5b602090600319011261042c576004356001600160a01b038116810361042c5790565b67ffffffffffffffff811161033e57601f01601f191660200190565b6040519061047c82610343565b60008252565b61048a61080b565b3660041161042c576001600160a01b03806104a436610431565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a181156105235773ffffffffffffffffffffffffffffffffffffffff19161790556103ca61046f565b608460405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b61059561080b565b3660041161042c576001600160a01b036105ae36610431565b16604051906105bc82610343565b60008252803b15610672577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8173ffffffffffffffffffffffffffffffffffffffff19825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061066a575b610650575b505060405161064981610343565b6000815290565b6106629161065c610812565b91610882565b50388061063b565b506000610636565b608460405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b15610672576001600160a01b0381167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8173ffffffffffffffffffffffffffffffffffffffff198254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610772575b610763575050565b61076f9161065c610812565b50565b50600161075b565b3660041161042c57604036600319011261042c57610796610416565b6024359067ffffffffffffffff821161042c573660238301121561042c578160040135916107c383610453565b916107d1604051938461035f565b838352366024858401011161042c5760006020856108039660246001600160a01b0396018388013785010152166106dc565b6103ca61046f565b3461042c57565b604051906060820182811067ffffffffffffffff82111761033e57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103ca9493602081519101845af43d156108c1573d916108a483610453565b926108b2604051948561035f565b83523d6000602085013e610914565b606091610914565b156108d057565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109345750815115610928575090565b6103ca903b15156108c9565b8251909150156109475750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061098d575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061096a56fea264697066735822122030d2d74ba0b9f4869f6658474c94aebdbf130fedc509ccd3658c721c4b89810f64736f6c63430008120033a2646970667358221220535f149bd000ca097f03eafb17aa27a86f579e55389bd85f0d16650b018ec44464736f6c63430008120033";

type MultiSigWalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWalletFactory__factory extends ContractFactory {
  constructor(...args: MultiSigWalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implementationAddress: PromiseOrValue<string>,
    proxyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWalletFactory> {
    return super.deploy(
      implementationAddress,
      proxyAdmin,
      overrides || {}
    ) as Promise<MultiSigWalletFactory>;
  }
  override getDeployTransaction(
    implementationAddress: PromiseOrValue<string>,
    proxyAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      implementationAddress,
      proxyAdmin,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWalletFactory {
    return super.attach(address) as MultiSigWalletFactory;
  }
  override connect(signer: Signer): MultiSigWalletFactory__factory {
    return super.connect(signer) as MultiSigWalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletFactoryInterface {
    return new utils.Interface(_abi) as MultiSigWalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWalletFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiSigWalletFactory;
  }
}
