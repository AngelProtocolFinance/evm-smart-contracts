/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSigEmitter,
  EndowmentMultiSigEmitterInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSigEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "EndowmentDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "EndowmentRequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentRevocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "EndowmentSubmission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "curEmitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "MultisigCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "curEmitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "createMultisig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "depositEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeFailureEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curMultisigfactory",
        type: "address",
      },
    ],
    name: "initEndowmentMultiSigEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "requirementChangeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "submitEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff196000541660005561091a90816100268239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081629a3d061461071a5781631efbdd08146106e55781632c163914146106a55781634cde279914610670578163719e0e3e146105fa5781637a2672c7146105c8578163a6635fa214610408578163b8d71afd1461023f578163c57c815d14610175578163d0645914146100f4575063d6df59351461009b57600080fd5b346100f0577faac3cd9bc9dae4dd99f5738a7de4671af3df56ead26e6e17544981f9a84652ed906100cb36610748565b33855260016020526100e260ff8487205416610869565b82519182526020820152a180f35b5080fd5b919050346101715780600319360112610171577f8bdf3980a6523641ffb824bd83fb88e5b6eb916b180b1dfc7112a4ffb8849f049161016b610134610763565b92338652600160205261014c60ff8288205416610869565b51913582526001600160a01b0390921660208201529081906040820190565b0390a180f35b8280fd5b839150346100f05760203660031901126100f057610191610779565b6001600160a01b0381161561020a5782549160ff83166101d157506001600160a81b031990911660089190911b610100600160a81b031617600117815580f35b606490602086519162461bcd60e51b83528201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152fd5b835162461bcd60e51b8152602081840152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b919050346101715760031991606036840112610404576044359267ffffffffffffffff908185116104005760c09085360301126103e95782519360c08501858110838211176103ed578452859083810135838111610171576102a69085369184010161084b565b86526024810135838111610171576102c39085369184010161084b565b602087019081526102d66044830161078f565b9186880192835260608801946064820135865260848201359081116103e9578101366023820112156103e95761031760a491369060248a8201359101610809565b9160808a0192835201359485151586036103e9576103b261039c8a61037460ff8c6103d99a7f429482dbc11e6849e4ee66f789871e1d0004b6fc7ec5611f551c4ba59afa72e79f60a0019c8d523381526001602052205416610869565b60608b519b8c9b358c5260243560208d01528b01525160c060608b01526101208a01906108a4565b935193605f1994858a83030160808b01526108a4565b93516001600160a01b031660a08801525160c08701525185830390910160e08601526108a4565b905115156101008301520390a180f35b8480fd5b634e487b7160e01b875260418452602487fd5b8580fd5b8380fd5b9050346101715760c036600319011261017157610423610779565b906044356001600160a01b03818116918290036104005760643567ffffffffffffffff918282116105c457366023830112156105c457818501359283116105b1578260051b9560209283610478818a016107cd565b809681520160248199830101913683116105ad576024869101915b838310610595575050505060a4359586151580970361059157828a5460081c16330361055757509080949392911691828952600193848352888a208560ff1982541617905588519860c08a01948a52602435848b015289015260c060608901525180925260e08701959388905b83821061054057897f1953251b48e146eba697dd39efd1f30bda684efc2c1631b559447ae9c2dbd01f8a808b8b608435608084015260a08301520390a180f35b855181168852968201969482019490840190610500565b885162461bcd60e51b815290810184905260146024820152734e6f74206d756c746973696720666163746f727960601b6044820152606490fd5b8980fd5b81906105a08461078f565b8152019101908590610493565b8b80fd5b634e487b7160e01b885260418552602488fd5b8780fd5b5050346100f0577f38ee349836cf24adafe448482f489eaf4b97e6ea3b4f9f52ca2f6677affcd968906100cb36610748565b5050346100f05761016b7f8be764692d684bffbe203086b11cbb096d4aa07a285f83ede38890084c886e9a9161062f366107a3565b90939192338752600160205261064a60ff8289205416610869565b519283526001600160a01b03909316602083015260408201929092529081906060820190565b5050346100f05761016b7f124b82bb5704da5f828628e8390ef028ab36c6792f575a37def1fae3858479699161062f366107a3565b919050346101715780600319360112610171577f576fa1e54c33e168683a198ff41a85ab5bb9933347a712f9a9e36bc2b1a8236b9161016b610134610763565b5050346100f05761016b7fd3c1d432952273e022017a75b5c7b3f94f534b87a8c5d77426f13aab2a6bbe829161062f366107a3565b5050346100f0577f952b6effd8a09725abd1611d1daf1f22338ae324a7e161f87bace4cdccee1f50906100cb365b604090600319011261075e576004359060243590565b600080fd5b602435906001600160a01b038216820361075e57565b600435906001600160a01b038216820361075e57565b35906001600160a01b038216820361075e57565b606090600319011261075e57600435906024356001600160a01b038116810361075e579060443590565b6040519190601f01601f1916820167ffffffffffffffff8111838210176107f357604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff82116107f35761082e601f8301601f19166020016107cd565b938285528282011161075e57816000926020928387013784010152565b9080601f8301121561075e5781602061086693359101610809565b90565b1561087057565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919082519283825260005b8481106108d0575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016108af56fea2646970667358221220f733b9f2c46253c7fc313d86e5a62acce10807161992a56a4d3b2b8c49098c4a64736f6c63430008120033";

type EndowmentMultiSigEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSigEmitter__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSigEmitter> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSigEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSigEmitter {
    return super.attach(address) as EndowmentMultiSigEmitter;
  }
  override connect(signer: Signer): EndowmentMultiSigEmitter__factory {
    return super.connect(signer) as EndowmentMultiSigEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigEmitterInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSigEmitter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EndowmentMultiSigEmitter;
  }
}
