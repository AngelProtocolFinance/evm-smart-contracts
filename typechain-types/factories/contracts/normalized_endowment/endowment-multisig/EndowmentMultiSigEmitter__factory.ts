/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EndowmentMultiSigEmitter,
  EndowmentMultiSigEmitterInterface,
} from "../../../../contracts/normalized_endowment/endowment-multisig/EndowmentMultiSigEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "EndowmentDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "EndowmentOwnerRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "EndowmentRequirementChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "EndowmentRevocation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "EndowmentSubmission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "curEmitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "MultisigCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "addOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "confirmEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "multisigAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "curEmitter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "curOwners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "curRequired",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "curRequireexecution",
        type: "bool",
      },
    ],
    name: "createMultisig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "depositEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "executeFailureEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curMultisigfactory",
        type: "address",
      },
    ],
    name: "initEndowmentMultiSigEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "removeOwnerEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "requirementChangeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revokeEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "address",
            name: "destination",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct MultiSigStorage.Transaction",
        name: "transaction",
        type: "tuple",
      },
    ],
    name: "submitEndowment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff196000541660005561097190816100268239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081629a3d06146107615781631efbdd081461072c5781632c163914146106ec5781634cde2799146106b7578163719e0e3e146106435781637a2672c714610611578163a6635fa214610446578163b8d71afd1461027a578163c57c815d14610175578163d0645914146100f4575063d6df59351461009b57600080fd5b346100f0577faac3cd9bc9dae4dd99f5738a7de4671af3df56ead26e6e17544981f9a84652ed906100cb3661078f565b33855260016020526100e260ff84872054166108b0565b82519182526020820152a180f35b5080fd5b919050346101715780600319360112610171577f8bdf3980a6523641ffb824bd83fb88e5b6eb916b180b1dfc7112a4ffb8849f049161016b6101346107aa565b92338652600160205261014c60ff82882054166108b0565b51913582526001600160a01b0390921660208201529081906040820190565b0390a180f35b8280fd5b839150346100f05760203660031901126100f0576101916107c0565b6001600160a01b038116156102375782549160ff83166101f45750907fffffffffffffffffffffff00000000000000000000000000000000000000000074ffffffffffffffffffffffffffffffffffffffff0060019360081b1691161717815580f35b606490602086519162461bcd60e51b8352820152601360248201527f416c726561647920696e697469616c697a6564000000000000000000000000006044820152fd5b606482602086519162461bcd60e51b8352820152600f60248201527f496e76616c6964204164647265737300000000000000000000000000000000006044820152fd5b8383346100f05760031992606036850112610171576044359367ffffffffffffffff908186116104425760c090863603011261043e57825160c08101958187108388111761042b578596855280840135838111610427576102e090853691840101610892565b82526024810135838111610427576102fd90853691840101610892565b60208301908152610310604483016107d6565b918684019283526060840194606482013586526084820135908111610423578101366023820112156104235761035160a491369060248a8201359101610850565b91608086019283520135948515158603610423576001600160a01b036103f56103df876103b660ff8d7f429482dbc11e6849e4ee66f789871e1d0004b6fc7ec5611f551c4ba59afa72e79f60a06104139d019d8e5233815260016020522054166108b0565b60608c519c8d9c358d528c60206024359101528c01525160c060608c01526101208b01906108fb565b945194605f1995868b83030160808c01526108fb565b94511660a08801525160c087015251908583030160e08601526108fb565b905115156101008301520390a180f35b8880fd5b8680fd5b602486604186634e487b7160e01b835252fd5b8380fd5b8480fd5b9050346101715760c0366003190112610171576104616107c0565b906044356001600160a01b0380821680920361060d5760643567ffffffffffffffff91828211610609573660238301121561060957818501359283116105f6578260051b95602092836104b5818a01610814565b809681520160248199830101913683116105f2576024869101915b8383106105da575050505060a435958615158097036105d657828a5460081c16330361059457509080949392911691828952600193848352888a208560ff1982541617905588519860c08a01948a52602435848b015289015260c060608901525180925260e08701959388905b83821061057d57897f1953251b48e146eba697dd39efd1f30bda684efc2c1631b559447ae9c2dbd01f8a808b8b608435608084015260a08301520390a180f35b85518116885296820196948201949084019061053d565b606490848a519162461bcd60e51b8352820152601460248201527f4e6f74206d756c746973696720666163746f72790000000000000000000000006044820152fd5b8980fd5b81906105e5846107d6565b81520191019085906104d0565b8b80fd5b602488604187634e487b7160e01b835252fd5b8780fd5b8580fd5b5050346100f0577f38ee349836cf24adafe448482f489eaf4b97e6ea3b4f9f52ca2f6677affcd968906100cb3661078f565b5050346100f05761016b7f8be764692d684bffbe203086b11cbb096d4aa07a285f83ede38890084c886e9a91610678366107ea565b90939192338752600160205261069360ff82892054166108b0565b51938493846001600160a01b03604092959493606083019683521660208201520152565b5050346100f05761016b7f124b82bb5704da5f828628e8390ef028ab36c6792f575a37def1fae38584796991610678366107ea565b919050346101715780600319360112610171577f576fa1e54c33e168683a198ff41a85ab5bb9933347a712f9a9e36bc2b1a8236b9161016b6101346107aa565b5050346100f05761016b7fd3c1d432952273e022017a75b5c7b3f94f534b87a8c5d77426f13aab2a6bbe8291610678366107ea565b5050346100f0577f952b6effd8a09725abd1611d1daf1f22338ae324a7e161f87bace4cdccee1f50906100cb365b60409060031901126107a5576004359060243590565b600080fd5b602435906001600160a01b03821682036107a557565b600435906001600160a01b03821682036107a557565b35906001600160a01b03821682036107a557565b60609060031901126107a557600435906024356001600160a01b03811681036107a5579060443590565b6040519190601f01601f1916820167ffffffffffffffff81118382101761083a57604052565b634e487b7160e01b600052604160045260246000fd5b92919267ffffffffffffffff821161083a57610875601f8301601f1916602001610814565b93828552828201116107a557816000926020928387013784010152565b9080601f830112156107a5578160206108ad93359101610850565b90565b156108b757565b606460405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152fd5b919082519283825260005b848110610927575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161090656fea264697066735822122079ba8267f3faa617b242f2cce6ace28f795d2a1c505212d75e835b7a6b8b82c264736f6c63430008120033";

type EndowmentMultiSigEmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EndowmentMultiSigEmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EndowmentMultiSigEmitter__factory extends ContractFactory {
  constructor(...args: EndowmentMultiSigEmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EndowmentMultiSigEmitter> {
    return super.deploy(overrides || {}) as Promise<EndowmentMultiSigEmitter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EndowmentMultiSigEmitter {
    return super.attach(address) as EndowmentMultiSigEmitter;
  }
  override connect(signer: Signer): EndowmentMultiSigEmitter__factory {
    return super.connect(signer) as EndowmentMultiSigEmitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EndowmentMultiSigEmitterInterface {
    return new utils.Interface(_abi) as EndowmentMultiSigEmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EndowmentMultiSigEmitter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EndowmentMultiSigEmitter;
  }
}
