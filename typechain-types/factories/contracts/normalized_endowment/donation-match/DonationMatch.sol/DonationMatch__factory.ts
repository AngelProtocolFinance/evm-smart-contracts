/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatch,
  DonationMatchInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatch.sol/DonationMatch";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curEmitteraddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611d73908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163d61e991b146103a457508063d769c637146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a0916080604051610064816116a9565b8281528260208201528260408201528260608201520152604051610087816116a9565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f257366003190160c081126103a05760a0136100f25760405161011b816116a9565b6001600160a01b036004358181168103610397578252602435908082168203610397576020830191825261014d61164f565b6040840190815262ffffff606435818116810361039c5760608601908152608435928484168403610397576080870193845260a43590858216808303610397576004549060ff8260081c1615998a809b61038a575b8015610373575b156103175760ff1983166001176004558894859384936101d1918e610305575b501515611700565b6004805462010000600160b01b03191660109290921b62010000600160b01b031691909117905580516102079083161515611700565b5116976bffffffffffffffffffffffff60a01b98898c5416178b55610230828251161515611700565b5116876001541617600155610249828251161515611700565b51169060035492815116156102d25762ffffff60a01b905160a01b169168ffffffffffffffffff60b81b161717600355610287828251161515611700565b51169060025416176002556102995780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386101c9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101a95750600160ff8416146101a9565b50600160ff8416106101a2565b600080fd5b8680fd5b5080fd5b82346100f25760803660031901126100f2576103be61164f565b91606480356001600160a01b038116900361164b5760035463e68f909d60e01b83526103e090839060049082906001600160a01b03165afa9182156116405783926113e4575b5060408201516001600160a01b0316156113a25761042f60018060a01b036040840151163314611784565b60408281015190516354f3ce9960e01b81526004803590820152908490829060249082906001600160a01b03165afa9081156108c5578491610cec575b5060e08101516004811015610ca75760016104879114611784565b6080810180516002811015610cd85715610cbb575b516002811015610ca757600114610c88575b5060025483546001600160a01b0390811693916104d19185916024359116611b61565b92604051956370a0823160e01b87523060048801526020968781602481865afa9081156108fc579086918891610c57575b5010610c135760405163095ea7b360e01b8082526001600160a01b039093166004820152602481018690528781806044810103818a89356001600160a01b03165af19081156108fc578791610bde575b5015610ba25760045486546001600160a01b0360109290921c82169116813b156109625760405163395b4b6560e11b815260048035908201526001600160a01b0387358116602483015290911660448201526064810187905290879082908183816084810103925af180156108fc57610b8f575b5085546001600160a01b03908116908535168103610a08575060288502858104602814861517156109e057849004908180018083116109f45786039586116109e05760405163a9059cbb60e01b81526001600160a01b0382166004820152602481018390528881806044810103818b8a356001600160a01b03165af190811561093e5788916109ab575b5015610975576004549697889760101c6001600160a01b031693843b1561097157604051631facad4560e11b80825260048035908301526001600160a01b038935811660248401529094166044820152606481018590529294899084908183816084810103925af180156109665784938a91610949575b505060408681015190519182526001600160a01b0316600482015260248101929092528082806044810103818b8a356001600160a01b03165af190811561093e578891610907575b5061071a9150611acc565b60408301516001600160a01b0316803b1561039c57604051630b49b2f360e11b8152600480359082015285356001600160a01b03166024820152604481018390529087908290606490829084905af19081156108fc5787916108e4575b50506004546040909301516001600160a01b039081169360101c16803b1561039c5760405192835260048035908401526001600160a01b038535811660248501529093166044830152606482015290849082908183816084810103925af19081156108c55784916108d0575b505080356001600160a01b03163b156108c157604051630852cd8d60e31b81526004810183905283816024818386356001600160a01b03165af19081156108c55784916108ad575b505060045460101c6001600160a01b031691823b156108a857604051631ef3698760e11b8152600480359082015291356001600160a01b03166024830152604482015290829082908183816064810103925af1801561089d5761088d57505080f35b61089690611696565b6100f25780f35b6040513d84823e3d90fd5b505050fd5b6108b690611696565b6108c157828561082b565b5050fd5b6040513d86823e3d90fd5b6108d990611696565b6108c15782856107e3565b6108ed90611696565b6108f8578588610777565b8580fd5b6040513d89823e3d90fd5b905081813d8311610937575b61091d81836116df565b8101031261039c5761093161071a916118a4565b8961070f565b503d610913565b6040513d8a823e3d90fd5b61095591929450611696565b610962578291888b6106c7565b8780fd5b6040513d8b823e3d90fd5b8880fd5b60405162461bcd60e51b815260048101899052600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201528590fd5b90508881813d83116109d9575b6109c281836116df565b81010312610962576109d3906118a4565b89610650565b503d6109b8565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b60405192835284356001600160a01b03166004840152602483018690529596879694959194919392918190839060449082908b905af19081156108fc578791610b58575b50610a579150611acc565b60408101516001600160a01b0390811693908535163b156108f85760405193638ea692ef60e01b85528360048601526024850152600435604485015260018060a01b031692838582015285816084818360018060a01b038a35165af1908115610b4d578691610b35575b50506004546040909101516001600160a01b039081169260109290921c1690813b156108f8578560a49281956040519788968795630fabb2b560e31b875260018060a01b038335166004880152602487015260448601526004359085015260848401525af1801561089d5761088d57505080f35b610b3e90611696565b610b49578487610ac1565b8480fd5b6040513d88823e3d90fd5b905081813d8311610b88575b610b6e81836116df565b810103126108f857610b82610a57916118a4565b88610a4c565b503d610b64565b610b9b90969196611696565b94876105c6565b60405162461bcd60e51b8152600481018890526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201528490fd5b90508781813d8311610c0c575b610bf581836116df565b8101031261039c57610c06906118a4565b88610552565b503d610beb565b60405162461bcd60e51b815260048101889052601a60248201527f496e73756666696369656e74205265736572766520546f6b656e00000000000060448201528490fd5b809250898092503d8311610c81575b610c7081836116df565b8101031261039c5785905189610502565b503d610c66565b6102c00151610ca1906001600160a01b03163014611784565b846104ae565b634e487b7160e01b85526021600452602485fd5b610cd360018060a01b03610160860151163014611784565b61049c565b634e487b7160e01b86526021600452602486fd5b3d91508185823e610cfd82826116df565b6020818381010312610b495780516001600160401b0381116108f857610a4081830184840103126108f85760405192836104408101106001600160401b036104408601111761138e576104408401604052610d5982840161173e565b8452602082840101516001600160401b03811161096257610d819082850190848601016117bf565b6020850152604082840101516001600160401b038111610962576040818486010183860103126109625760405190610db882611665565b8084860101516001600160401b03811161138a57610ddf9084870190838789010101611846565b82526020818587010101516001600160401b03811161138a5790610e0b91848701918688010101611846565b602082015260408501528282016060818101519086015260800151600281101561096257608085015260a082840101516001600160401b03811161096257610e5a9082850190848601016117bf565b60a085015260c082840101516001600160401b03811161096257610e859082850190848601016117bf565b60c085015260e0828401015160048110156109625760e0850152610eae610100838501016118a4565b610100850152610ec3610120838501016118a4565b610120850152828201610140818101519086015261016001516001600160401b03811161096257610efb908285019084860101611931565b61016085015261018082840101516001600160401b03811161096257610f28908285019084860101611931565b61018085015260c08383018285010361019f19011261039c576040518060c08101106001600160401b0360c0830111176113765760c08101604052610f726101a0848601016118a4565b8152610f836101c0848601016119ce565b6020820152610f976101e0848601016119ce565b6040820152610fab610200848601016118a4565b6060820152610fbf610220848601016119ce565b608082015261024090610fd582858701016119ce565b60a08201526101a0860152610260610ff081858701016118a4565b6101c0870152610280848601818101516101e08901526102a0808201516102008a01526102c0808301516102208b015294909391611031906102e00161173e565b908901526110446103008789010161173e565b908801526110576103208688010161173e565b9087015261106a610340858701016118a4565b9086015261107d6103608486010161173e565b9085015261038082840101516001600160401b038111610962576110a89082850190848601016119df565b6102e08501526103a082840101516001600160401b038111610962576110d59082850190848601016119df565b6103008501526103c082840101516001600160401b038111610962576111029082850190848601016119df565b61032085015261111a8184016103e084860101611a45565b61034085015261113281840161044084860101611a45565b61036085015261114a8184016104a084860101611a45565b61038085015261116281840161050084860101611a45565b6103a08501526104408383018285010361055f19011261039c57604051806102208101106001600160401b036102208301111761137657916109e0918361022061136a9695016040526111bd82860161056085880101611a80565b81526111d18286016105a085880101611a80565b60208201526111e88286016105e085880101611a80565b60408201526111ff82860161062085880101611a80565b606082015261121682860161066085880101611a80565b608082015261122d8286016106a085880101611a80565b60a08201526112448286016106e085880101611a80565b60c082015261125b82860161072085880101611a80565b60e082015261127282860161076085880101611a80565b61010082015261128a8286016107a085880101611a80565b6101208201526112a28286016107e085880101611a80565b6101408201526112ba82860161082085880101611a80565b6101608201526112d282860161086085880101611a80565b6101808201526112ea8286016108a085880101611a80565b6101a08201526113028286016108e085880101611a80565b6101c082015261131a82860161092085880101611a80565b6101e082015261133282860161096085880101611a80565b6102008201526103c08701528382016109a08101516103e088015261135a906109c0016118a4565b6104008701528301920101611752565b6104208201528561046c565b634e487b7160e01b88526041600452602488fd5b8980fd5b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152fd5b9091506103e03d6103e011611639575b6113fe81836116df565b81016103e08282031261163557604051916103a0918284018481106001600160401b0382111761138e5760405261162a916103c09161143c8261173e565b865261144a6020830161173e565b602087015261145b6040830161173e565b604087015261146c6060830161173e565b606087015261147d6080830161173e565b608087015261148e60a0830161173e565b60a087015261149f60c0830161173e565b60c08701526114b060e0830161173e565b60e08701526101006114c381840161173e565b908701526101206114d581840161173e565b908701526101406114e781840161173e565b908701526101606114f981840161173e565b9087015261018061150b81840161173e565b9087015261151e6101a091828401611752565b908601526102009361153185830161173e565b6101c08701526116206102209161154983850161173e565b6101e08901526102409661155e88860161173e565b908901526102609283850151908901526102809661157d88860161173e565b908901526102a09261159084860161173e565b908901526102c0966115a388860161173e565b908901526102e0926115b684860161173e565b90890152610300966115c988860161173e565b90890152610320926115dc84860161173e565b90890152610340966115ef88860161173e565b908901526103609261160284860161173e565b908901526103809661161588860161173e565b90890152830161173e565b908601520161173e565b908201529084610404565b8380fd5b503d6113f4565b6040513d85823e3d90fd5b8280fd5b604435906001600160a01b038216820361039757565b604081019081106001600160401b0382111761168057604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161168057604052565b60a081019081106001600160401b0382111761168057604052565b606081019081106001600160401b0382111761168057604052565b90601f801991011681019081106001600160401b0382111761168057604052565b1561170757565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b038216820361039757565b91908260609103126103975760405161176a816116c4565b604080829480518452602081015160208501520151910152565b1561178b57565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f84011215610397578251906001600160401b03821161168057604051916020916117f7601f8301601f19168401856116df565b8184528282870101116103975760005b81811061181c57508260009394955001015290565b8581018301518482018401528201611807565b6001600160401b0381116116805760051b60200190565b81601f820112156103975780519161185d8361182f565b9261186b60405194856116df565b808452602092838086019260051b820101928311610397578301905b828210611895575050505090565b81518152908301908301611887565b5190811515820361039757565b9080601f83011215610397578151906118c98261182f565b926118d760405194856116df565b828452602092838086019160051b8301019280841161039757848301915b8483106119055750505050505090565b82516001600160401b038111610397578691611926848480948901016117bf565b8152019201916118f5565b91909160808184031261039757604051906001600160401b03906080830182811184821017611680576040528294815183811161039757816119749184016118b1565b84526020820151838111610397578161198e918401611846565b6020850152604082015183811161039757816119ab9184016118b1565b60408501526060820151928311610397576060926119c99201611846565b910152565b519063ffffffff8216820361039757565b81601f82011215610397578051916119f68361182f565b92611a0460405194856116df565b808452602092838086019260051b820101928311610397578301905b828210611a2e575050505090565b838091611a3a8461173e565b815201910190611a20565b919082606091031261039757604051611a5d816116c4565b60406119c9818395611a6e8161173e565b855260208101516020860152016118a4565b91908260409103126103975760405160208101908082106001600160401b03831117611680578160405260208194611ab784611665565b611ac08161173e565b84520151604082015252565b15611ad357565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611b1c57565b634e487b7160e01b600052601160045260246000fd5b8115611b3c570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff8216820361039757565b90916001600160a01b03918216908216818114611d37578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611ce6578491600091611cfc575b5016918215611cf25760e060049360405194858092633850c7bd851b82525afa928315611ce657600093611c57575b501015611c1657611c109291611c0891168092611b09565b60601c611b09565b60601c90565b8260601b91600160601b93808404851490151715611b1c57611c3a91168092611b32565b8060601b928184041490151715611b1c57611c5491611b32565b90565b60e0939193813d8211611cde575b81611c7260e093836116df565b810103126103a05780519185831683036100f25760208201518060020b036100f257611ca060408301611b52565b50611cad60608301611b52565b50611cba60808301611b52565b5060a082015160ff8116036100f2575060c0611cd691016118a4565b509138611bf0565b3d9150611c65565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611d2f575b81611d16602093836116df565b810103126100f25750611d29849161173e565b38611bc1565b3d9150611d09565b5050509056fea2646970667358221220e03016f1adf43b2d9cd79ff6fca81def4efe52273899b9ba554543db668bb5a864736f6c63430008120033";

type DonationMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatch__factory extends ContractFactory {
  constructor(...args: DonationMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatch> {
    return super.deploy(overrides || {}) as Promise<DonationMatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatch {
    return super.attach(address) as DonationMatch;
  }
  override connect(signer: Signer): DonationMatch__factory {
    return super.connect(signer) as DonationMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchInterface {
    return new utils.Interface(_abi) as DonationMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatch {
    return new Contract(address, _abi, signerOrProvider) as DonationMatch;
  }
}
