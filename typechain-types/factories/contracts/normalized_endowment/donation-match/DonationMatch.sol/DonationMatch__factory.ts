/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatch,
  DonationMatchInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatch.sol/DonationMatch";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "details",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "emitteraddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611d3b908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163cfcb6c5b146103a457508063d769c637146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a09160806040516100648161168e565b82815282602082015282604082015282606082015201526040516100878161168e565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f257366003190160c081126103a05760a0136100f25760405161011b8161168e565b6001600160a01b036004358181168103610397578252602435908082168203610397576020830191825261014d611634565b6040840190815262ffffff606435818116810361039c5760608601908152608435928484168403610397576080870193845260a43590858216808303610397576004549060ff8260081c1615998a809b61038a575b8015610373575b156103175760ff1983166001176004558894859384936101d1918e610305575b5015156116e5565b6004805462010000600160b01b03191660109290921b62010000600160b01b0316919091179055805161020790831615156116e5565b5116976bffffffffffffffffffffffff60a01b98898c5416178b556102308282511615156116e5565b51168760015416176001556102498282511615156116e5565b51169060035492815116156102d25762ffffff60a01b905160a01b169168ffffffffffffffffff60b81b1617176003556102878282511615156116e5565b51169060025416176002556102995780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386101c9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101a95750600160ff8416146101a9565b50600160ff8416106101a2565b600080fd5b8680fd5b5080fd5b9050346103a05760803660031901126103a05763ffffffff60043516600435036103a0576103d0611634565b906064356001600160a01b03811690036116305760035463e68f909d60e01b82526103e090829060049082906001600160a01b03165afa9081156116255783916113cb575b5060408101516001600160a01b0316156113865761044060018060a01b036040830151163314611769565b60408181015190516364ce479160e11b81526004803563ffffffff1690820152908490829060249082906001600160a01b03165afa908115610903578491610d33575b506080810180516002811015610d1f57610cd45750506104b160018060a01b03610160830151163014611769565b60025483546001600160a01b03908116916104d29183916024359116611b29565b906040516370a0823160e01b8152306004820152602081602481855afa801561093e5783918791610c9f575b5010610c5a5760405163095ea7b360e01b81526001600160a01b0390911660048201526024810182905260208180604481010381886064356001600160a01b03165af1908115610b8a578591610c20575b5015610be35760045484546001600160a01b0360109290921c821691869116823b156103a05760405163395b4b6560e11b81526004803563ffffffff1690820152606480356001600160a01b039081166024840152929092166044820152908101849052918290608490829084905af18015610b8a57610bd0575b50835484906001600160a01b0390811690606435168103610a3c575050602881029181830460281482151715610a28576064830480800193908410610a14578284810311610a145760405163a9059cbb60e01b81526001600160a01b0386166004820152606482046024820152602081806044810103818a6064356001600160a01b03165af1908115610a095787916109cf575b50156109985760045486959060101c6001600160a01b0316803b1561039c57604051631facad4560e11b81526004803563ffffffff1690820152606480356001600160a01b0390811660248401529390931660448201528284049281019290925286908290608490829084905af190811561093e578691610984575b5050604082810151905163095ea7b360e01b81526001600160a01b03909116600482015260648204602482015260208180604481010381896064356001600160a01b03165af1801561093e578690610949575b6107379150611a94565b60408201516001600160a01b0316803b15610922576040516307f740eb60e21b81526004803563ffffffff1690820152606480356001600160a01b031660248301528084046044830152909187918391829084905af190811561093e578691610926575b505060045460409092015160109290921c6001600160a01b039081169216823b1561092257604051631facad4560e11b81526004803563ffffffff1690820152606480356001600160a01b03908116602484015292909216604482015291819004908201529084908290608490829084905af190811561090357849161090e575b50506064356001600160a01b03163b156108ff57604051630852cd8d60e31b815282820360048201528381602481836064356001600160a01b03165af19081156109035784916108eb575b505060045460101c6001600160a01b031691823b156108e65760648492836040519586948593631ef3698760e11b855263ffffffff60043516600486015260018060a01b0386351660248601520360448401525af180156108db576108cb57505080f35b6108d49061167b565b6100f25780f35b6040513d84823e3d90fd5b505050fd5b6108f49061167b565b6108ff578238610867565b5050fd5b6040513d86823e3d90fd5b6109179061167b565b6108ff57823861081c565b8580fd5b61092f9061167b565b61093a57843861079b565b8480fd5b6040513d88823e3d90fd5b506020813d60201161097c575b81610963602093836116c4565b8101031261092257610977610737916119a6565b61072d565b3d9150610956565b61098d9061167b565b61093a5784386106da565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b90506020813d602011610a01575b816109ea602093836116c4565b8101031261039c576109fb906119a6565b3861065e565b3d91506109dd565b6040513d89823e3d90fd5b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b60405163095ea7b360e01b81526064356001600160a01b031660048201526024810184905291949391906020908290604490829089905af18015610b8a578590610b95575b610a8b9150611a94565b60408101516001600160a01b039081169390606435163b1561093a576040519363de764d2160e01b8552836004860152602485015263ffffffff60043516604485015260018060a01b03169283606482015284816084818360018060a01b03606435165af1908115610b8a578591610b76575b50506004546040909101516001600160a01b039081169160101c16803b1561093a5784928360a4926040519687958694630fabb2b560e31b865260018060a01b036064351660048701526024860152604485015263ffffffff60043516606485015260848401525af180156108db576108cb57505080f35b610b7f9061167b565b6108e6578338610afe565b6040513d87823e3d90fd5b506020813d602011610bc8575b81610baf602093836116c4565b8101031261093a57610bc3610a8b916119a6565b610a81565b3d9150610ba2565b610bdc9094919461167b565b92386105ca565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b90506020813d602011610c52575b81610c3b602093836116c4565b8101031261093a57610c4c906119a6565b3861054f565b3d9150610c2e565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152606490fd5b9150506020813d602011610ccc575b81610cbb602093836116c4565b8101031261092257829051386104fe565b3d9150610cae565b516002811015610d0b57600114610cec575b506104b1565b6102400151610d05906001600160a01b03163014611769565b38610ce6565b634e487b7160e01b85526021600452602485fd5b634e487b7160e01b86526021600452602486fd5b3d91508185823e610d4482826116c4565b602081838101031261093a578051906001600160401b0382116109225761096082820184830103126109225760405192836103e08101106001600160401b036103e086011117611372576103e08401604052610da1838301611723565b8452602083830101516001600160401b03811161136a57610dc99082840190858501016117a4565b6020850152604083830101516001600160401b03811161136a5760408185850101838501031261136a5760405190610e008261164a565b8085850101516001600160401b03811161136e57610e27908486019083888801010161182b565b8252602081868601010151906001600160401b03821161136e57610e539184860191878701010161182b565b602082015260408501528183016060818101519086015260800151600281101561136a57608085015260a083830101516001600160401b03811161136a57610ea29082840190858501016117a4565b60a085015260c083830101516001600160401b03811161136a57610ecd9082840190858501016117a4565b60c085015281830160e0818101519086015261010001516001600160401b03811161136a57610f03908284019085850101611909565b61010085015261012083830101516001600160401b03811161136a57610f30908284019085850101611909565b61012085015260c08284018284010361013f19011261039c576040518060c08101106001600160401b0360c0830111176113565760c08101604052610f7a610140858501016119a6565b8152610f8b610160858501016119b3565b6020820152610f9f610180858501016119b3565b6040820152610fb36101a0858501016119a6565b6060820152610fc76101c0858501016119b3565b6080820152610fdb6101e0858501016119b3565b60a0820152610140850152610200610ff681858501016119a6565b61016086015261022084840181810151610180880152610240808201516101a089015292906110289061026001611723565b6101c088015261103d61028087870101611723565b6101e08801526110526102a087870101611723565b908701526110656102c0868601016119a6565b908601526110786102e085850101611723565b9085015261030083830101516001600160401b03811161136a576110a39082840190858501016119c4565b61026085015261032083830101516001600160401b03811161136a576110d09082840190858501016119c4565b61028085015261034083830101516001600160401b03811161136a576110fd9082840190858501016119c4565b6102a085015261111581830161036085850101611a2a565b6102c085015261112d8183016103c085850101611a2a565b6102e085015261114581830161042085850101611a2a565b61030085015261115d81830161048085850101611a2a565b6103208501526103c0828401828401036104df19011261039c57604051806101e08101106001600160401b036101e08301111761135657610940939291816101e061134193016040526111b88285016104e087870101611a65565b81526111cc82850161052087870101611a65565b60208201526111e382850161056087870101611a65565b60408201526111fa8285016105a087870101611a65565b60608201526112118285016105e087870101611a65565b608082015261122882850161062087870101611a65565b60a082015261123f82850161066087870101611a65565b60c08201526112568285016106a087870101611a65565b60e082015261126d8285016106e087870101611a65565b61010082015261128582850161072087870101611a65565b61012082015261129d82850161076087870101611a65565b6101408201526112b58285016107a087870101611a65565b6101608201526112cd8285016107e087870101611a65565b6101808201526112e582850161082087870101611a65565b6101a08201526112fd82850161086087870101611a65565b6101c08201526103408701526113186108a0858501016119b3565b61036087015261132d6108c0858501016119a6565b61038087015282016108e084840101611737565b6103a08501520101516103c082015238610483565b634e487b7160e01b88526041600452602488fd5b8780fd5b8980fd5b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152606490fd5b90506103e03d6103e01161161e575b6113e481836116c4565b81016103e08282031261161a57604051916103a0918284018481106001600160401b0382111761137257604052611610916103c09161142282611723565b865261143060208301611723565b602087015261144160408301611723565b604087015261145260608301611723565b606087015261146360808301611723565b608087015261147460a08301611723565b60a087015261148560c08301611723565b60c087015261149660e08301611723565b60e08701526101006114a9818401611723565b908701526101206114bb818401611723565b908701526101406114cd818401611723565b908701526101606114df818401611723565b908701526101806114f1818401611723565b908701526115046101a091828401611737565b9086015261020093611517858301611723565b6101c08701526116066102209161152f838501611723565b6101e089015261024096611544888601611723565b9089015261026092838501519089015261028096611563888601611723565b908901526102a092611576848601611723565b908901526102c096611589888601611723565b908901526102e09261159c848601611723565b90890152610300966115af888601611723565b90890152610320926115c2848601611723565b90890152610340966115d5888601611723565b90890152610360926115e8848601611723565b90890152610380966115fb888601611723565b908901528301611723565b9086015201611723565b9082015238610415565b8380fd5b503d6113da565b6040513d85823e3d90fd5b8280fd5b604435906001600160a01b038216820361039757565b604081019081106001600160401b0382111761166557604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161166557604052565b60a081019081106001600160401b0382111761166557604052565b606081019081106001600160401b0382111761166557604052565b90601f801991011681019081106001600160401b0382111761166557604052565b156116ec57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b038216820361039757565b91908260609103126103975760405161174f816116a9565b604080829480518452602081015160208501520151910152565b1561177057565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f84011215610397578251906001600160401b03821161166557604051916020916117dc601f8301601f19168401856116c4565b8184528282870101116103975760005b81811061180157508260009394955001015290565b85810183015184820184015282016117ec565b6001600160401b0381116116655760051b60200190565b81601f820112156103975780519161184283611814565b9261185060405194856116c4565b808452602092838086019260051b820101928311610397578301905b82821061187a575050505090565b8151815290830190830161186c565b9080601f83011215610397578151906118a182611814565b926118af60405194856116c4565b828452602092838086019160051b8301019280841161039757848301915b8483106118dd5750505050505090565b82516001600160401b0381116103975786916118fe848480948901016117a4565b8152019201916118cd565b91909160808184031261039757604051906001600160401b039060808301828111848210176116655760405282948151838111610397578161194c918401611889565b84526020820151838111610397578161196691840161182b565b602085015260408201518381116103975781611983918401611889565b60408501526060820151928311610397576060926119a1920161182b565b910152565b5190811515820361039757565b519063ffffffff8216820361039757565b81601f82011215610397578051916119db83611814565b926119e960405194856116c4565b808452602092838086019260051b820101928311610397578301905b828210611a13575050505090565b838091611a1f84611723565b815201910190611a05565b919082606091031261039757604051611a42816116a9565b60406119a1818395611a5381611723565b855260208101516020860152016119a6565b919082604091031261039757604051611a7d8161164a565b6020808294611a8b81611723565b84520151910152565b15611a9b57565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611ae457565b634e487b7160e01b600052601160045260246000fd5b8115611b04570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff8216820361039757565b90916001600160a01b03918216908216818114611cff578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611cae578491600091611cc4575b5016918215611cba5760e060049360405194858092633850c7bd851b82525afa928315611cae57600093611c1f575b501015611bde57611bd89291611bd091168092611ad1565b60601c611ad1565b60601c90565b8260601b91600160601b93808404851490151715611ae457611c0291168092611afa565b8060601b928184041490151715611ae457611c1c91611afa565b90565b60e0939193813d8211611ca6575b81611c3a60e093836116c4565b810103126103a05780519185831683036100f25760208201518060020b036100f257611c6860408301611b1a565b50611c7560608301611b1a565b50611c8260808301611b1a565b5060a082015160ff8116036100f2575060c0611c9e91016119a6565b509138611bb8565b3d9150611c2d565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611cf7575b81611cde602093836116c4565b810103126100f25750611cf18491611723565b38611b89565b3d9150611cd1565b5050509056fea26469706673582212200fc5e1f7ea6740a950db9ef61773b06596f704ccede271f865c35be72bb2b6c264736f6c63430008120033";

type DonationMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatch__factory extends ContractFactory {
  constructor(...args: DonationMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatch> {
    return super.deploy(overrides || {}) as Promise<DonationMatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatch {
    return super.attach(address) as DonationMatch;
  }
  override connect(signer: Signer): DonationMatch__factory {
    return super.connect(signer) as DonationMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchInterface {
    return new utils.Interface(_abi) as DonationMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatch {
    return new Contract(address, _abi, signerOrProvider) as DonationMatch;
  }
}
