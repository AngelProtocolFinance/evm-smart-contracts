/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatch,
  DonationMatchInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatch.sol/DonationMatch";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "curEmitteraddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611d81908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163d61e991b146103a457508063d769c637146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a0916080604051610064816116b7565b8281528260208201528260408201528260608201520152604051610087816116b7565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f257366003190160c081126103a05760a0136100f25760405161011b816116b7565b6001600160a01b036004358181168103610397578252602435908082168203610397576020830191825261014d61165d565b6040840190815262ffffff606435818116810361039c5760608601908152608435928484168403610397576080870193845260a43590858216808303610397576004549060ff8260081c1615998a809b61038a575b8015610373575b156103175760ff1983166001176004558894859384936101d1918e610305575b50151561170e565b6004805462010000600160b01b03191660109290921b62010000600160b01b03169190911790558051610207908316151561170e565b5116976bffffffffffffffffffffffff60a01b98898c5416178b5561023082825116151561170e565b511687600154161760015561024982825116151561170e565b51169060035492815116156102d25762ffffff60a01b905160a01b169168ffffffffffffffffff60b81b16171760035561028782825116151561170e565b51169060025416176002556102995780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386101c9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101a95750600160ff8416146101a9565b50600160ff8416106101a2565b600080fd5b8680fd5b5080fd5b82346100f25760803660031901126100f2576103be61165d565b91606480356001600160a01b03811690036116595760035463e68f909d60e01b83526103e090839060049082906001600160a01b03165afa91821561164e5783926113f2575b5060408201516001600160a01b0316156113b05761042f60018060a01b036040840151163314611792565b60408281015190516354f3ce9960e01b81526004803590820152908490829060249082906001600160a01b03165afa9081156108c5578491610cec575b5060e08101516004811015610ca75760016104879114611792565b6080810180516002811015610cd85715610cbb575b516002811015610ca757600114610c88575b5060025483546001600160a01b0390811693916104d19185916024359116611b6f565b92604051956370a0823160e01b87523060048801526020968781602481865afa9081156108fc579086918891610c57575b5010610c135760405163095ea7b360e01b8082526001600160a01b039093166004820152602481018690528781806044810103818a89356001600160a01b03165af19081156108fc578791610bde575b5015610ba25760045486546001600160a01b0360109290921c82169116813b156109625760405163395b4b6560e11b815260048035908201526001600160a01b0387358116602483015290911660448201526064810187905290879082908183816084810103925af180156108fc57610b8f575b5085546001600160a01b03908116908535168103610a08575060288502858104602814861517156109e057849004908180018083116109f45786039586116109e05760405163a9059cbb60e01b81526001600160a01b0382166004820152602481018390528881806044810103818b8a356001600160a01b03165af190811561093e5788916109ab575b5015610975576004549697889760101c6001600160a01b031693843b1561097157604051631facad4560e11b80825260048035908301526001600160a01b038935811660248401529094166044820152606481018590529294899084908183816084810103925af180156109665784938a91610949575b505060408681015190519182526001600160a01b0316600482015260248101929092528082806044810103818b8a356001600160a01b03165af190811561093e578891610907575b5061071a9150611ada565b60408301516001600160a01b0316803b1561039c57604051630b49b2f360e11b8152600480359082015285356001600160a01b03166024820152604481018390529087908290606490829084905af19081156108fc5787916108e4575b50506004546040909301516001600160a01b039081169360101c16803b1561039c5760405192835260048035908401526001600160a01b038535811660248501529093166044830152606482015290849082908183816084810103925af19081156108c55784916108d0575b505080356001600160a01b03163b156108c157604051630852cd8d60e31b81526004810183905283816024818386356001600160a01b03165af19081156108c55784916108ad575b505060045460101c6001600160a01b031691823b156108a857604051631ef3698760e11b8152600480359082015291356001600160a01b03166024830152604482015290829082908183816064810103925af1801561089d5761088d57505080f35b610896906116a4565b6100f25780f35b6040513d84823e3d90fd5b505050fd5b6108b6906116a4565b6108c157828561082b565b5050fd5b6040513d86823e3d90fd5b6108d9906116a4565b6108c15782856107e3565b6108ed906116a4565b6108f8578588610777565b8580fd5b6040513d89823e3d90fd5b905081813d8311610937575b61091d81836116ed565b8101031261039c5761093161071a916118b2565b8961070f565b503d610913565b6040513d8a823e3d90fd5b610955919294506116a4565b610962578291888b6106c7565b8780fd5b6040513d8b823e3d90fd5b8880fd5b60405162461bcd60e51b815260048101899052600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201528590fd5b90508881813d83116109d9575b6109c281836116ed565b81010312610962576109d3906118b2565b89610650565b503d6109b8565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b60405192835284356001600160a01b03166004840152602483018690529596879694959194919392918190839060449082908b905af19081156108fc578791610b58575b50610a579150611ada565b60408101516001600160a01b0390811693908535163b156108f85760405193638ea692ef60e01b85528360048601526024850152600435604485015260018060a01b031692838582015285816084818360018060a01b038a35165af1908115610b4d578691610b35575b50506004546040909101516001600160a01b039081169260109290921c1690813b156108f8578560a49281956040519788968795630fabb2b560e31b875260018060a01b038335166004880152602487015260448601526004359085015260848401525af1801561089d5761088d57505080f35b610b3e906116a4565b610b49578487610ac1565b8480fd5b6040513d88823e3d90fd5b905081813d8311610b88575b610b6e81836116ed565b810103126108f857610b82610a57916118b2565b88610a4c565b503d610b64565b610b9b909691966116a4565b94876105c6565b60405162461bcd60e51b8152600481018890526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201528490fd5b90508781813d8311610c0c575b610bf581836116ed565b8101031261039c57610c06906118b2565b88610552565b503d610beb565b60405162461bcd60e51b815260048101889052601a60248201527f496e73756666696369656e74205265736572766520546f6b656e00000000000060448201528490fd5b809250898092503d8311610c81575b610c7081836116ed565b8101031261039c5785905189610502565b503d610c66565b6102c00151610ca1906001600160a01b03163014611792565b846104ae565b634e487b7160e01b85526021600452602485fd5b610cd360018060a01b03610160860151163014611792565b61049c565b634e487b7160e01b86526021600452602486fd5b3d91508185823e610cfd82826116ed565b6020818381010312610b49578051906001600160401b0382116108f857610a6082820184830103126108f85760405192836104608101106001600160401b036104608601111761139c576104608401604052610d5a83830161174c565b8452602083830101516001600160401b03811161096257610d829082840190858501016117cd565b6020850152604083830101516001600160401b038111610962576040818585010183850103126109625760405190610db982611673565b8085850101516001600160401b03811161139857610de09084860190838888010101611854565b82526020818686010101516001600160401b0381116113985790610e0c91848601918787010101611854565b602082015260408501528183016060818101519086015260800151600281101561096257608085015260a083830101516001600160401b03811161096257610e5b9082840190858501016117cd565b60a085015260c083830101516001600160401b03811161096257610e869082840190858501016117cd565b60c085015260e0838301015160048110156109625760e0850152610eaf610100848401016118b2565b610100850152610ec4610120848401016118b2565b610120850152818301610140818101519086015261016001516001600160401b03811161096257610efc90828401908585010161193f565b61016085015261018083830101516001600160401b03811161096257610f2990828401908585010161193f565b61018085015260c08284018284010361019f19011261039c576040518060c08101106001600160401b0360c0830111176113845760c08101604052610f736101a0858501016118b2565b8152610f846101c0858501016119dc565b6020820152610f986101e0858501016119dc565b6040820152610fac610200858501016118b2565b6060820152610fc0610220858501016119dc565b608082015261024090610fd682868601016119dc565b60a08201526101a0860152610260610ff181868601016118b2565b6101c0870152610280858501818101516101e08901526102a0808201516102008a01526102c0808301516102208b015294909391611032906102e00161174c565b908901526110456103008888010161174c565b908801526110586103208787010161174c565b9087015261106b610340868601016118b2565b9086015261107e6103608585010161174c565b9085015261038083830101516001600160401b038111610962576110a99082840190858501016119ed565b6102e08501526103a083830101516001600160401b038111610962576110d69082840190858501016119ed565b6103008501526103c083830101516001600160401b038111610962576111039082840190858501016119ed565b61032085015261111b8183016103e085850101611a53565b61034085015261113381830161044085850101611a53565b61036085015261114b8183016104a085850101611a53565b61038085015261116381830161050085850101611a53565b6103a08501526104408284018284010361055f19011261039c57604051806102208101106001600160401b036102208301111761138457610a409392918161022061136f93016040526111be82850161056087870101611a8e565b81526111d28285016105a087870101611a8e565b60208201526111e98285016105e087870101611a8e565b604082015261120082850161062087870101611a8e565b606082015261121782850161066087870101611a8e565b608082015261122e8285016106a087870101611a8e565b60a08201526112458285016106e087870101611a8e565b60c082015261125c82850161072087870101611a8e565b60e082015261127382850161076087870101611a8e565b61010082015261128b8285016107a087870101611a8e565b6101208201526112a38285016107e087870101611a8e565b6101408201526112bb82850161082087870101611a8e565b6101608201526112d382850161086087870101611a8e565b6101808201526112eb8285016108a087870101611a8e565b6101a08201526113038285016108e087870101611a8e565b6101c082015261131b82850161092087870101611a8e565b6101e082015261133382850161096087870101611a8e565b6102008201526103c08701528284016109a08101516103e088015261135b906109c0016118b2565b61040087015282016109e084840101611760565b6104208501520101516104408201528561046c565b634e487b7160e01b88526041600452602488fd5b8980fd5b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152fd5b9091506103e03d6103e011611647575b61140c81836116ed565b81016103e08282031261164357604051916103a0918284018481106001600160401b0382111761139c57604052611638916103c09161144a8261174c565b86526114586020830161174c565b60208701526114696040830161174c565b604087015261147a6060830161174c565b606087015261148b6080830161174c565b608087015261149c60a0830161174c565b60a08701526114ad60c0830161174c565b60c08701526114be60e0830161174c565b60e08701526101006114d181840161174c565b908701526101206114e381840161174c565b908701526101406114f581840161174c565b9087015261016061150781840161174c565b9087015261018061151981840161174c565b9087015261152c6101a091828401611760565b908601526102009361153f85830161174c565b6101c087015261162e6102209161155783850161174c565b6101e08901526102409661156c88860161174c565b908901526102609283850151908901526102809661158b88860161174c565b908901526102a09261159e84860161174c565b908901526102c0966115b188860161174c565b908901526102e0926115c484860161174c565b90890152610300966115d788860161174c565b90890152610320926115ea84860161174c565b90890152610340966115fd88860161174c565b908901526103609261161084860161174c565b908901526103809661162388860161174c565b90890152830161174c565b908601520161174c565b908201529084610404565b8380fd5b503d611402565b6040513d85823e3d90fd5b8280fd5b604435906001600160a01b038216820361039757565b604081019081106001600160401b0382111761168e57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161168e57604052565b60a081019081106001600160401b0382111761168e57604052565b606081019081106001600160401b0382111761168e57604052565b90601f801991011681019081106001600160401b0382111761168e57604052565b1561171557565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b038216820361039757565b919082606091031261039757604051611778816116d2565b604080829480518452602081015160208501520151910152565b1561179957565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f84011215610397578251906001600160401b03821161168e5760405191602091611805601f8301601f19168401856116ed565b8184528282870101116103975760005b81811061182a57508260009394955001015290565b8581018301518482018401528201611815565b6001600160401b03811161168e5760051b60200190565b81601f820112156103975780519161186b8361183d565b9261187960405194856116ed565b808452602092838086019260051b820101928311610397578301905b8282106118a3575050505090565b81518152908301908301611895565b5190811515820361039757565b9080601f83011215610397578151906118d78261183d565b926118e560405194856116ed565b828452602092838086019160051b8301019280841161039757848301915b8483106119135750505050505090565b82516001600160401b038111610397578691611934848480948901016117cd565b815201920191611903565b91909160808184031261039757604051906001600160401b0390608083018281118482101761168e576040528294815183811161039757816119829184016118bf565b84526020820151838111610397578161199c918401611854565b6020850152604082015183811161039757816119b99184016118bf565b60408501526060820151928311610397576060926119d79201611854565b910152565b519063ffffffff8216820361039757565b81601f8201121561039757805191611a048361183d565b92611a1260405194856116ed565b808452602092838086019260051b820101928311610397578301905b828210611a3c575050505090565b838091611a488461174c565b815201910190611a2e565b919082606091031261039757604051611a6b816116d2565b60406119d7818395611a7c8161174c565b855260208101516020860152016118b2565b91908260409103126103975760405160208101908082106001600160401b0383111761168e578160405260208194611ac584611673565b611ace8161174c565b84520151604082015252565b15611ae157565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611b2a57565b634e487b7160e01b600052601160045260246000fd5b8115611b4a570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff8216820361039757565b90916001600160a01b03918216908216818114611d45578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611cf4578491600091611d0a575b5016918215611d005760e060049360405194858092633850c7bd851b82525afa928315611cf457600093611c65575b501015611c2457611c1e9291611c1691168092611b17565b60601c611b17565b60601c90565b8260601b91600160601b93808404851490151715611b2a57611c4891168092611b40565b8060601b928184041490151715611b2a57611c6291611b40565b90565b60e0939193813d8211611cec575b81611c8060e093836116ed565b810103126103a05780519185831683036100f25760208201518060020b036100f257611cae60408301611b60565b50611cbb60608301611b60565b50611cc860808301611b60565b5060a082015160ff8116036100f2575060c0611ce491016118b2565b509138611bfe565b3d9150611c73565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611d3d575b81611d24602093836116ed565b810103126100f25750611d37849161174c565b38611bcf565b3d9150611d17565b5050509056fea2646970667358221220cf01200e3db7d4b3f70d9a4072f023f29a84f4fcd31f5b4a696b54fe3706794e64736f6c63430008120033";

type DonationMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatch__factory extends ContractFactory {
  constructor(...args: DonationMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatch> {
    return super.deploy(overrides || {}) as Promise<DonationMatch>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatch {
    return super.attach(address) as DonationMatch;
  }
  override connect(signer: Signer): DonationMatch__factory {
    return super.connect(signer) as DonationMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchInterface {
    return new utils.Interface(_abi) as DonationMatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatch {
    return new Contract(address, _abi, signerOrProvider) as DonationMatch;
  }
}
