/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatchCharity,
  DonationMatchCharityInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatchCharity.sol/DonationMatchCharity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20ApprovalGiven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
    ],
    name: "DonationMatchCharityExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct DonationMatchStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DonationMatchCharityInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555611d4d90816100218239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163d5780e86146112d557508063d61e991b146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a09160806040516100648161157d565b82815282602082015282604082015282606082015201526040516100878161157d565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f25760803660031901126100f25761010f61164f565b6064356001600160a01b03811690036105835760026005541461129057600260055560035460405163e68f909d60e01b815291908390839060049082906001600160a01b03165afa918215611285578392610f91575b5060608201516001600160a01b031615610f4c5761019060018060a01b0360608401511633146117d3565b60608201516040516354f3ce9960e01b81526004803590820152908490829060249082906001600160a01b03165afa908115610f4157849161094d575b5060e081015160048110156109085760016101e891146117d3565b6080810180516003811015610939571561091c575b516003811015610908576001146108e9575b5060025483546001600160a01b0390811692916102329184916024359116611b3b565b926040516370a0823160e01b81523060048201526020908181602481885afa80156105e557869188916108b8575b50106108745760405163095ea7b360e01b8082526001600160a01b039095166004820152602481018690528181806044810103818a6064356001600160a01b03165af19081156105e557879161083b575b50156107ff5785546040805160043581526001600160a01b036064358116602083015290921690820181905260608201879052907fedeb689ce41cb76bb0bd501ef98ddd3cc7bd27e0b41be0f39709795b1993850c90608090a16064356001600160a01b03168103610668575060288502858104602814861517156106405760649004938480018086116106545786039586116106405760405163a9059cbb60e01b81526001600160a01b038516600482015260248101869052938285806044810103818b6064356001600160a01b03165af19485156106355786956105f0575b506040805160043581526001600160a01b0360643581166020830152929092169082015260608101959095527fe08c6dab400dfe0cee41f683992822c6ce9cbeb122367a85454ed1d64bc60f649484929182918790608090a160608501516040519182526001600160a01b03166004820152602481019390935282806044810103818a6064356001600160a01b03165af19081156105e55787916105aa575b5061043c9150611aa6565b606081015185906001600160a01b0316803b1561058357816040518092630b49b2f360e11b82528183816104928a606435600435600485016040919493926060820195825260018060a01b031660208201520152565b03925af1801561058757610592575b50506060908101516040805160043581526001600160a01b03606435811660208301529092169082015290810191909152608090a16064356001600160a01b03163b1561058357604051630852cd8d60e31b81526004810182905282908181602481836064356001600160a01b03165af180156105875761056f575b50506040805160043581526064356001600160a01b03166020820152908101919091527f01ed2ab8a0c422973a1721262a1a2033bb911abbbd79675337c55bdf45fd001590606090a15b600160055580f35b610578906115e5565b61058357813861051d565b5080fd5b6040513d84823e3d90fd5b61059b906115e5565b6105a65784386104a1565b8480fd5b905081813d83116105de575b6105c0818361162e565b810103126105da576105d461043c9161176b565b38610431565b8580fd5b503d6105b6565b6040513d89823e3d90fd5b90928092955081813d831161062e575b61060a818361162e565b8101031261062a5785948593610620849361176b565b5091509192610392565b8780fd5b503d610600565b6040513d8a823e3d90fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b6040519485526064356001600160a01b031660048601526024850186905290949293908590829060449082908a905af180156107be5786906107c9575b6106af9150611aa6565b60608101516001600160a01b039081169390606435163b156105da5760405193638ea692ef60e01b85528360048601526024850152600435604485015260018060a01b03169283606482015285816084818360018060a01b03606435165af180156107be57610782575b50917f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f57939160c093606060018060a01b0391015116906040519330855260018060a01b03606435169085015260408401526060830152600435608083015260a0820152a1610567565b9160c09391956107b37f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f5796946115e5565b959193509193610719565b6040513d88823e3d90fd5b508481813d83116107f8575b6107df818361162e565b810103126105da576107f36106af9161176b565b6106a5565b503d6107d5565b6064906040519062461bcd60e51b825260048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152fd5b90508181813d831161086d575b610852818361162e565b81010312610869576108639061176b565b386102b1565b8680fd5b503d610848565b6064906040519062461bcd60e51b82526004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152fd5b809250838092503d83116108e2575b6108d1818361162e565b810103126108695785905138610260565b503d6108c7565b6102a00151610902906001600160a01b031630146117d3565b3861020f565b634e487b7160e01b85526021600452602485fd5b61093460018060a01b036101808601511630146117d3565b6101fd565b634e487b7160e01b86526021600452602486fd5b3d91508185823e61095e828261162e565b60208183810103126105a65780516001600160401b0381116105da5761110081830184840103126105da5760405192610996846115ae565b6109a18284016116a8565b8452602082840101516001600160401b03811161062a576109c990828501908486010161180e565b6020850152604082840101516001600160401b03811161062a5760408184860101838601031261062a5760405190610a00826115ca565b8084860101516001600160401b038111610f3d57610a27908487019083878901010161187e565b8252602081858701010151906001600160401b038211610f3d57610a539184870191868801010161187e565b602082015260408501528282016060818101519086015260800151600381101561062a57608085015260a082840101516001600160401b03811161062a57610aa290828501908486010161180e565b60a085015260c082840101516001600160401b03811161062a57610acd90828501908486010161180e565b60c085015260e08284010151600481101561062a5760e0850152610af66101008385010161176b565b610100850152610b0b6101208385010161176b565b610120850152828201610140818101519086015261016001516001600160401b03811161062a57610b4390828501908486010161195c565b61016085015261018082840101516001600160401b03811161062a57610b7090828501908486010161195c565b610180850152610b888184016101a084860101611778565b6101a0850152610b9d6102408385010161176b565b6101c08501528282016102608101516101e08601526102808101516102008601526102a0810151610220860152610bd7906102c0016116a8565b610240850152610bec6102e0838501016116a8565b610260850152610c016103008385010161176b565b610280850152610c16610320838501016116a8565b6102a085015261034082840101516001600160401b03811161062a57610c43908285019084860101611705565b6102c085015261036082840101516001600160401b03811161062a57610c70908285019084860101611705565b6102e085015261038082840101516001600160401b03811161062a57610c9d908285019084860101611705565b610300850152610cb58184016103a0848601016119f0565b610320850152610ccd818401610400848601016119f0565b610340850152610ce5818401610460848601016119f0565b610360850152610cfd8184016104c0848601016119f0565b610380850152610b408383018285010361051f19011261086957604051806102408101106001600160401b0361024083011117610f2957916110a09183610240610f1d969501604052610d5882860161052085880101611a2b565b8152610d6c8286016105c085880101611a2b565b6020820152610d8382860161066085880101611a2b565b6040820152610d9a82860161070085880101611a2b565b6060820152610db18286016107a085880101611a2b565b6080820152610dc882860161084085880101611a2b565b60a0820152610ddf8286016108e085880101611a2b565b60c0820152610df682860161098085880101611a2b565b60e0820152610e0d828601610a2085880101611a2b565b610100820152610e25828601610ac085880101611a2b565b610120820152610e3d828601610b6085880101611a2b565b610140820152610e55828601610c0085880101611a2b565b610160820152610e6d828601610ca085880101611a2b565b610180820152610e85828601610d4085880101611a2b565b6101a0820152610e9d828601610de085880101611a2b565b6101c0820152610eb5828601610e8085880101611a2b565b6101e0820152610ecd828601610f2085880101611a2b565b610200820152610ee5828601610fc085880101611a2b565b6102208201526103a08701528382016110608101516103c0880152610f0d906110800161176b565b6103e087015283019201016116bc565b610400820152386101cd565b634e487b7160e01b88526041600452602488fd5b8980fd5b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152606490fd5b9091503d8084833e610fa3818361162e565b81016020828203126112815781516001600160401b03928382116105da5701916104e0838303126105a65760405192610fdb846115ae565b610fe4816116a8565b8452610ff2602082016116a8565b6020850152611003604082016116a8565b6040850152611014606082016116a8565b6060850152611025608082016116a8565b608085015261103660a082016116a8565b60a085015261104760c082016116a8565b60c085015261105860e082016116a8565b60e085015261010061106b8183016116a8565b9085015261012061107d8183016116a8565b9085015261014061108f8183016116a8565b908501526101606110a18183016116a8565b908501526101806110b38183016116a8565b908501526101a06110c58183016116a8565b908501526101c06110d8848284016116bc565b90850152610220906110eb8282016116a8565b6101e0860152610240936111008583016116a8565b610200870152610260926111158484016116a8565b90870152610280946111288684016116a8565b908701526102a09283830151908701526102c0946111478684016116a8565b908701526102e080830151858111610f3d57830193602085840312610f3d5760405190602082018281108882111761126d576040528551968711611269576111978461125e986104c09801611705565b8252880152610300956111ab8785016116a8565b908801526111be61032092838501611778565b908701526103c0946111d18684016116a8565b908701526103e0906111e48284016116a8565b90870152610400946111f78684016116a8565b61034088015261120a61042084016116a8565b61036088015261121d61044084016116a8565b61038088015261123061046084016116a8565b6103a088015261124361048084016116a8565b908701526112546104a083016116a8565b90860152016116a8565b908201529038610165565b8a80fd5b634e487b7160e01b8c52604160045260248cfd5b8380fd5b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9050346105835760a0366003190112610583576112f18161157d565b6001600160a01b0360043581811681036112815782526024358181168103611281576020830190815261132261164f565b90604084019182526064359162ffffff908184168403610869576060860193845260843590858216820361062a576080870191825260045460ff8160081c161597888099611570575b8015611559575b156114fd5760ff1982166001176004558791896114eb575b5061139982825116151561166a565b51169386806bffffffffffffffffffffffff60a01b9287848d5416178c556113c582825116151561166a565b511692838360015416176001556113e082825116151561166a565b5116916003549785885116156114b8577f123a176064b6b36c0c200b28dbf437f6f42bd518b6f192505920e49ad5cd33dc988460c09962ffffff60a01b905160a01b169168ffffffffffffffffff60b81b161717948560035561144782825116151561166a565b51168092600254161760025560405195308752602087015260408601526060850152608084015260a01c1660a0820152a161147f5780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff1916610101176004553861138a565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156113725750600160ff831614611372565b50600160ff83161061136b565b60a081019081106001600160401b0382111761159857604052565b634e487b7160e01b600052604160045260246000fd5b61042081019081106001600160401b0382111761159857604052565b604081019081106001600160401b0382111761159857604052565b6001600160401b03811161159857604052565b606081019081106001600160401b0382111761159857604052565b608081019081106001600160401b0382111761159857604052565b90601f801991011681019081106001600160401b0382111761159857604052565b604435906001600160a01b038216820361166557565b600080fd5b1561167157565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b038216820361166557565b9190826060910312611665576040516116d4816115f8565b604080829480518452602081015160208501520151910152565b6001600160401b0381116115985760051b60200190565b81601f820112156116655780519161171c836116ee565b9261172a604051948561162e565b808452602092838086019260051b820101928311611665578301905b828210611754575050505090565b838091611760846116a8565b815201910190611746565b5190811515820361166557565b91908260a0910312611665576040516117908161157d565b608080829461179e8161176b565b84526117ac6020820161176b565b6020850152604081015160408501526117c76060820161176b565b60608501520151910152565b156117da57565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f84011215611665578251906001600160401b0382116115985760405191602091611846601f8301601f191684018561162e565b8184528282870101116116655760005b81811061186b57508260009394955001015290565b8581018301518482018401528201611856565b81601f8201121561166557805191611895836116ee565b926118a3604051948561162e565b808452602092838086019260051b820101928311611665578301905b8282106118cd575050505090565b815181529083019083016118bf565b9080601f83011215611665578151906118f4826116ee565b92611902604051948561162e565b828452602092838086019160051b8301019280841161166557848301915b8483106119305750505050505090565b82516001600160401b0381116116655786916119518484809489010161180e565b815201920191611920565b9190608083820312611665576040519061197582611613565b81938051916001600160401b039283811161166557816119969184016118dc565b8452602082015183811161166557816119b091840161187e565b6020850152604082015183811161166557816119cd9184016118dc565b60408501526060820151928311611665576060926119eb920161187e565b910152565b919082606091031261166557604051611a08816115f8565b60406119eb818395611a19816116a8565b8552602081015160208601520161176b565b809291039160a0831261166557604051611a4481611613565b60408194611a518461176b565b8352611a5f6020850161176b565b6020840152611a6f82850161176b565b83830152605f19011261166557606090608060405193611a8e856115ca565b611a998482016116a8565b8552015160208401520152565b15611aad57565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611af657565b634e487b7160e01b600052601160045260246000fd5b8115611b16570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff8216820361166557565b90916001600160a01b03918216908216818114611d11578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611cc0578491600091611cd6575b5016918215611ccc5760e060049360405194858092633850c7bd851b82525afa928315611cc057600093611c31575b501015611bf057611bea9291611be291168092611ae3565b60601c611ae3565b60601c90565b8260601b91600160601b93808404851490151715611af657611c1491168092611b0c565b8060601b928184041490151715611af657611c2e91611b0c565b90565b60e0939193813d8211611cb8575b81611c4c60e0938361162e565b810103126105835780519185831683036100f25760208201518060020b036100f257611c7a60408301611b2c565b50611c8760608301611b2c565b50611c9460808301611b2c565b5060a082015160ff8116036100f2575060c0611cb0910161176b565b509138611bca565b3d9150611c3f565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611d09575b81611cf06020938361162e565b810103126100f25750611d0384916116a8565b38611b9b565b3d9150611ce3565b5050509056fea2646970667358221220f6fae72a654d4f0176ea0032a97f448940b60e56ea8cd2febb044bada9d94d9e64736f6c63430008120033";

type DonationMatchCharityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchCharityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatchCharity__factory extends ContractFactory {
  constructor(...args: DonationMatchCharityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatchCharity> {
    return super.deploy(overrides || {}) as Promise<DonationMatchCharity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatchCharity {
    return super.attach(address) as DonationMatchCharity;
  }
  override connect(signer: Signer): DonationMatchCharity__factory {
    return super.connect(signer) as DonationMatchCharity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchCharityInterface {
    return new utils.Interface(_abi) as DonationMatchCharityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatchCharity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonationMatchCharity;
  }
}
