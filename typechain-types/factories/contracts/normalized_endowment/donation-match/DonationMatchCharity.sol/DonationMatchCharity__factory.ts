/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatchCharity,
  DonationMatchCharityInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatchCharity.sol/DonationMatchCharity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20ApprovalGiven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
    ],
    name: "DonationMatchCharityExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct DonationMatchStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DonationMatchCharityInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555611f0590816100218239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163d5780e86146113c757508063d61e991b146100f75763e68f909d1461004257600080fd5b346100f457806003193601126100f4578060a0916080604051610064816116c3565b8281528260208201528260408201528260608201520152604051610087816116c3565b6001600160a01b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f45760803660031901126100f45761011161179c565b6001600160a01b03606435166064350361063257600260055414611383576004906002600555826001600160a01b0360035416604051938480927fe68f909d0000000000000000000000000000000000000000000000000000000082525afa918215611378578392611083575b506001600160a01b036060830151161561103f576101aa6001600160a01b03606084015116331461192e565b6024836001600160a01b03606085015116604051928380927f54f3ce9900000000000000000000000000000000000000000000000000000000825260043560048301525afa908115611034578491610a33575b5060e081015160048110156109ed576001610218911461192e565b6080810180516003811015610a1f5715610a01575b5160038110156109ed576001146109ce575b506001600160a01b0360025416906102666001600160a01b03855416809360243590611cb7565b926040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526020908181602481885afa8015610694578691889161099d575b5010610959576040517f095ea7b3000000000000000000000000000000000000000000000000000000008082526001600160a01b039095166004820152602481018690528181806044810103818a6001600160a01b03606435165af1908115610694578791610920575b50156108dc5785546040805160043581526001600160a01b036064358116602083015290921690820181905260608201879052907fedeb689ce41cb76bb0bd501ef98ddd3cc7bd27e0b41be0f39709795b1993850c90608090a16064356001600160a01b03168103610717575060288502858104602814861517156106ef5760649004938480018086116107035786039586116106ef576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101869052938285806044810103818b6001600160a01b03606435165af19485156106e457869561069f575b506040805160043581526001600160a01b0360643581166020830152929092169082015260608101959095527fe08c6dab400dfe0cee41f683992822c6ce9cbeb122367a85454ed1d64bc60f649484929182918790608090a160608501516040519182526001600160a01b03166004820152602481019390935282806044810103818a6001600160a01b03606435165af1908115610694578791610659575b506104bb9150611c14565b846001600160a01b03606083015116803b15610632578160405180927f169365e600000000000000000000000000000000000000000000000000000000825281838161052a8a606435600435600485016001600160a01b03604092959493606083019683521660208201520152565b03925af1801561063657610641575b50506060908101516040805160043581526001600160a01b03606435811660208301529092169082015290810191909152608090a16001600160a01b03606435163b1561063257816040517f42966c680000000000000000000000000000000000000000000000000000000081528260048201528181602481836001600160a01b03606435165af180156106365761061e575b50506040805160043581526064356001600160a01b03166020820152908101919091527f01ed2ab8a0c422973a1721262a1a2033bb911abbbd79675337c55bdf45fd001590606090a15b600160055580f35b6106279061172e565b6106325781386105cc565b5080fd5b6040513d84823e3d90fd5b61064a9061172e565b610655578438610539565b8480fd5b905081813d831161068d575b61066f818361177a565b81010312610689576106836104bb916118c6565b386104b0565b8580fd5b503d610665565b6040513d89823e3d90fd5b90928092955081813d83116106dd575b6106b9818361177a565b810103126106d957859485936106cf84936118c6565b5091509192610411565b8780fd5b503d6106af565b6040513d8a823e3d90fd5b602487634e487b7160e01b81526011600452fd5b602488634e487b7160e01b81526011600452fd5b6040519485526064356001600160a01b031660048601526024850186905290949293908590829060449082908a905af1801561089b5786906108a6575b61075e9150611c14565b6001600160a01b03606082015116926001600160a01b03606435163b15610689576001600160a01b0390604051947f8ea692ef0000000000000000000000000000000000000000000000000000000086528460048701526024860152600435604486015216928360648201528581608481836001600160a01b03606435165af1801561089b57610853575b50917f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f5793916001600160a01b03606060c09501511690604051933085526001600160a01b03606435169085015260408401526060830152600435608083015260a0820152a1610616565b916001600160a01b03606060c095939761088e7f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f57989661172e565b97939550505091936107e9565b6040513d88823e3d90fd5b508481813d83116108d5575b6108bc818361177a565b81010312610689576108d061075e916118c6565b610754565b503d6108b2565b6064906040519062461bcd60e51b82526004820152601560248201527f546f6b656e207472616e73666572206661696c656400000000000000000000006044820152fd5b90508181813d8311610952575b610937818361177a565b8101031261094e57610948906118c6565b38610317565b8680fd5b503d61092d565b6064906040519062461bcd60e51b82526004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152fd5b809250838092503d83116109c7575b6109b6818361177a565b8101031261094e57859051386102ad565b503d6109ac565b6001600160a01b036102a06109e792015116301461192e565b3861023f565b602485634e487b7160e01b81526021600452fd5b610a1a6001600160a01b0361018086015116301461192e565b61022d565b602486634e487b7160e01b81526021600452fd5b3d91508185823e610a44828261177a565b602081838101031261065557805167ffffffffffffffff81116106895761110081830184840103126106895760405192610a7d846116f5565b610a88828401611802565b84526020828401015167ffffffffffffffff81116106d957610ab1908285019084860101611979565b60208501526040828401015167ffffffffffffffff81116106d9576040818486010183860103126106d95760405190610ae982611712565b80848601015167ffffffffffffffff811161103057610b1190848701908387890101016119ea565b82526020818587010101519067ffffffffffffffff821161103057610b3e918487019186880101016119ea565b60208201526040850152828201606081810151908601526080015160038110156106d957608085015260a0828401015167ffffffffffffffff81116106d957610b8e908285019084860101611979565b60a085015260c0828401015167ffffffffffffffff81116106d957610bba908285019084860101611979565b60c085015260e0828401015160048110156106d95760e0850152610be3610100838501016118c6565b610100850152610bf8610120838501016118c6565b6101208501528282016101408181015190860152610160015167ffffffffffffffff81116106d957610c31908285019084860101611ac9565b610160850152610180828401015167ffffffffffffffff81116106d957610c5f908285019084860101611ac9565b610180850152610c778184016101a0848601016118d3565b6101a0850152610c8c610240838501016118c6565b6101c08501528282016102608101516101e08601526102808101516102008601526102a0810151610220860152610cc6906102c001611802565b610240850152610cdb6102e083850101611802565b610260850152610cf0610300838501016118c6565b610280850152610d0561032083850101611802565b6102a0850152610340828401015167ffffffffffffffff81116106d957610d33908285019084860101611860565b6102c0850152610360828401015167ffffffffffffffff81116106d957610d61908285019084860101611860565b6102e0850152610380828401015167ffffffffffffffff81116106d957610d8f908285019084860101611860565b610300850152610da78184016103a084860101611b5e565b610320850152610dbf81840161040084860101611b5e565b610340850152610dd781840161046084860101611b5e565b610360850152610def8184016104c084860101611b5e565b610380850152610b408383018285010361051f19011261094e576040518061024081011067ffffffffffffffff6102408301111761101c57916110a09183610240611010969501604052610e4b82860161052085880101611b99565b8152610e5f8286016105c085880101611b99565b6020820152610e7682860161066085880101611b99565b6040820152610e8d82860161070085880101611b99565b6060820152610ea48286016107a085880101611b99565b6080820152610ebb82860161084085880101611b99565b60a0820152610ed28286016108e085880101611b99565b60c0820152610ee982860161098085880101611b99565b60e0820152610f00828601610a2085880101611b99565b610100820152610f18828601610ac085880101611b99565b610120820152610f30828601610b6085880101611b99565b610140820152610f48828601610c0085880101611b99565b610160820152610f60828601610ca085880101611b99565b610180820152610f78828601610d4085880101611b99565b6101a0820152610f90828601610de085880101611b99565b6101c0820152610fa8828601610e8085880101611b99565b6101e0820152610fc0828601610f2085880101611b99565b610200820152610fd8828601610fc085880101611b99565b6102208201526103a08701528382016110608101516103c088015261100090611080016118c6565b6103e08701528301920101611816565b610400820152386101fd565b602488634e487b7160e01b81526041600452fd5b8980fd5b6040513d86823e3d90fd5b606460405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152fd5b9091503d8084833e611095818361177a565b810160208282031261137457815167ffffffffffffffff928382116106895701916104e08383031261065557604051926110ce846116f5565b6110d781611802565b84526110e560208201611802565b60208501526110f660408201611802565b604085015261110760608201611802565b606085015261111860808201611802565b608085015261112960a08201611802565b60a085015261113a60c08201611802565b60c085015261114b60e08201611802565b60e085015261010061115e818301611802565b90850152610120611170818301611802565b90850152610140611182818301611802565b90850152610160611194818301611802565b908501526101806111a6818301611802565b908501526101a06111b8818301611802565b908501526101c06111cb84828401611816565b90850152610220906111de828201611802565b6101e0860152610240936111f3858301611802565b61020087015261026092611208848401611802565b908701526102809461121b868401611802565b908701526102a09283830151908701526102c09461123a868401611802565b908701526102e080830151858111611030578301936020858403126110305760405190602082018281108882111761136057604052855196871161135c5761128a84611351986104c09801611860565b82528801526103009561129e878501611802565b908801526112b1610320928385016118d3565b908701526103c0946112c4868401611802565b908701526103e0906112d7828401611802565b90870152610400946112ea868401611802565b6103408801526112fd6104208401611802565b6103608801526113106104408401611802565b6103808801526113236104608401611802565b6103a08801526113366104808401611802565b908701526113476104a08301611802565b9086015201611802565b90820152903861017e565b8a80fd5b60248c634e487b7160e01b81526041600452fd5b8380fd5b6040513d85823e3d90fd5b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b9050346106325760a0366003190112610632576113e3816116c3565b6001600160a01b0360043581811681036113745782526024358181168103611374576020830190815261141461179c565b90604084019182526064359162ffffff90818416840361094e57606086019384526084359085821682036106d9576080870191825260045460ff8160081c1615978880996116b6575b801561169f575b156116355760ff198216600117600455879189611623575b5061148b8282511615156117b7565b51169386807fffffffffffffffffffffffff00000000000000000000000000000000000000009287848d5416178c556114c88282511615156117b7565b511692838360015416176001556114e38282511615156117b7565b5116916003549785885116156115df577f123a176064b6b36c0c200b28dbf437f6f42bd518b6f192505920e49ad5cd33dc98847fffffffffffffffffff000000000000000000000000000000000000000000000076ffffff000000000000000000000000000000000000000060c09b5160a01b1692161717948560035561156e8282511615156117b7565b51168092600254161760025560405195308752602087015260408601526060850152608084015260a01c1660a0820152a16115a65780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b606460405162461bcd60e51b815260206004820152600b60248201527f496e76616c6964204665650000000000000000000000000000000000000000006044820152fd5b61ffff1916610101176004553861147c565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156114645750600160ff831614611464565b50600160ff83161061145d565b60a0810190811067ffffffffffffffff8211176116df57604052565b634e487b7160e01b600052604160045260246000fd5b610420810190811067ffffffffffffffff8211176116df57604052565b6040810190811067ffffffffffffffff8211176116df57604052565b67ffffffffffffffff81116116df57604052565b6060810190811067ffffffffffffffff8211176116df57604052565b6080810190811067ffffffffffffffff8211176116df57604052565b90601f8019910116810190811067ffffffffffffffff8211176116df57604052565b604435906001600160a01b03821682036117b257565b600080fd5b156117be57565b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964204164647265737300000000000000000000000000000000006044820152fd5b51906001600160a01b03821682036117b257565b91908260609103126117b25760405161182e81611742565b604080829480518452602081015160208501520151910152565b67ffffffffffffffff81116116df5760051b60200190565b81601f820112156117b25780519161187783611848565b92611885604051948561177a565b808452602092838086019260051b8201019283116117b2578301905b8282106118af575050505090565b8380916118bb84611802565b8152019101906118a1565b519081151582036117b257565b91908260a09103126117b2576040516118eb816116c3565b60808082946118f9816118c6565b8452611907602082016118c6565b602085015260408101516040850152611922606082016118c6565b60608501520151910152565b1561193557565b606460405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152fd5b919080601f840112156117b25782519067ffffffffffffffff82116116df57604051916020916119b2601f8301601f191684018561177a565b8184528282870101116117b25760005b8181106119d757508260009394955001015290565b85810183015184820184015282016119c2565b81601f820112156117b257805191611a0183611848565b92611a0f604051948561177a565b808452602092838086019260051b8201019283116117b2578301905b828210611a39575050505090565b81518152908301908301611a2b565b9080601f830112156117b257815190611a6082611848565b92611a6e604051948561177a565b828452602092838086019160051b830101928084116117b257848301915b848310611a9c5750505050505090565b825167ffffffffffffffff81116117b2578691611abe84848094890101611979565b815201920191611a8c565b91906080838203126117b25760405190611ae28261175e565b819380519167ffffffffffffffff928381116117b25781611b04918401611a48565b845260208201518381116117b25781611b1e9184016119ea565b602085015260408201518381116117b25781611b3b918401611a48565b604085015260608201519283116117b257606092611b5992016119ea565b910152565b91908260609103126117b257604051611b7681611742565b6040611b59818395611b8781611802565b855260208101516020860152016118c6565b809291039160a083126117b257604051611bb28161175e565b60408194611bbf846118c6565b8352611bcd602085016118c6565b6020840152611bdd8285016118c6565b83830152605f1901126117b257606090608060405193611bfc85611712565b611c07848201611802565b8552015160208401520152565b15611c1b57565b606460405162461bcd60e51b815260206004820152600e60248201527f417070726f7665206661696c65640000000000000000000000000000000000006044820152fd5b81810292918115918404141715611c7257565b634e487b7160e01b600052601160045260246000fd5b8115611c92570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff821682036117b257565b90916001600160a01b03918216908216818114611ec9578260015416602062ffffff606460035460405194859384927f1698ee8200000000000000000000000000000000000000000000000000000000845289600485015288602485015260a01c1660448301525afa8015611e78578491600091611e8e575b5016918215611e845760e0600493604051948580927f3850c7bd0000000000000000000000000000000000000000000000000000000082525afa928315611e7857600093611de9575b501015611d9f57611d999291611d9191168092611c5f565b60601c611c5f565b60601c90565b8260601b916c0100000000000000000000000093808404851490151715611c7257611dcc91168092611c88565b8060601b928184041490151715611c7257611de691611c88565b90565b60e0939193813d8211611e70575b81611e0460e0938361177a565b810103126106325780519185831683036100f45760208201518060020b036100f457611e3260408301611ca8565b50611e3f60608301611ca8565b50611e4c60808301611ca8565b5060a082015160ff8116036100f4575060c0611e6891016118c6565b509138611d79565b3d9150611df7565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611ec1575b81611ea86020938361177a565b810103126100f45750611ebb8491611802565b38611d30565b3d9150611e9b565b5050509056fea2646970667358221220496d41f9e86e33804c9f974f09a8d54b576dc1455b758d09af7e178efbbba4ed64736f6c63430008120033";

type DonationMatchCharityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchCharityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatchCharity__factory extends ContractFactory {
  constructor(...args: DonationMatchCharityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatchCharity> {
    return super.deploy(overrides || {}) as Promise<DonationMatchCharity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatchCharity {
    return super.attach(address) as DonationMatchCharity;
  }
  override connect(signer: Signer): DonationMatchCharity__factory {
    return super.connect(signer) as DonationMatchCharity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchCharityInterface {
    return new utils.Interface(_abi) as DonationMatchCharityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatchCharity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonationMatchCharity;
  }
}
