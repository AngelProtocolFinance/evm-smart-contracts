/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatchCharity,
  DonationMatchCharityInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatchCharity.sol/DonationMatchCharity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20ApprovalGiven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
    ],
    name: "DonationMatchCharityExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct DonationMatchStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DonationMatchCharityInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555611cdf90816100218239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163d5780e861461130e57508063d61e991b146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a0916080604051610064816115b6565b8281528260208201528260408201528260608201520152604051610087816115b6565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f25760803660031901126100f25761010f611651565b6064356001600160a01b0381169003610587576002600554146112c957600260055560035460405163e68f909d60e01b815291906103e090839060049082906001600160a01b03165afa9182156112be578392611062575b5060408201516001600160a01b03161561101d5761019260018060a01b0360408401511633146116f0565b60408281015190516354f3ce9960e01b81526004803590820152908490829060249082906001600160a01b03165afa90811561101257849161094e575b5060e081015160048110156109095760016101ea91146116f0565b608081018051600281101561093a571561091d575b516002811015610909576001146108ea575b5060025483546001600160a01b0390811692916102349184916024359116611acd565b926040516370a0823160e01b81523060048201526020908181602481885afa80156105e957869188916108b9575b50106108755760405163095ea7b360e01b8082526001600160a01b039095166004820152602481018690528181806044810103818a6064356001600160a01b03165af19081156105e957879161083c575b50156108005785546040805160043581526001600160a01b036064358116602083015290921690820181905260608201879052907fedeb689ce41cb76bb0bd501ef98ddd3cc7bd27e0b41be0f39709795b1993850c90608090a16064356001600160a01b0316810361066c575060288502858104602814861517156106445760649004938480018086116106585786039586116106445760405163a9059cbb60e01b81526001600160a01b038516600482015260248101869052938285806044810103818b6064356001600160a01b03165af19485156106395786956105f4575b506040805160043581526001600160a01b0360643581166020830152929092169082015260608101959095527fe08c6dab400dfe0cee41f683992822c6ce9cbeb122367a85454ed1d64bc60f649484929182918790608090a160408581015190519182526001600160a01b03166004820152602481019390935282806044810103818a6064356001600160a01b03165af19081156105e95787916105ae575b5061043e9150611a38565b604081015185906001600160a01b0316803b1561058757816040518092630b49b2f360e11b82528183816104948a606435600435600485016040919493926060820195825260018060a01b031660208201520152565b03925af1801561058b57610596575b5050604090810151815160043581526001600160a01b0360643581166020830152909116918101919091526060810191909152608090a16064356001600160a01b03163b1561058757604051630852cd8d60e31b81526004810182905282908181602481836064356001600160a01b03165af1801561058b57610573575b50506040805160043581526064356001600160a01b03166020820152908101919091527f01ed2ab8a0c422973a1721262a1a2033bb911abbbd79675337c55bdf45fd001590606090a15b600160055580f35b61057c90611602565b610587578138610521565b5080fd5b6040513d84823e3d90fd5b61059f90611602565b6105aa5784386104a3565b8480fd5b905081813d83116105e2575b6105c48183611630565b810103126105de576105d861043e91611810565b38610433565b8580fd5b503d6105ba565b6040513d89823e3d90fd5b90928092955081813d8311610632575b61060e8183611630565b8101031261062e57859485936106248493611810565b5091509192610394565b8780fd5b503d610604565b6040513d8a823e3d90fd5b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b6040519485526064356001600160a01b031660048601526024850186905290949293908590829060449082908a905af180156107bf5786906107ca575b6106b39150611a38565b60408101516001600160a01b039081169390606435163b156105de5760405193638ea692ef60e01b85528360048601526024850152600435604485015260018060a01b03169283606482015285816084818360018060a01b03606435165af180156107bf57610783575b5060409081015181513081526001600160a01b036064358116968201969096529182019290925292166060830152600435608083015260a08201527f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f579060c090a161056b565b9160c09391956107b47f4bcd87201f9a0aabc969c069cd1b657057cf2f636ebe7a36bae9479ce7a21f579694611602565b95919350919361071d565b6040513d88823e3d90fd5b508481813d83116107f9575b6107e08183611630565b810103126105de576107f46106b391611810565b6106a9565b503d6107d6565b6064906040519062461bcd60e51b825260048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152fd5b90508181813d831161086e575b6108538183611630565b8101031261086a5761086490611810565b386102b3565b8680fd5b503d610849565b6064906040519062461bcd60e51b82526004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152fd5b809250838092503d83116108e3575b6108d28183611630565b8101031261086a5785905138610262565b503d6108c8565b6102c00151610903906001600160a01b031630146116f0565b38610211565b634e487b7160e01b85526021600452602485fd5b61093560018060a01b036101608601511630146116f0565b6101ff565b634e487b7160e01b86526021600452602486fd5b3d91508185823e61095f8282611630565b60208183810103126105aa578051906001600160401b0382116105de57610a6082820184830103126105de5760405192836104608101106001600160401b0361046086011117610ffe5761046084016040526109bc8383016116aa565b8452602083830101516001600160401b03811161062e576109e490828401908585010161172b565b6020850152604083830101516001600160401b03811161062e5760408185850101838501031261062e5760405190610a1b826115e7565b8085850101516001600160401b038111610ffa57610a4290848601908388880101016117b2565b8252602081868601010151906001600160401b038211610ffa57610a6e918486019187870101016117b2565b602082015260408501528183016060818101519086015260800151600281101561062e57608085015260a083830101516001600160401b03811161062e57610abd90828401908585010161172b565b60a085015260c083830101516001600160401b03811161062e57610ae890828401908585010161172b565b60c085015260e08383010151600481101561062e5760e0850152610b1161010084840101611810565b610100850152610b2661012084840101611810565b610120850152818301610140818101519086015261016001516001600160401b03811161062e57610b5e90828401908585010161189d565b61016085015261018083830101516001600160401b03811161062e57610b8b90828401908585010161189d565b61018085015260c08284018284010361019f19011261086a576040518060c08101106001600160401b0360c083011117610fe65760c08101604052610bd56101a085850101611810565b8152610be66101c08585010161193a565b6020820152610bfa6101e08585010161193a565b6040820152610c0e61020085850101611810565b6060820152610c226102208585010161193a565b608082015261024090610c38828686010161193a565b60a08201526101a0860152610260610c538186860101611810565b6101c0870152610280858501818101516101e08901526102a0808201516102008a01526102c0808301516102208b015294909391610c94906102e0016116aa565b90890152610ca7610300888801016116aa565b90880152610cba610320878701016116aa565b90870152610ccd61034086860101611810565b90860152610ce0610360858501016116aa565b9085015261038083830101516001600160401b03811161062e57610d0b90828401908585010161194b565b6102e08501526103a083830101516001600160401b03811161062e57610d3890828401908585010161194b565b6103008501526103c083830101516001600160401b03811161062e57610d6590828401908585010161194b565b610320850152610d7d8183016103e0858501016119b1565b610340850152610d95818301610440858501016119b1565b610360850152610dad8183016104a0858501016119b1565b610380850152610dc5818301610500858501016119b1565b6103a08501526104408284018284010361055f19011261086a57604051806102208101106001600160401b0361022083011117610fe657610a4093929181610220610fd19301604052610e20828501610560878701016119ec565b8152610e348285016105a0878701016119ec565b6020820152610e4b8285016105e0878701016119ec565b6040820152610e62828501610620878701016119ec565b6060820152610e79828501610660878701016119ec565b6080820152610e908285016106a0878701016119ec565b60a0820152610ea78285016106e0878701016119ec565b60c0820152610ebe828501610720878701016119ec565b60e0820152610ed5828501610760878701016119ec565b610100820152610eed8285016107a0878701016119ec565b610120820152610f058285016107e0878701016119ec565b610140820152610f1d828501610820878701016119ec565b610160820152610f35828501610860878701016119ec565b610180820152610f4d8285016108a0878701016119ec565b6101a0820152610f658285016108e0878701016119ec565b6101c0820152610f7d828501610920878701016119ec565b6101e0820152610f95828501610960878701016119ec565b6102008201526103c08701528284016109a08101516103e0880152610fbd906109c001611810565b61040087015282016109e0848401016116be565b610420850152010151610440820152386101cf565b634e487b7160e01b88526041600452602488fd5b8980fd5b634e487b7160e01b87526041600452602487fd5b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152606490fd5b9091506103e03d6103e0116112b7575b61107c8183611630565b81016103e0828203126112b357604051916103a0918284018481106001600160401b03821117610ffe576040526112a8916103c0916110ba826116aa565b86526110c8602083016116aa565b60208701526110d9604083016116aa565b60408701526110ea606083016116aa565b60608701526110fb608083016116aa565b608087015261110c60a083016116aa565b60a087015261111d60c083016116aa565b60c087015261112e60e083016116aa565b60e08701526101006111418184016116aa565b908701526101206111538184016116aa565b908701526101406111658184016116aa565b908701526101606111778184016116aa565b908701526101806111898184016116aa565b9087015261119c6101a0918284016116be565b90860152610200936111af8583016116aa565b6101c087015261129e610220916111c78385016116aa565b6101e0890152610240966111dc8886016116aa565b90890152610260928385015190890152610280966111fb8886016116aa565b908901526102a09261120e8486016116aa565b908901526102c0966112218886016116aa565b908901526102e0926112348486016116aa565b90890152610300966112478886016116aa565b908901526103209261125a8486016116aa565b908901526103409661126d8886016116aa565b90890152610360926112808486016116aa565b90890152610380966112938886016116aa565b9089015283016116aa565b90860152016116aa565b908201529038610167565b8380fd5b503d611072565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9050346105875760a03660031901126105875761132a816115b6565b6001600160a01b0360043581811681036112b357825260243581811681036112b3576020830190815261135b611651565b90604084019182526064359162ffffff90818416840361086a576060860193845260843590858216820361062e576080870191825260045460ff8160081c1615978880996115a9575b8015611592575b156115365760ff198216600117600455879189611524575b506113d282825116151561166c565b51169386806bffffffffffffffffffffffff60a01b9287848d5416178c556113fe82825116151561166c565b5116928383600154161760015561141982825116151561166c565b5116916003549785885116156114f1577f123a176064b6b36c0c200b28dbf437f6f42bd518b6f192505920e49ad5cd33dc988460c09962ffffff60a01b905160a01b169168ffffffffffffffffff60b81b161717948560035561148082825116151561166c565b51168092600254161760025560405195308752602087015260408601526060850152608084015260a01c1660a0820152a16114b85780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386113c3565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156113ab5750600160ff8316146113ab565b50600160ff8316106113a4565b60a081019081106001600160401b038211176115d157604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176115d157604052565b6001600160401b0381116115d157604052565b606081019081106001600160401b038211176115d157604052565b90601f801991011681019081106001600160401b038211176115d157604052565b604435906001600160a01b038216820361166757565b600080fd5b1561167357565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b038216820361166757565b9190826060910312611667576040516116d681611615565b604080829480518452602081015160208501520151910152565b156116f757565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f84011215611667578251906001600160401b0382116115d15760405191602091611763601f8301601f1916840185611630565b8184528282870101116116675760005b81811061178857508260009394955001015290565b8581018301518482018401528201611773565b6001600160401b0381116115d15760051b60200190565b81601f82011215611667578051916117c98361179b565b926117d76040519485611630565b808452602092838086019260051b820101928311611667578301905b828210611801575050505090565b815181529083019083016117f3565b5190811515820361166757565b9080601f83011215611667578151906118358261179b565b926118436040519485611630565b828452602092838086019160051b8301019280841161166757848301915b8483106118715750505050505090565b82516001600160401b0381116116675786916118928484809489010161172b565b815201920191611861565b91909160808184031261166757604051906001600160401b039060808301828111848210176115d1576040528294815183811161166757816118e091840161181d565b8452602082015183811161166757816118fa9184016117b2565b60208501526040820151838111611667578161191791840161181d565b604085015260608201519283116116675760609261193592016117b2565b910152565b519063ffffffff8216820361166757565b81601f82011215611667578051916119628361179b565b926119706040519485611630565b808452602092838086019260051b820101928311611667578301905b82821061199a575050505090565b8380916119a6846116aa565b81520191019061198c565b9190826060910312611667576040516119c981611615565b60406119358183956119da816116aa565b85526020810151602086015201611810565b91908260409103126116675760405160208101908082106001600160401b038311176115d1578160405260208194611a23846115e7565b611a2c816116aa565b84520151604082015252565b15611a3f57565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611a8857565b634e487b7160e01b600052601160045260246000fd5b8115611aa8570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff8216820361166757565b90916001600160a01b03918216908216818114611ca3578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611c52578491600091611c68575b5016918215611c5e5760e060049360405194858092633850c7bd851b82525afa928315611c5257600093611bc3575b501015611b8257611b7c9291611b7491168092611a75565b60601c611a75565b60601c90565b8260601b91600160601b93808404851490151715611a8857611ba691168092611a9e565b8060601b928184041490151715611a8857611bc091611a9e565b90565b60e0939193813d8211611c4a575b81611bde60e09383611630565b810103126105875780519185831683036100f25760208201518060020b036100f257611c0c60408301611abe565b50611c1960608301611abe565b50611c2660808301611abe565b5060a082015160ff8116036100f2575060c0611c429101611810565b509138611b5c565b3d9150611bd1565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611c9b575b81611c8260209383611630565b810103126100f25750611c9584916116aa565b38611b2d565b3d9150611c75565b5050509056fea2646970667358221220b5c3e82a0b9cf3871846f20ad188e90ca427b725c6b2b7c461ce73c9aa95222564736f6c63430008120033";

type DonationMatchCharityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchCharityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatchCharity__factory extends ContractFactory {
  constructor(...args: DonationMatchCharityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatchCharity> {
    return super.deploy(overrides || {}) as Promise<DonationMatchCharity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatchCharity {
    return super.attach(address) as DonationMatchCharity;
  }
  override connect(signer: Signer): DonationMatchCharity__factory {
    return super.connect(signer) as DonationMatchCharity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchCharityInterface {
    return new utils.Interface(_abi) as DonationMatchCharityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatchCharity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonationMatchCharity;
  }
}
