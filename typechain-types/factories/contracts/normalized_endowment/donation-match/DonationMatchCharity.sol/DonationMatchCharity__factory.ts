/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatchCharity,
  DonationMatchCharityInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatchCharity.sol/DonationMatchCharity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20ApprovalGiven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
    ],
    name: "DonationMatchCharityExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct DonationMatchStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DonationMatchCharityInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555611c0990816100218239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163cfcb6c5b146103ae57508063d5780e86146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a09160806040516100648161155c565b82815282602082015282604082015282606082015201526040516100878161155c565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f25760a03660031901126100f2576040516101138161155c565b6001600160a01b0360043581811681036103a55782526024359080821682036103a557602083019182526101456114e6565b90604084019182526064359262ffffff9081851685036103aa57606086019485526084359083821682036103a5576080870191825260045460ff8160081c161597888099610398575b8015610381575b156103255760ff1982166001176004558591829182918b610313575b506101c08282511615156115b3565b5116926bffffffffffffffffffffffff60a01b93848c5416178b556101e98282511615156115b3565b511695868360015416176001556102048282511615156115b3565b5116906003549584885116156102e0578560c097847f123a176064b6b36c0c200b28dbf437f6f42bd518b6f192505920e49ad5cd33dc9a62ffffff60a01b905160a01b169168ffffffffffffffffff60b81b161717948560035561026c8282511615156115b3565b511680926002541617600255604051953087528a5416602087015260408601526060850152608084015260a01c1660a0820152a16102a75780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386101b1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101955750600160ff831614610195565b50600160ff83161061018e565b600080fd5b8680fd5b9050346108695760803660031901126108695763ffffffff6004351660043503610869576103da6114e6565b906064356001600160a01b03811690036114e2576002600554146114a05750600260055560035460405163e68f909d60e01b815291906103e0908190849060049082906001600160a01b03165afa92831561120b57849361125b575b505060408201516001600160a01b0316156112165761046260018060a01b036040840151163314611637565b60408281015190516364ce479160e11b81526004803563ffffffff1690820152908490829060249082906001600160a01b03165afa90811561120b578491610c32575b506080810180516002811015610c1e57610bd35750506104d360018060a01b03610160840151163014611637565b60025483546001600160a01b0390811693916104f591859160243591166119f7565b926040516370a0823160e01b8152306004820152602081602481855afa80156108cf5785918791610b9e575b5010610b595760405163095ea7b360e01b81526001600160a01b0390911660048201526024810184905260208180604481010381886064356001600160a01b03165af1908115610a9c578591610b1f575b5015610ae25783546040805160043563ffffffff1681526001600160a01b036064358116602083015290921690820181905260608201859052907f4a3ad0dbd85a4cac2e1c00b96464bc06036951251508d9b62ca51b886caaaff790608090a16064356001600160a01b0316810361093e575090602883028381046028148415171561091657606490049182800180841161092a5784039384116109165760405163a9059cbb60e01b81526001600160a01b0383166004820152602481018490529160208380604481010381896064356001600160a01b03165af19283156108cf5784936108da575b506040805163ffffffff6004351681526001600160a01b0360643581166020830152929092169082015260608101939093527ff8277fe14d65517ce640ccce16352b0e58a41454407dc2268b071132222065e2928390608090a1604081810151905163095ea7b360e01b81526001600160a01b0390911660048201526024810183905260208180604481010381896064356001600160a01b03165af180156108cf578690610890575b61070e9150611962565b604081015185906001600160a01b0316803b15610869578160405180926307f740eb60e21b825281838161076a8a6064356004356004850160409194939263ffffffff606083019616825260018060a01b031660208201520152565b03925af1801561086d57610878575b5050604090810151815160043563ffffffff1681526001600160a01b0360643581166020830152909116918101919091526060810191909152608090a16064356001600160a01b03163b1561086957604051630852cd8d60e31b81526004810182905282908181602481836064356001600160a01b03165af1801561086d57610855575b50506040805160043563ffffffff1681526064356001600160a01b03166020820152908101919091527fda9b11b27beb64dea29f65d97a0e9490c9bb41bbf5e75535ebfc8c246cf7e61b90606090a15b600160055580f35b61085e90611549565b6108695781386107fd565b5080fd5b6040513d84823e3d90fd5b61088190611549565b61088c578438610779565b8480fd5b506020813d6020116108c7575b816108aa60209383611592565b810103126108c3576108be61070e91611874565b610704565b8580fd5b3d915061089d565b6040513d88823e3d90fd5b92506020833d60201161090e575b816108f560209383611592565b810103126108c3576109078493611874565b503861065b565b3d91506108e8565b634e487b7160e01b85526011600452602485fd5b634e487b7160e01b86526011600452602486fd5b60405163095ea7b360e01b81526064356001600160a01b0316600482015260248101859052906020908290604490829089905af18015610a9c578590610aa7575b6109899150611962565b60408101516001600160a01b039081169290606435163b1561088c576040519263de764d2160e01b8452846004850152602484015263ffffffff60043516604484015260018060a01b03169182606482015284816084818360018060a01b03606435165af18015610a9c57610a62575b5060409081015181513081526001600160a01b03606435811660208301529281019490945216606083015263ffffffff60043516608083015260a08201527f47adb03c0fd8d6563b7649bdf746d6ec42aa57fff4e14d543fdef3474a5de4b49060c090a161084d565b917f47adb03c0fd8d6563b7649bdf746d6ec42aa57fff4e14d543fdef3474a5de4b4939194610a9260c094611549565b94919350916109f9565b6040513d87823e3d90fd5b506020813d602011610ada575b81610ac160209383611592565b8101031261088c57610ad561098991611874565b61097f565b3d9150610ab4565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b90506020813d602011610b51575b81610b3a60209383611592565b8101031261088c57610b4b90611874565b38610572565b3d9150610b2d565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152606490fd5b9150506020813d602011610bcb575b81610bba60209383611592565b810103126108c35784905138610521565b3d9150610bad565b516002811015610c0a57600114610beb575b506104d3565b6102400151610c04906001600160a01b03163014611637565b38610be5565b634e487b7160e01b85526021600452602485fd5b634e487b7160e01b86526021600452602486fd5b3d91508185823e610c438282611592565b602081838101031261088c5780516001600160401b0381116108c3576108a081830184840103126108c35760405192610c7b846114fc565b610c868284016115f1565b8452602082840101516001600160401b03811161120357610cae908285019084860101611672565b6020850152604082840101516001600160401b038111611203578284010160408183860103126112035760405190610ce58261152e565b80516001600160401b03811161120757610d04908487019083016116f9565b82526020810151906001600160401b03821161120757610d289184870191016116f9565b602082015260408501528282016060818101519086015260800151600281101561120357608085015260a082840101516001600160401b03811161120357610d77908285019084860101611672565b60a085015260c082840101516001600160401b03811161120357610da2908285019084860101611672565b60c085015282820160e0818101519086015261010001516001600160401b03811161120357610dd89082850190848601016117d7565b61010085015261012082840101516001600160401b03811161120357610e059082850190848601016117d7565b61012085015260c08383018285010361013f1901126103aa576040518060c08101106001600160401b0360c0830111176111ef5760c08101604052610e4f61014084860101611874565b8152610e6061016084860101611881565b6020820152610e7461018084860101611881565b6040820152610e886101a084860101611874565b6060820152610e9c6101c084860101611881565b6080820152610eb06101e084860101611881565b60a0820152610140850152610eca61020083850101611874565b6101608501528282016102208101516101808601526102408101516101a0860152610ef890610260016115f1565b6101c0850152610f0d610280838501016115f1565b6101e0850152610f226102a0838501016115f1565b610200850152610f376102c083850101611874565b610220850152610f4c6102e0838501016115f1565b61024085015261030082840101516001600160401b03811161120357610f79908285019084860101611892565b61026085015261032082840101516001600160401b03811161120357610fa6908285019084860101611892565b61028085015261034082840101516001600160401b03811161120357610fd3908285019084860101611892565b6102a0850152610feb818401610360848601016118f8565b6102c08501526110038184016103c0848601016118f8565b6102e085015261101b818401610420848601016118f8565b6103008501526103808383018285010361047f1901126103aa57604051806101c08101106001600160401b036101c0830111176111ef579161084091836101c06111e396950160405261107682860161048085880101611933565b815261108a8286016104c085880101611933565b60208201526110a182860161050085880101611933565b60408201526110b882860161054085880101611933565b60608201526110cf82860161058085880101611933565b60808201526110e68286016105c085880101611933565b60a08201526110fd82860161060085880101611933565b60c082015261111482860161064085880101611933565b60e082015261112b82860161068085880101611933565b6101008201526111438286016106c085880101611933565b61012082015261115b82860161070085880101611933565b61014082015261117382860161074085880101611933565b61016082015261118b82860161078085880101611933565b6101808201526111a38286016107c085880101611933565b6101a08201526103208701526111be61080083860101611881565b6103408701526111d361082083860101611874565b6103608701528301920101611605565b610380820152386104a5565b634e487b7160e01b88526041600452602488fd5b8780fd5b8980fd5b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152606490fd5b90809293503d8311611499575b6112728183611592565b81019181830312611495576040519161128a836114fc565b611293826115f1565b83526112a1602083016115f1565b60208401526112b2604083016115f1565b60408401526112c3606083016115f1565b60608401526112d4608083016115f1565b60808401526112e560a083016115f1565b60a08401526112f660c083016115f1565b60c084015261130760e083016115f1565b60e084015261010061131a8184016115f1565b9084015261012061132c8184016115f1565b9084015261014061133e8184016115f1565b908401526101606113508184016115f1565b908401526101806113628184016115f1565b908401526113756101a091828401611605565b908301526114896103c06102009261138e8482016115f1565b6101c08601526102206113a28183016115f1565b6101e0870152610240946113b78684016115f1565b90870152610260908183015190870152610280946113d68684016115f1565b908701526102a0906113e98284016115f1565b908701526102c0946113fc8684016115f1565b908701526102e09061140f8284016115f1565b90870152610300946114228684016115f1565b90870152610320906114358284016115f1565b90870152610340946114488684016115f1565b908701526103609061145b8284016115f1565b908701526103809461146e8684016115f1565b9087015261147f6103a083016115f1565b90860152016115f1565b90820152903880610436565b8380fd5b503d611268565b62461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8280fd5b604435906001600160a01b03821682036103a557565b6103a081019081106001600160401b0382111761151857604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761151857604052565b6001600160401b03811161151857604052565b60a081019081106001600160401b0382111761151857604052565b606081019081106001600160401b0382111761151857604052565b90601f801991011681019081106001600160401b0382111761151857604052565b156115ba57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b03821682036103a557565b91908260609103126103a55760405161161d81611577565b604080829480518452602081015160208501520151910152565b1561163e57565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f840112156103a5578251906001600160401b03821161151857604051916020916116aa601f8301601f1916840185611592565b8184528282870101116103a55760005b8181106116cf57508260009394955001015290565b85810183015184820184015282016116ba565b6001600160401b0381116115185760051b60200190565b81601f820112156103a557805191611710836116e2565b9261171e6040519485611592565b808452602092838086019260051b8201019283116103a5578301905b828210611748575050505090565b8151815290830190830161173a565b9080601f830112156103a55781519061176f826116e2565b9261177d6040519485611592565b828452602092838086019160051b830101928084116103a557848301915b8483106117ab5750505050505090565b82516001600160401b0381116103a55786916117cc84848094890101611672565b81520192019161179b565b9190916080818403126103a557604051906001600160401b0390608083018281118482101761151857604052829481518381116103a5578161181a918401611757565b845260208201518381116103a557816118349184016116f9565b602085015260408201518381116103a55781611851918401611757565b604085015260608201519283116103a55760609261186f92016116f9565b910152565b519081151582036103a557565b519063ffffffff821682036103a557565b81601f820112156103a5578051916118a9836116e2565b926118b76040519485611592565b808452602092838086019260051b8201019283116103a5578301905b8282106118e1575050505090565b8380916118ed846115f1565b8152019101906118d3565b91908260609103126103a55760405161191081611577565b604061186f818395611921816115f1565b85526020810151602086015201611874565b91908260409103126103a55760405161194b8161152e565b6020808294611959816115f1565b84520151910152565b1561196957565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b818102929181159184041417156119b257565b634e487b7160e01b600052601160045260246000fd5b81156119d2570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff821682036103a557565b90916001600160a01b03918216908216818114611bcd578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611b7c578491600091611b92575b5016918215611b885760e060049360405194858092633850c7bd851b82525afa928315611b7c57600093611aed575b501015611aac57611aa69291611a9e9116809261199f565b60601c61199f565b60601c90565b8260601b91600160601b938084048514901517156119b257611ad0911680926119c8565b8060601b9281840414901517156119b257611aea916119c8565b90565b60e0939193813d8211611b74575b81611b0860e09383611592565b810103126108695780519185831683036100f25760208201518060020b036100f257611b36604083016119e8565b50611b43606083016119e8565b50611b50608083016119e8565b5060a082015160ff8116036100f2575060c0611b6c9101611874565b509138611a86565b3d9150611afb565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611bc5575b81611bac60209383611592565b810103126100f25750611bbf84916115f1565b38611a57565b3d9150611b9f565b5050509056fea2646970667358221220571f02aca8a2fcac9c3146af9a1437fdc7ed15096a625e83488afc0f516896ab64736f6c63430008120033";

type DonationMatchCharityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchCharityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatchCharity__factory extends ContractFactory {
  constructor(...args: DonationMatchCharityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatchCharity> {
    return super.deploy(overrides || {}) as Promise<DonationMatchCharity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatchCharity {
    return super.attach(address) as DonationMatchCharity;
  }
  override connect(signer: Signer): DonationMatchCharity__factory {
    return super.connect(signer) as DonationMatchCharity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchCharityInterface {
    return new utils.Interface(_abi) as DonationMatchCharityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatchCharity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonationMatchCharity;
  }
}
