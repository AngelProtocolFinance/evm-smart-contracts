/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  DonationMatchCharity,
  DonationMatchCharityInterface,
} from "../../../../../contracts/normalized_endowment/donation-match/DonationMatchCharity.sol/DonationMatchCharity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20ApprovalGiven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationMatchCharityErc20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accountsContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "donor",
        type: "address",
      },
    ],
    name: "DonationMatchCharityExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationMatch",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        indexed: false,
        internalType: "struct DonationMatchStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "DonationMatchCharityInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "executeDonorMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
        ],
        internalType: "struct DonationMatchMessages.InstantiateMessage",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reserveToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "usdcAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct DonationMatchStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b576001600555611ce890816100218239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163cfcb6c5b146103ae57508063d5780e86146100f55763e68f909d1461004257600080fd5b346100f257806003193601126100f2578060a091608060405161006481611611565b828152826020820152826040820152826060820152015260405161008781611611565b600180841b0380925416918282528060015416906020830191825280600254169260408101938452816003549481608060608501948289168652019562ffffff80988b1c16875260405198895251166020880152511660408601525116606084015251166080820152f35b80fd5b50346100f25760a03660031901126100f25760405161011381611611565b6001600160a01b0360043581811681036103a55782526024359080821682036103a557602083019182526101456115b7565b90604084019182526064359262ffffff9081851685036103aa57606086019485526084359083821682036103a5576080870191825260045460ff8160081c161597888099610398575b8015610381575b156103255760ff1982166001176004558591829182918b610313575b506101c0828251161515611668565b5116926bffffffffffffffffffffffff60a01b93848c5416178b556101e9828251161515611668565b51169586836001541617600155610204828251161515611668565b5116906003549584885116156102e0578560c097847f123a176064b6b36c0c200b28dbf437f6f42bd518b6f192505920e49ad5cd33dc9a62ffffff60a01b905160a01b169168ffffffffffffffffff60b81b161717948560035561026c828251161515611668565b511680926002541617600255604051953087528a5416602087015260408601526060850152608084015260a01c1660a0820152a16102a75780f35b61ff0019600454166004557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642046656560a81b6044820152606490fd5b61ffff191661010117600455386101b1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101955750600160ff831614610195565b50600160ff83161061018e565b600080fd5b8680fd5b9050346108665760803660031901126108665763ffffffff6004351660043503610866576103da6115b7565b906064356001600160a01b03811690036115b3576002600554146115715750600260055560035460405163e68f909d60e01b815291906103e090839060049082906001600160a01b03165afa9182156115665783926112f7575b5060408201516001600160a01b0316156112b25761045f60018060a01b0360408401511633146116ec565b60408281015190516364ce479160e11b81526004803563ffffffff1690820152908490829060249082906001600160a01b03165afa9081156112a7578491610c2f575b506080810180516002811015610c1b57610bd05750506104d060018060a01b036101608401511630146116ec565b60025483546001600160a01b0390811693916104f29185916024359116611ad6565b926040516370a0823160e01b8152306004820152602081602481855afa80156108cc5785918791610b9b575b5010610b565760405163095ea7b360e01b81526001600160a01b0390911660048201526024810184905260208180604481010381886064356001600160a01b03165af1908115610a99578591610b1c575b5015610adf5783546040805160043563ffffffff1681526001600160a01b036064358116602083015290921690820181905260608201859052907f4a3ad0dbd85a4cac2e1c00b96464bc06036951251508d9b62ca51b886caaaff790608090a16064356001600160a01b0316810361093b57509060288302838104602814841517156109135760649004918280018084116109275784039384116109135760405163a9059cbb60e01b81526001600160a01b0383166004820152602481018490529160208380604481010381896064356001600160a01b03165af19283156108cc5784936108d7575b506040805163ffffffff6004351681526001600160a01b0360643581166020830152929092169082015260608101939093527ff8277fe14d65517ce640ccce16352b0e58a41454407dc2268b071132222065e2928390608090a1604081810151905163095ea7b360e01b81526001600160a01b0390911660048201526024810183905260208180604481010381896064356001600160a01b03165af180156108cc57869061088d575b61070b9150611a41565b604081015185906001600160a01b0316803b15610866578160405180926307f740eb60e21b82528183816107678a6064356004356004850160409194939263ffffffff606083019616825260018060a01b031660208201520152565b03925af1801561086a57610875575b5050604090810151815160043563ffffffff1681526001600160a01b0360643581166020830152909116918101919091526060810191909152608090a16064356001600160a01b03163b1561086657604051630852cd8d60e31b81526004810182905282908181602481836064356001600160a01b03165af1801561086a57610852575b50506040805160043563ffffffff1681526064356001600160a01b03166020820152908101919091527fda9b11b27beb64dea29f65d97a0e9490c9bb41bbf5e75535ebfc8c246cf7e61b90606090a15b600160055580f35b61085b906115fe565b6108665781386107fa565b5080fd5b6040513d84823e3d90fd5b61087e906115fe565b610889578438610776565b8480fd5b506020813d6020116108c4575b816108a760209383611647565b810103126108c0576108bb61070b91611929565b610701565b8580fd5b3d915061089a565b6040513d88823e3d90fd5b92506020833d60201161090b575b816108f260209383611647565b810103126108c0576109048493611929565b5038610658565b3d91506108e5565b634e487b7160e01b85526011600452602485fd5b634e487b7160e01b86526011600452602486fd5b60405163095ea7b360e01b81526064356001600160a01b0316600482015260248101859052906020908290604490829089905af18015610a99578590610aa4575b6109869150611a41565b60408101516001600160a01b039081169290606435163b15610889576040519263de764d2160e01b8452846004850152602484015263ffffffff60043516604484015260018060a01b03169182606482015284816084818360018060a01b03606435165af18015610a9957610a5f575b5060409081015181513081526001600160a01b03606435811660208301529281019490945216606083015263ffffffff60043516608083015260a08201527f47adb03c0fd8d6563b7649bdf746d6ec42aa57fff4e14d543fdef3474a5de4b49060c090a161084a565b917f47adb03c0fd8d6563b7649bdf746d6ec42aa57fff4e14d543fdef3474a5de4b4939194610a8f60c0946115fe565b94919350916109f6565b6040513d87823e3d90fd5b506020813d602011610ad7575b81610abe60209383611647565b8101031261088957610ad261098691611929565b61097c565b3d9150610ab1565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b90506020813d602011610b4e575b81610b3760209383611647565b8101031261088957610b4890611929565b3861056f565b3d9150610b2a565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74205265736572766520546f6b656e0000000000006044820152606490fd5b9150506020813d602011610bc8575b81610bb760209383611647565b810103126108c0578490513861051e565b3d9150610baa565b516002811015610c0757600114610be8575b506104d0565b6102400151610c01906001600160a01b031630146116ec565b38610be2565b634e487b7160e01b85526021600452602485fd5b634e487b7160e01b86526021600452602486fd5b3d91508185823e610c408282611647565b6020818381010312610889578051906001600160401b0382116108c057610c0082820184830103126108c05760405192836103e08101106001600160401b036103e086011117611293576103e08401604052610c9d8383016116a6565b8452602083830101516001600160401b03811161128757610cc5908284019085850101611727565b6020850152604083830101516001600160401b038111611287578383010160408183850103126112875760405190610cfc826115cd565b80516001600160401b03811161128f57610d1b908486019083016117ae565b82526020810151906001600160401b03821161128f57610d3f9184860191016117ae565b602082015260408501528183016060818101519086015260800151600281101561128757608085015260a083830101516001600160401b03811161128757610d8e908284019085850101611727565b60a085015260c083830101516001600160401b03811161128757610db9908284019085850101611727565b60c085015281830160e0818101519086015261010001516001600160401b03811161128757610def90828401908585010161188c565b61010085015261012083830101516001600160401b03811161128757610e1c90828401908585010161188c565b61012085015260c08284018284010361013f1901126103aa576040518060c08101106001600160401b0360c0830111176112735760c08101604052610e6661014085850101611929565b8152610e7761016085850101611936565b6020820152610e8b61018085850101611936565b6040820152610e9f6101a085850101611929565b6060820152610eb36101c085850101611936565b6080820152610ec76101e085850101611936565b60a0820152610140850152610ee161020084840101611929565b610160850152818301610220810151610180860152610240808201516101a08701529061026090610f139082016116a6565b6101c087015261028091610f2a83878701016116a6565b6101e0880152610f3f6102a0878701016116a6565b610200880152610f546102c087870101611929565b610220880152610f696102e0878701016116a6565b9087015261030085850101516001600160401b03811161128f57610f94908486019087870101611947565b9086015261032084840101516001600160401b03811161128b57610fbf908385019086860101611947565b9085015261034083830101516001600160401b03811161128757610fea908284019085850101611947565b6102a0850152611002818301610360858501016119ad565b6102c085015261101a8183016103c0858501016119ad565b6102e0850152611032818301610420858501016119ad565b61030085015261104a818301610480858501016119ad565b610320850152610660828401828401036104df1901126103aa57604051806102208101106001600160401b036102208301111761127357610be09392918161022061125e93016040526110a58285016104e0878701016119e8565b81526110b9828501610540878701016119e8565b60208201526110d08285016105a0878701016119e8565b60408201526110e7828501610600878701016119e8565b60608201526110fe828501610660878701016119e8565b60808201526111158285016106c0878701016119e8565b60a082015261112c828501610720878701016119e8565b60c0820152611143828501610780878701016119e8565b60e082015261115a8285016107e0878701016119e8565b610100820152611172828501610840878701016119e8565b61012082015261118a8285016108a0878701016119e8565b6101408201526111a2828501610900878701016119e8565b6101608201526111ba828501610960878701016119e8565b6101808201526111d28285016109c0878701016119e8565b6101a08201526111ea828501610a20878701016119e8565b6101c0820152611202828501610a80878701016119e8565b6101e082015261121a828501610ae0878701016119e8565b610200820152610340870152611235610b4085850101611936565b61036087015261124a610b6085850101611929565b6103808701528201610b80848401016116ba565b6103a08501520101516103c0820152386104a2565b634e487b7160e01b88526041600452602488fd5b8780fd5b8880fd5b8980fd5b634e487b7160e01b87526041600452602487fd5b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601760248201527f4163636f756e7473204e6f7420436f6e666967757265640000000000000000006044820152606490fd5b9091506103e03d6103e01161155f575b6113118183611647565b8101906103e08183031261155b57604051916103a083018381106001600160401b0382111761154757604052611346826116a6565b8352611354602083016116a6565b6020840152611365604083016116a6565b6040840152611376606083016116a6565b6060840152611387608083016116a6565b608084015261139860a083016116a6565b60a08401526113a960c083016116a6565b60c08401526113ba60e083016116a6565b60e08401526101006113cd8184016116a6565b908401526101206113df8184016116a6565b908401526101406113f18184016116a6565b908401526101606114038184016116a6565b908401526101806114158184016116a6565b908401526114286101a0918284016116ba565b9083015261153c6103c0610200926114418482016116a6565b6101c08601526102206114558183016116a6565b6101e08701526102409461146a8684016116a6565b90870152610260908183015190870152610280946114898684016116a6565b908701526102a09061149c8284016116a6565b908701526102c0946114af8684016116a6565b908701526102e0906114c28284016116a6565b90870152610300946114d58684016116a6565b90870152610320906114e88284016116a6565b90870152610340946114fb8684016116a6565b908701526103609061150e8284016116a6565b90870152610380946115218684016116a6565b908701526115326103a083016116a6565b90860152016116a6565b908201529038610434565b634e487b7160e01b86526041600452602486fd5b8380fd5b503d611307565b6040513d85823e3d90fd5b62461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8280fd5b604435906001600160a01b03821682036103a557565b604081019081106001600160401b038211176115e857604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116115e857604052565b60a081019081106001600160401b038211176115e857604052565b606081019081106001600160401b038211176115e857604052565b90601f801991011681019081106001600160401b038211176115e857604052565b1561166f57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606490fd5b51906001600160a01b03821682036103a557565b91908260609103126103a5576040516116d28161162c565b604080829480518452602081015160208501520151910152565b156116f357565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b919080601f840112156103a5578251906001600160401b0382116115e8576040519160209161175f601f8301601f1916840185611647565b8184528282870101116103a55760005b81811061178457508260009394955001015290565b858101830151848201840152820161176f565b6001600160401b0381116115e85760051b60200190565b81601f820112156103a5578051916117c583611797565b926117d36040519485611647565b808452602092838086019260051b8201019283116103a5578301905b8282106117fd575050505090565b815181529083019083016117ef565b9080601f830112156103a55781519061182482611797565b926118326040519485611647565b828452602092838086019160051b830101928084116103a557848301915b8483106118605750505050505090565b82516001600160401b0381116103a557869161188184848094890101611727565b815201920191611850565b9190916080818403126103a557604051906001600160401b039060808301828111848210176115e857604052829481518381116103a557816118cf91840161180c565b845260208201518381116103a557816118e99184016117ae565b602085015260408201518381116103a5578161190691840161180c565b604085015260608201519283116103a55760609261192492016117ae565b910152565b519081151582036103a557565b519063ffffffff821682036103a557565b81601f820112156103a55780519161195e83611797565b9261196c6040519485611647565b808452602092838086019260051b8201019283116103a5578301905b828210611996575050505090565b8380916119a2846116a6565b815201910190611988565b91908260609103126103a5576040516119c58161162c565b60406119248183956119d6816116a6565b85526020810151602086015201611929565b8092910391606083126103a557604051611a01816115cd565b60408194611a0e84611929565b8352601f1901126103a5576020906040805193611a2a856115cd565b611a358482016116a6565b85520151828401520152565b15611a4857565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b81810292918115918404141715611a9157565b634e487b7160e01b600052601160045260246000fd5b8115611ab1570490565b634e487b7160e01b600052601260045260246000fd5b519061ffff821682036103a557565b90916001600160a01b03918216908216818114611cac578260015416602062ffffff60646003546040519485938492630b4c774160e11b845289600485015288602485015260a01c1660448301525afa8015611c5b578491600091611c71575b5016918215611c675760e060049360405194858092633850c7bd851b82525afa928315611c5b57600093611bcc575b501015611b8b57611b859291611b7d91168092611a7e565b60601c611a7e565b60601c90565b8260601b91600160601b93808404851490151715611a9157611baf91168092611aa7565b8060601b928184041490151715611a9157611bc991611aa7565b90565b60e0939193813d8211611c53575b81611be760e09383611647565b810103126108665780519185831683036100f25760208201518060020b036100f257611c1560408301611ac7565b50611c2260608301611ac7565b50611c2f60808301611ac7565b5060a082015160ff8116036100f2575060c0611c4b9101611929565b509138611b65565b3d9150611bda565b6040513d6000823e3d90fd5b5050505050600090565b91506020823d8211611ca4575b81611c8b60209383611647565b810103126100f25750611c9e84916116a6565b38611b36565b3d9150611c7e565b5050509056fea26469706673582212202ced7a6fcecb821bdf3d11f66a9c97bfacd8dbf09b04786d67f6d8c79f56dd6964736f6c63430008120033";

type DonationMatchCharityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationMatchCharityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonationMatchCharity__factory extends ContractFactory {
  constructor(...args: DonationMatchCharityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonationMatchCharity> {
    return super.deploy(overrides || {}) as Promise<DonationMatchCharity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DonationMatchCharity {
    return super.attach(address) as DonationMatchCharity;
  }
  override connect(signer: Signer): DonationMatchCharity__factory {
    return super.connect(signer) as DonationMatchCharity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationMatchCharityInterface {
    return new utils.Interface(_abi) as DonationMatchCharityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonationMatchCharity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonationMatchCharity;
  }
}
