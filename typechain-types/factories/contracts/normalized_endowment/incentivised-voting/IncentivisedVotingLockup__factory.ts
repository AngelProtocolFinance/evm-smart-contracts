/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IncentivisedVotingLockup,
  IncentivisedVotingLockupInterface,
} from "../../../../contracts/normalized_endowment/incentivised-voting/IncentivisedVotingLockup";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "locktime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum IncentivisedVotingLockup.LockAction",
        name: "action",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ejected",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ejector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "Ejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Expired",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    name: "WithdrawVested",
    type: "event",
  },
  {
    inputs: [],
    name: "END",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAXTIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curBlocknumber",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "curUnlocktime",
        type: "uint256",
      },
    ],
    name: "createLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAddr",
        type: "address",
      },
    ],
    name: "eject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expireContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAddr",
        type: "address",
      },
    ],
    name: "getLastUserPoint",
    outputs: [
      {
        internalType: "int128",
        name: "bias",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "slope",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAddr",
        type: "address",
      },
    ],
    name: "getVestedAmount",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curValue",
        type: "uint256",
      },
    ],
    name: "increaseLockAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curUnlocktime",
        type: "uint256",
      },
    ],
    name: "increaseLockLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curStakingtoken",
        type: "address",
      },
      {
        internalType: "string",
        name: "curName",
        type: "string",
      },
      {
        internalType: "string",
        name: "curSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "int128",
        name: "amount",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pointHistory",
    outputs: [
      {
        internalType: "int128",
        name: "bias",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "slope",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blk",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slopeChanges",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curAddr",
        type: "address",
      },
    ],
    name: "staticBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaticWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "curBlocknumber",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curNewowner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPointEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userPointHistory",
    outputs: [
      {
        internalType: "int128",
        name: "bias",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "slope",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "ts",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blk",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100435760006001815560018060b01b0319600354166003556012600c5580600d5580600e5580600f558060105560115561327d90816100498239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314611af1575081630700037d14611ab95781630f73d0b4146119c957816318160ddd1461199d578163313ce5671461197e57816334d901a4146119395781633ccfd60b146103815781633fdd420e14611913578163403f4447146117115781634c2067c7146116ed5781634ee2cd7e146116c45781635719098b146116a65781636316028214611485578163700a4a741461144d57816370a082311461142757816372f702f3146113fe5781637b0a47ee146113df57816381fc83bb146113a75781638ad4c447146113485781638b87634714611310578163901d13e214610fe05781639065714714610b3857816395d89b4114610a57578163981b24d014610a30578163af5bb34e14610a11578163b52c05fe146107d1578163c2c4c5c114610535578163c4698ee5146104f7578163c8f33c91146104d8578163cbf9fe5f14610487578163d5a73fdd146103a5578163df136d6514610386578163e9fad8ee14610381578163ebe2b12b14610362578163ee00ef3a14610343578163efe7a50414610324578163f2fde38b14610230578163f52a36f714610201575063f851a440146101d257600080fd5b346101fd57816003193601126101fd57600354905160089190911c6001600160a01b03168152602090f35b5080fd5b90503461022c57602036600319011261022c576020928291358152600884522054600f0b9051908152f35b8280fd5b90503461022c57602036600319011261022c5761024b611ca8565b6001600160a01b0392909190838316156102e157600354938460081c163303610294575050610100600160a81b031990911660089190911b610100600160a81b03161760035580f35b906020608492519162461bcd60e51b8352820152602160248201527f4f6e6c79206f776e65722063616e207472616e73666572206f776e65727368696044820152600760fc1b6064820152fd5b906020606492519162461bcd60e51b8352820152602060248201527f4e6577206f776e65722063616e6e6f74206265207a65726f20616464726573736044820152fd5b5050346101fd57816003193601126101fd576020906002549051908152f35b5050346101fd57816003193601126101fd57602090516301e133808152f35b5050346101fd57816003193601126101fd57602090600d549051908152f35b611d30565b5050346101fd57816003193601126101fd576020906011549051908152f35b828434610484576020366003190112610484576001600160a01b036103c8611ca8565b1691828252600960205261040a6103e482842054600f0b61270e565b84845260096020526104046103ff60028587200154426120dc565b61270e565b906120e9565b928252600960205261042b6103ff82842060026001820154910154906120dc565b92600f0b92600f0b9182156104715760016001607f1b0319841460001984141661045e575060209350519105600f0b8152f35b634e487b7160e01b815260118552602490fd5b634e487b7160e01b815260128552602490fd5b80fd5b5050346101fd5760203660031901126101fd5760609181906001600160a01b036104af611ca8565b1681526009602052208054600f0b91600260018301549201549181519384526020840152820152f35b5050346101fd57816003193601126101fd576020906010549051908152f35b5050346101fd5760203660031901126101fd5760609061051d610518611ca8565b612063565b919290815193600f0b8452600f0b6020840152820152f35b8383346101fd57816003193601126101fd5780519261055384611bd3565b82845282826020958287820152015261056a6120b7565b506105736120b7565b50805490825161058281611c05565b8481528486820152428482015243606082015292826107b7575b80840195865196606086019788518451936105b685611c05565b898552898186015260608686019584875201918252899380514211610762575b916105e48497969594612acb565b928b975b60ff8910610601575b8c6105fe8d8d8d55611f6e565b80f35b62093a8085969798999b9293949501809611610710578c908c878b849942811160001461073357505050869783809281999899429b8c9461066761065e6106546103ff610674955b88019b8c519a6120dc565b600f98890b6120e9565b8551880b61212f565b860b84528751860b612154565b840b938487528251900b1261072b575b505012610723575b505084908583528d6106bd8651670de0b6b3a76400006106b66106b08d518c6120dc565b8c612ab8565b0490612009565b90526001810180911161071057994286036106f2575050505050505050506105fe9394439052849386808080808080806105f1565b610704906106ff8d611f6e565b612120565b979695949391906105e8565b634e487b7160e01b8d5260118a5260248dfd5b528b8e61068c565b52818f610684565b829a5092856106748b61066761065e6106549d9e9d6103ff869a988799885260088652872054600f0b94610649565b935061076f8b51436120dc565b670de0b6b3a7640000908181029181830414901517156107a45761079e906107988651426120dc565b90612100565b936105d6565b634e487b7160e01b8b526011885260248bfd5b92506107cb6107c583611cc3565b5061202c565b9261059c565b8383346101fd57806003193601126101fd578235906107ee61285f565b6107fd60ff6003541615612771565b610808602435612acb565b3384526020906009825282852095600187549701549684519061082a82611bd3565b600f0b81528381019788528481019242845286151592610849846127b3565b8251600f0b6109ce574282111561097c5750976108ec9188996108706002548211156127ff565b8151600f0b92519551906108a789519461088986611bd3565b8086528986019889528a86019384526108a18c61270e565b90612154565b600f0b845280610974575b50338a52600987526002888b209184516001600160801b0319845416906001600160801b031617835587516001840155519101553361217a565b61092d575b5190825193845283015242908201527fbe9cf0e939c614fad640a623a53ba0a807c8cb503c4c4c8dacabe27b86ff2dd560603392a36001815580f35b60015483516323b872dd60e01b848201523360248201523060448201526064808201879052815261096f916001600160a01b031661096a82611c21565b6128b5565b6108f1565b86528b6108b2565b865162461bcd60e51b8152908101869052602660248201527f43616e206f6e6c79206c6f636b20756e74696c2074696d6520696e207468652060448201526566757475726560d01b6064820152608490fd5b865162461bcd60e51b8152908101869052601960248201527f5769746864726177206f6c6420746f6b656e73206669727374000000000000006044820152606490fd5b5050346101fd57816003193601126101fd57602090600f549051908152f35b8284346104845760203660031901126104845750610a5060209235612f11565b9051908152f35b5050346101fd57816003193601126101fd5780519082600b54610a7981611b99565b80855291600191808316908115610b105750600114610ab3575b505050610aa582610aaf940383611c3d565b5191829182611c5f565b0390f35b9450600b85527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b828610610af857505050610aa5826020610aaf9582010194610a93565b80546020878701810191909152909501948101610adb565b610aaf975086935060209250610aa594915060ff191682840152151560051b82010194610a93565b90503461022c57606036600319011261022c57610b53611ca8565b9160249067ffffffffffffffff8235818111610fdc57610b769036908601611f27565b604435828111610fd857610b8d9036908701611f27565b600396875460ff8160a81c16610fa05760ff60a81b1916600160a81b178855600180546001600160a01b0319166001600160a01b0392909216918217815585519095909188908b90610bde85611c05565b818552610bfd6020958693848201524286820152436060820152611f6e565b835163313ce56760e01b815292839182905afa908115610f96578b91610f5a575b5060ff6012911680600c5511610f0e57508251848111610efc5780610c44600a54611b99565b94601f95868111610e8f575b508390868311600114610e11578c92610e06575b5050600019828b1b1c191690861b17600a555b8151938411610df457610c8b600b54611b99565b838111610d92575b5080928411600114610d1057509282939183928994610d05575b50501b9160001990861b1c191617600b555b6301e13380420191824211610cf45750506002558054610100600160a81b0319163360081b610100600160a81b031617905580f35b634e487b7160e01b85526011905283fd5b015192503880610cad565b919083601f198116600b8b527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9948b905b88838310610d785750505010610d60575b505050811b01600b55610cbf565b015160001983881b60f8161c19169055388080610d52565b858701518855909601959485019487935090810190610d41565b600b8a527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98480870160051c820192848810610deb575b0160051c019086905b828110610de0575050610c93565b8b8155018690610dd2565b92508192610dc9565b634e487b7160e01b8952604187528589fd5b015190503880610c64565b600a8d528893507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a89190601f1984168e5b87828210610e795750508411610e61575b505050811b01600a55610c77565b0151600019838d1b60f8161c19169055388080610e53565b8385015186558c97909501949384019301610e42565b909150600a8c527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88680850160051c820192868610610ef3575b918a91869594930160051c01915b828110610ee5575050610c50565b8e81558594508a9101610ed7565b92508192610ec9565b634e487b7160e01b8a5260418852868afd5b5162461bcd60e51b8152808801919091526021818701527f43616e6e6f742068617665206d6f7265207468616e20313820646563696d616c6044820152607360f81b6064820152608490fd5b90508281813d8311610f8f575b610f718183611c3d565b81010312610f8b575160ff81168103610f8b5760ff610c1e565b8a80fd5b503d610f67565b82513d8d823e3d90fd5b855162461bcd60e51b81526020818a015260138189015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8780fd5b8680fd5b9190503461022c576020918260031936011261130c57610ffe611ca8565b9261100e60ff6003541615612771565b6001600160a01b0384811680875260098352848720855191969291889061103481611bd3565b8254600f0b90818152886002600186015495868a8501520154910152139081611301575b50156112bf576110678261302a565b1561127d5761107461285f565b8587526009835284872093600185015460028654600f0b96015487519661109a88611bd3565b87528186880152878701524210801590611271575b1561123557878551600f0b13156111f25750938386936111c1897ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689561096a7f3a1df3c76d2dfab31786674a912f29b53c3a12a052fe94502a99e66f9286bf3f9a61111e889b51600f0b612a69565b96879489519061112d82611bd3565b80825260028d8c8b85019380855281860192818452815260098d52209284516001600160801b0319855416906001600160801b03161784555160018401555191015560ff60035416156111e1575b5050600154885163a9059cbb60e01b888201526001600160a01b03909416602485015260448401949094529192919091169082606481015b03601f198101845283611c3d565b82519182524290820152a26001845551328152426020820152604090a280f35b6111eb918561217a565b388061117b565b855162461bcd60e51b8152908101849052601f60248201527f4d757374206861766520736f6d657468696e6720746f207769746864726177006044820152606490fd5b855162461bcd60e51b81529081018490526016602482015275546865206c6f636b206469646e27742065787069726560501b6044820152606490fd5b5060ff600354166110af565b5050606492519162461bcd60e51b8352820152601c60248201527f55736572206d7573742068617665206578697374696e672062696173000000006044820152fd5b5050606492519162461bcd60e51b8352820152601860248201527f5573657273206c6f636b206469646e27742065787069726500000000000000006044820152fd5b905042101538611058565b8380fd5b5050346101fd5760203660031901126101fd5760209181906001600160a01b03611338611ca8565b1681526012845220549051908152f35b839150346101fd5760203660031901126101fd573590600554821015610484575061137290611cc3565b50805460018201546002909201549251600f82810b8252608092831d900b602082015260408101929092526060820192909252f35b5050346101fd5760203660031901126101fd5760209181906001600160a01b036113cf611ca8565b1681526007845220549051908152f35b5050346101fd57816003193601126101fd57602090600e549051908152f35b5050346101fd57816003193601126101fd5760015490516001600160a01b039091168152602090f35b5050346101fd5760203660031901126101fd57602090610a50611448611ca8565b612ae5565b5050346101fd5760203660031901126101fd5760209181906001600160a01b03611475611ca8565b1681526014845220549051908152f35b8383346101fd576020908160031936011261022c576114a261285f565b6114b160ff6003541615612771565b33835260098252808320600181549101548251916114ce83611bd3565b600f0b8252838201908152828201914283526114ea8735612acb565b868251600f0b131561166f57428351111561163d5782518111156115fa576115166002548211156127ff565b8151600f0b925193519085519361152c85611bd3565b80855287850195865286850192835260016001607f1b03811360016001607f1b03198212176115e757600298995090849392916115a39552806115df575b503389526009875287868a209184516001600160801b0319845416906001600160801b031617835586516001840155519101553361217a565b5181519285845283015242908201527fbe9cf0e939c614fad640a623a53ba0a807c8cb503c4c4c8dacabe27b86ff2dd560603392a36001815580f35b85528961156a565b634e487b7160e01b895260118a52602489fd5b845162461bcd60e51b8152808901879052601b60248201527f43616e206f6e6c7920696e637265617365206c6f636b205745454b00000000006044820152606490fd5b845162461bcd60e51b8152808901879052600c60248201526b131bd8dac8195e1c1a5c995960a21b6044820152606490fd5b845162461bcd60e51b81528089018790526011602482015270139bdd1a1a5b99c81a5cc81b1bd8dad959607a1b6044820152606490fd5b90503461022c578260031936011261022c5760209250549051908152f35b5050346101fd57806003193601126101fd57602090610a506116e4611ca8565b60243590612bca565b5050346101fd57816003193601126101fd5760209060ff6003541690519015158152f35b8383346101fd576020908160031936011261022c5783359161173161285f565b61174060ff6003541615612771565b3384526009815281842094855490600260018801549701549184519061176582611bd3565b600f0b815283810197885284810192835285151591611783836127b3565b878251600f0b13156118d75788514210156118885750600196978161180e9251600f0b915194516117d18851936117b985611bd3565b8085528885019788528985019283526108a18b61270e565b600f0b8352338b52600987526002888c209184516001600160801b0319845416906001600160801b031617835587518c840155519101553361217a565b61184e575190825193845283015242908201527fbe9cf0e939c614fad640a623a53ba0a807c8cb503c4c4c8dacabe27b86ff2dd560603392a36001815580f35b61096f858060a01b038654168451906323b872dd60e01b858301523360248301523060448301528660648301526064825261096a82611c21565b855162461bcd60e51b81529081018590526024808201527f43616e6e6f742061646420746f2065787069726564206c6f636b2e20576974686044820152636472617760e01b6064820152608490fd5b855162461bcd60e51b81529081018590526016602482015275139bc8195e1a5cdd1a5b99c81b1bd8dac8199bdd5b9960521b6044820152606490fd5b5050346101fd5760203660031901126101fd57602090610a50611934611ca8565b61302a565b5050346101fd57806003193601126101fd57611953611ca8565b6001600160a01b0316825260066020528082208054602435919082101561130c579061137291611d14565b5050346101fd57816003193601126101fd57602090600c549051908152f35b82843461048457806003193601126104845750610a506119c26107c560209454611cc3565b4290612e2e565b90503461022c578260031936011261022c57600354916119ec60ff841615612771565b600883901c6001600160a01b03163303611a7657600d54421115611a3d5760ff198316600117600355837f203d82d8d99f63bfecc8335216735e0271df4249ea752b030f9ab305b94e5afe8180a180f35b906020606492519162461bcd60e51b835282015260136024820152722832b934b7b21036bab9ba1031329037bb32b960691b6044820152fd5b906020606492519162461bcd60e51b8352820152601e60248201527f4f6e6c79206f776e65722063616e2065787069726520636f6e747261637400006044820152fd5b5050346101fd5760203660031901126101fd5760209181906001600160a01b03611ae1611ca8565b1681526013845220549051908152f35b8490843461022c578260031936011261022c5782600a54611b1181611b99565b80855291600191808316908115610b105750600114611b3c57505050610aa582610aaf940383611c3d565b9450600a85527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b828610611b8157505050610aa5826020610aaf9582010194610a93565b80546020878701810191909152909501948101611b64565b90600182811c92168015611bc9575b6020831014611bb357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611ba8565b6060810190811067ffffffffffffffff821117611bef57604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117611bef57604052565b60a0810190811067ffffffffffffffff821117611bef57604052565b90601f8019910116810190811067ffffffffffffffff821117611bef57604052565b6020808252825181830181905290939260005b828110611c9457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611c72565b600435906001600160a01b0382168203611cbe57565b600080fd5b600554811015611cfe576003906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015611cfe576000526003602060002091020190600090565b34611cbe5760008060031936011261048457611d4a61285f565b338152602060098152604080832091600183015460028454940154835194611d7186611bd3565b600f0b85528183860152838501524210801590611eff575b15611ec457838351600f0b1315611e8257907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56891611dca8451600f0b612a69565b938251611dd681611bd3565b8681528281018781526002858301898152338a5260098652868a209284516001600160801b0319855416906001600160801b03161784555160018401555191015560ff6003541615611e71575b5050600154825163a9059cbb60e01b8382015233602482015260448101869052611e5d916001600160a01b031661096a82606481016111b3565b815193845242908401523392a26001815580f35b611e7b913361217a565b3880611e23565b606491519062461bcd60e51b82526004820152601f60248201527f4d757374206861766520736f6d657468696e6720746f207769746864726177006044820152fd5b606491519062461bcd60e51b825260048201526016602482015275546865206c6f636b206469646e27742065787069726560501b6044820152fd5b5060ff60035416611d89565b67ffffffffffffffff8111611bef57601f01601f191660200190565b81601f82011215611cbe57803590611f3e82611f0b565b92611f4c6040519485611c3d565b82845260208383010111611cbe57816000926020809301838601378301015290565b600554600160401b811015611bef57806001611f8d9201600555611cc3565b919091611fd6578051602082015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03909116178255604081015160018301556060015160029190910155565b634e487b7160e01b600052600060045260246000fd5b8054600160401b811015611bef57611f8d91600182018155611d14565b9190820180921161201657565b634e487b7160e01b600052601160045260246000fd5b9060405161203981611c05565b606060028294805480600f0b855260801d600f0b6020850152600181015460408501520154910152565b6001600160a01b031660009081526007602052604081205480156120b0576107c590604061209693600660205220611d14565b908151600f0b9060406020840151600f0b93015191929190565b5080918190565b604051906120c482611c05565b60006060838281528260208201528260408201520152565b9190820391821161201657565b90600f0b90600f0b029081600f0b91820361201657565b811561210a570490565b634e487b7160e01b600052601260045260246000fd5b60001981146120165760010190565b600f91820b910b039060016001607f1b0319821260016001607f1b0383131761201657565b90600f0b90600f0b019060016001607f1b0319821260016001607f1b0383131761201657565b9190916121856120b7565b9261218e6120b7565b9260009485936004549060018060a01b03169081612536575b6040516121b381611c05565b60008152600060208201524260408201524360608201529080612522575b6040820151606083015190604051916121e983611c05565b60008352600060208401528160408401526060830152600091604085015142116124cb575b612219829392612acb565b916000935b60ff851061239c575b50505050509061223e916004558261232057611f6e565b61224b575b505050505050565b602080930195428751116122bf575b5050019283519042821161226f575b80612243565b511061227d575b8080612269565b602061228e920151600f0b9061212f565b905160005260086020526040600020906001600160801b0319825416906001600160801b0316179055388080612276565b836122cf920151600f0b90612154565b8282015186511461230a575b8551600052600883526040600020906001600160801b0319825416906001600160801b0316179055388061225a565b61231b9083860151600f0b9061212f565b6122db565b60006020820180519061234f61234260208d015193600f94850b90850b612154565b6020890151840b9061212f565b820b8152826123736123698d8751860b9051860b90612154565b8951850b9061212f565b830b928386528251900b12612393575b501215611f6e5760008152611f6e565b82905238612383565b62093a808495969401809511612016578694600090804281111561249f575050602095600061240181936123f46123eb6123e16103ff429d8e985b01998a51986120dc565b600f96870b6120e9565b8d51860b61212f565b840b8c528551840b612154565b820b918285528a51900b12612497575b1261248d575b5083928460408801526124486060840151670de0b6b3a76400006106b661244260408801518a6120dc565b86612ab8565b60608801526001810180911161201657944285036124795750504360608601525061223e9150389050808080612227565b612486906106ff88611f6e565b939261221e565b6000905238612417565b818952612411565b61240182986123f46123eb6123e16103ff602060408a60009b998c9a52600883522054600f0b956123d7565b916124da6060860151436120dc565b90670de0b6b3a76400009182810292818404149015171561250e5750612508906107986040870151426120dc565b9161220e565b634e487b7160e01b81526011600452602490fd5b90506125306107c582611cc3565b906121d1565b60208086018051421080612701575b6126d3575b818601998a9242845111806126c6575b612696575b858252600781528a8761259861259060409785898820549586159586612680575b5001519051904290600f0b6130be565b600f54612009565b9015612636575b600f55600181018091116126225782916008918887955260078252848420558c84429101528c606043910152878352600681526125de8d858520611fec565b84518352522054600f0b995190816125f9575b5050506121a7565b519297509091810361261257505086945b3880806125f1565b60005260002054600f0b9461260a565b634e487b7160e01b83526011600452602483fd5b61267b908885526006845261267561265084898820611d14565b505460801d8a875260068652600161266a868b8a20611d14565b5001548851916130be565b906120dc565b61259f565b61269090600684528c8b20611fec565b8d612580565b6126bc818c6301e133808b51600f0b05600f0b91829101526104046103ff4288516120dc565b600f0b8b5261255f565b50818851600f0b1361255a565b6126f76301e133808851600f0b05600f0b80848801526104046103ff4285516120dc565b600f0b855261254a565b50898751600f0b13612545565b9081600f0b91820361271c57565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608490fd5b1561277857565b60405162461bcd60e51b815260206004820152601360248201527210dbdb9d1c9858dd081a5cc8195e1c1a5c9959606a1b6044820152606490fd5b156127ba57565b60405162461bcd60e51b815260206004820152601a60248201527f4d757374207374616b65206e6f6e207a65726f20616d6f756e740000000000006044820152606490fd5b1561280657565b60405162461bcd60e51b815260206004820152602b60248201527f566f74696e67206c6f636b2063616e20626520312079656172206d617820287560448201526a6e74696c207265636f6c2960a81b6064820152608490fd5b600260005414612870576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60018060a01b031690604051604081019080821067ffffffffffffffff831117611bef57612945916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d156129d0573d9161292a83611f0b565b926129386040519485611c3d565b83523d868885013e6129d4565b805180612953575b50505050565b818491810103126101fd578201519081159182150361048457506129795780808061294d565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b91929015612a3657508151156129e8575090565b3b156129f15790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612a495750805190602001fd5b60405162461bcd60e51b8152908190612a659060048301611c5f565b0390fd5b60008112612a745790565b606460405162461bcd60e51b815260206004820152602060248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152fd5b8181029291811591840414171561201657565b62093a808091048181029181830414901517156120165790565b6001600160a01b03166000908152600760205260408120548015612b6f5790612b1c6107c5612b6493600660205260408420611d14565b9080612b4e8351612b456020860151612b3c6103ff6040890151426120dc565b90600f0b6120e9565b90600f0b61212f565b600f0b80845212612b67575b5051600f0b612a69565b90565b815238612b5a565b5090565b15612b7a57565b60405162461bcd60e51b815260206004820152602260248201527f4d757374207061737320626c6f636b206e756d62657220696e207468652070616044820152611cdd60f21b6064820152608490fd5b90612bd743821115612b73565b60009160018060a01b031691828152602090600782526040938482205482905b60808210612d3e575b50508115612d3457612c20916107c5916000526006845285600020611d14565b9260045490612c2f8285612db0565b93612c3c6107c586611cc3565b92851015612d025760018501809511612016576103ff612b4593612b3c92612c696107c5612caf99611cc3565b90612c8e86612c8160608501516060870151906120dc565b93015187850151906120dc565b905b868401519383612ccd575b5050505087519588015193880151906120dc565b600f0b9081905260008112612cc757612b6490612a69565b50600090565b612cf392612ce8612cf99695936060612cee940151906120dc565b90612ab8565b612100565b90612009565b38808080612c9b565b612caf94506103ff83612b3c92612d206060612b45970151436120dc565b90612d2e86840151426120dc565b90612c90565b5050505050600090565b909281811015612daa57612d528282612009565b6001808201809211612016571c908360005260068652866002612d78848b600020611d14565b50015411612d915750612d8b9093612120565b90612bf7565b939150600019810190811161201657612d8b9091612120565b92612c00565b6000919082915b60808310612dc6575b50505090565b90919281811015612e2857612ddb8282612009565b6001808201809211612016571c90836002612df584611cc3565b50015411612e0f5750612e089093612120565b9190612db7565b939150600019810190811161201657612e089091612120565b92612dc0565b9190916040808201612e408151612acb565b9460005b60ff8110612e76575b50505050612b6491925060008151600f0b12612e6d575b51600f0b612a69565b60008152612e64565b62093a808701809711612016576000968083811115612efd57505081965b87865191612ec66020890193612ebe8551612eb66103ff600f978c51906120dc565b90860b6120e9565b90840b61212f565b820b8852848a14612ef55790612ee48392612ef0959451830b612154565b900b9052878452612120565b612e44565b505050612e4d565b885260086020529684902054600f0b612e94565b612f1d43821115612b73565b600454612f2a8183612db0565b612f366107c582611cc3565b916060830193845181811161301f57600092841015612fd257506001830180931161201657612b6494612f6e6107c5612f8e95611cc3565b8151606082019384518203612f94575b50505050505b6040830151612009565b90612e2e565b612fc8955091612ce86040612fb0612fbe9461079897966120dc565b92015160408a0151906120dc565b92519051906120dc565b3880808080612f7e565b612f8e9350612b649591438203612fec575b505050612f84565b61301793506130016107989261300f926120dc565b612ce86040880151426120dc565b9151436120dc565b388080612fe4565b505050505050600090565b6001600160a01b03166000818152600760205260408120549091811580156130a0575b61309b57600160408483612b64965260066020528261308761307187858520611d14565b505460801d968684526006602052848420611d14565b5001549381526009602052200154916130be565b505090565b5060066020526130b38260408520611d14565b5054600f0b1561304d565b918082116130f957612710916130d3916120dc565b91600f0b029081600f0b91820361201657612ce86130f3612b6493612a69565b91613101565b505050600090565b8061310c5750600090565b600181600160801b811015613235575b6131c66131b96131ac61319f6131926131856131dd97600888600160401b6131d39a1015613228575b64010000000081101561321b575b6201000081101561320f575b610100811015613203575b60108110156131f6575b10156131ee575b612cf3818b612100565b60011c612cf3818a612100565b60011c612cf38189612100565b60011c612cf38188612100565b60011c612cf38187612100565b60011c612cf38186612100565b60011c612cf38185612100565b60011c8092612100565b808210156131e9575090565b905090565b60011b61317b565b60041c9160021b91613174565b811c9160041b9161316a565b60101c91811b9161315f565b60201c9160101b91613153565b60401c9160201b91613145565b50600160401b9050608082901c61311c56fea264697066735822122032f79e1ef90a017f8297e4a2e848db27da1fad6b6b5e6e8e93892558f8bb03ff64736f6c63430008120033";

type IncentivisedVotingLockupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncentivisedVotingLockupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncentivisedVotingLockup__factory extends ContractFactory {
  constructor(...args: IncentivisedVotingLockupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncentivisedVotingLockup> {
    return super.deploy(overrides || {}) as Promise<IncentivisedVotingLockup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IncentivisedVotingLockup {
    return super.attach(address) as IncentivisedVotingLockup;
  }
  override connect(signer: Signer): IncentivisedVotingLockup__factory {
    return super.connect(signer) as IncentivisedVotingLockup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncentivisedVotingLockupInterface {
    return new utils.Interface(_abi) as IncentivisedVotingLockupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncentivisedVotingLockup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncentivisedVotingLockup;
  }
}
