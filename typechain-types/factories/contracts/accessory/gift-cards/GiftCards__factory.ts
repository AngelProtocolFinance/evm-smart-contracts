/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GiftCards,
  GiftCardsInterface,
} from "../../../../contracts/accessory/gift-cards/GiftCards";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.AllowanceAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "GiftCardsUpdateBalances",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Deposit",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "executeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeDepositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidPercentage",
        type: "uint256",
      },
    ],
    name: "executeSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct GiftCardsMessage.InstantiateMsg",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
    ],
    name: "queryBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct GiftCardsStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "queryDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct GiftCardsStorage.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarContract",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c6576001606b556006549060ff8260081c16610074575060ff80821610610039575b60405161146190816100cc8239f35b60ff90811916176006557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861002a565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816311c9a94d14611074575080631dbfb30f14610ca757806338485c5914610ac2578063715018a614610a625780638da5cb5b14610a3a578063935feaa51461099d578063ac42a4eb14610955578063b6a597dd14610733578063e687f79f146101a5578063e68f909d1461012f5763f2fde38b1461009b57600080fd5b3461012b57602036600319011261012b576100b46111d3565b906100bd611274565b6001600160a01b038216156100d957506100d6906112cc565b80f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461012b578160031936011261012b579060809161014c611406565b5080519061015982611204565b60018060a01b0380935416928383528060015416602084019081528180600254169184860192835260606003549601958652845196875251166020860152511690830152516060820152f35b503461012b5760a036600319011261012b5760043563ffffffff9182821680920361072f576101d26111ee565b608435606494853591866101e682856113cf565b036106f657604435956101fa871515611375565b33895260209760058952868a209560018060a01b0380911696878c528a5288888c2054106106b45780600154168851809163e68f909d60e01b82528160046103e09485935afa918d83156106a957908b93929192610416575b5050018b8b8b6044858551168d51948593849263095ea7b360e01b8452600484015260248301528d5af190811561040c578d916103df575b50156103ab57908b959493929151168851926102a684611236565b83528a8301968752888301938452803b156103a75787869260a4958b51998a988997631b13439160e01b8952511660048801525160248701525160448601528401528960848401525af1801561039d5761036e575b50338552600584528185208160005284528160002080549084820391821161035a5755815133815293840152820152600160608201527f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db490608090a180f35b634e487b7160e01b87526011600452602487fd5b67ffffffffffffffff819692961161038957825293386102fb565b634e487b7160e01b82526041600452602482fd5b83513d88823e3d90fd5b8580fd5b885162461bcd60e51b8152600481018c9052600e60248201526d105c1c1c9bdd994819985a5b195960921b60448201528390fd5b6103ff91508c8d3d10610405575b6103f78183611252565b8101906113b7565b3861028b565b503d6103ed565b8a513d8f823e3d90fd5b8193508092503d83116106a2575b61042e8183611252565b81010390811261069e578951906103a09081830183811067ffffffffffffffff821117610689578c526060908e610464866113f2565b85526104718187016113f2565b908501526104808d86016113f2565b8d85015261048f8286016113f2565b8285015261049f608086016113f2565b60808501526104b060a086016113f2565b60a08501526104c160c086016113f2565b60c08501526104d260e086016113f2565b60e08501526101006104e58187016113f2565b908501526101206104f78187016113f2565b908501526101406105098187016113f2565b9085015261016061051b8187016113f2565b9085015261018061052d8187016113f2565b9085015261019f1901126106855761067a6103c08c948f9361067087519161055483611236565b6101a0928385015181526101c09788860151908201526101e093848601518b830152890152610200966105888886016113f2565b908901526102209261059b8486016113f2565b90890152610240966105ae8886016113f2565b90890152610260928385015190890152610280966105cd8886016113f2565b908901526102a0926105e08486016113f2565b908901526102c0966105f38886016113f2565b908901526102e0926106068486016113f2565b90890152610300966106198886016113f2565b908901526103209261062c8486016113f2565b908901526103409661063f8886016113f2565b90890152610360926106528486016113f2565b90890152610380966106658886016113f2565b9089015283016113f2565b90860152016113f2565b908201523880610253565b8d80fd5b50634e487b7160e01b8f52604160045260248ffd5b8c80fd5b503d610424565b8b51903d90823e3d90fd5b50865162461bcd60e51b8152600481018a9052601e60248201527f496e73756666696369656e74207370656e6461626c652062616c616e636500006044820152fd5b845162461bcd60e51b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b60448201528790fd5b8380fd5b503461012b578060031936011261012b57805181810181811067ffffffffffffffff8211176109415782526107666111d3565b81526107706111ee565b906020810191825260069182549160ff8360081c161592838094610934575b801561091d575b156108c25760ff1981166001178555610816929190846108b1575b506107d460ff865460081c166107c681611315565b6107cf81611315565b611315565b6107dd336112cc565b8654336001600160a01b03199182161788559151600180546001600160a01b039283169085161790559051600280549093169116179055565b6001600381905583516000546001600160a01b03908116825282548116602083015260025416604082015260608101919091527fd3b4944622ba3933e922c4ed265fe2df22540c84d2eca7fbd9d942593577453f90608090a1610877578280f35b805461ff001916905551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff1916610101178555386107b1565b855162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156107965750600160ff821614610796565b50600160ff82161061078f565b634e487b7160e01b84526041600452602484fd5b503461012b578060031936011261012b57806020926109726111d3565b61097a6111ee565b6001600160a01b0391821683526005865283832091168252845220549051908152f35b503461012b57602036600319011261012b57610a38816080936109be611406565b5060043581526004602052209160ff60038251946109db86611204565b60018060a01b038082541687526001820154166020870152600281015484870152015416151560608401525180926060809160018060a01b0380825116855260208201511660208501526040810151604085015201511515910152565bf35b503461012b578160031936011261012b5760395490516001600160a01b039091168152602090f35b8234610abf5780600319360112610abf57610a7b611274565b603980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b509034610abf5781600319360112610abf57600435610adf6111ee565b6002546001600160a01b03929083163303610c63578084526020906004825260ff6003878720015416610c1f57946004610c19928787987f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db498528282527f363486153e7f2aa0a57195763226fc3a6fd1caf0d7820b2ba18cc536be40582160a0858b2060038101600160ff1982541617905560028751918583528b815416878401528b600182015416898401520154606082015260016080820152a18089528282526002848a2001548787168a5260058352848a20828b52848452886001878d200154168b528352610bd5858b209182546113cf565b9055885252808620600181015460029091015491516001600160a01b0394851681529416909216602084015260408301919091526000606083015281906080820190565b0390a180f35b855162461bcd60e51b815260048101839052601760248201527f4465706f73697420616c726561647920636c61696d65640000000000000000006044820152606490fd5b845162461bcd60e51b815260206004820152601e60248201527f4f6e6c79206b65657065722063616e20636c61696d206465706f7369747300006044820152606490fd5b503461012b57606036600319011261012b57610cc16111d3565b610cc96111ee565b825191610cd583611204565b3383526001600160a01b038216602084015260443584840181905260608401869052610d02901515611375565b60015484516302b05ecb60e11b81526001600160a01b038481166004830152909160209183916024918391165afa908115610fa9578691611055575b5015611021578351636eb1769f60e11b81523360048201523060248201526020816044816001600160a01b0387165afa908115610fa9578691610fef575b5060443511610fb35783516323b872dd60e01b81523360048201523060248201526044803590820152602081606481896001600160a01b0388165af1908115610fa9578691610f8a575b5015610f54577f363486153e7f2aa0a57195763226fc3a6fd1caf0d7820b2ba18cc536be4058219260a09290916001600160a01b0381169182610ed1575b505050600354855260046020526003848620600180851b038351166bffffffffffffffffffffffff851b90818354161782556001820190600180871b0360208601511690825416179055858301516002820155016060820151151560ff80198354169116179055610eab60035494519185835260208301906060809160018060a01b0380825116855260208201511660208501526040810151604085015201511515910152565ba160018101809111610ebd5760035580f35b634e487b7160e01b82526011600452602482fd5b7f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db4926001606086015288526005602052868820600180871b0382168952602052868820610f2160443582546113cf565b905586516001600160a01b03928316815291166020820152604435604082015260006060820152608090a1388080610e04565b835162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606490fd5b610fa3915060203d602011610405576103f78183611252565b38610dc6565b85513d88823e3d90fd5b835162461bcd60e51b8152602060048201526015602482015274496e737566696369656e7420416c6c6f77616e636560581b6044820152606490fd5b90506020813d602011611019575b8161100a60209383611252565b810103126103a7575138610d7c565b3d9150610ffd565b835162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2102a37b5b2b760991b6044820152606490fd5b61106e915060203d602011610405576103f78183611252565b38610d3e565b83833461012b57606036600319011261012b5761108f6111d3565b926110986111ee565b604435916001600160a01b0380841692918385036111cf57865490828216330361118d5750817fd3b4944622ba3933e922c4ed265fe2df22540c84d2eca7fbd9d942593577453f9798169081611179575b50508116611154575b5061112f575b50516000546001600160a01b0390811682526001548116602083015260025416604082015260035460608201528060808101610c19565b600180546001600160a01b0319166001600160a01b03909216919091179055836110f8565b600280546001600160a01b0319166001600160a01b03909216919091179055856110f2565b6001600160a01b03191617875587806110e9565b62461bcd60e51b815260206004820152601c60248201527f4f6e6c79206f776e65722063616e2075706461746520636f6e666967000000006044820152606490fd5b8680fd5b600435906001600160a01b03821682036111e957565b600080fd5b602435906001600160a01b03821682036111e957565b6080810190811067ffffffffffffffff82111761122057604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761122057604052565b90601f8019910116810190811067ffffffffffffffff82111761122057604052565b6039546001600160a01b0316330361128857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561131c57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561137c57565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081e995c9bc8185b5bdd5b9d606a1b6044820152606490fd5b908160209103126111e9575180151581036111e95790565b919082018092116113dc57565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b03821682036111e957565b6040519061141382611204565b6000606083828152826020820152826040820152015256fea2646970667358221220591ea39696069d3766ddf89e751451e1191e204b5ebe4a14d6ba7e69107ab84a64736f6c63430008120033";

type GiftCardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftCardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftCards__factory extends ContractFactory {
  constructor(...args: GiftCardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftCards> {
    return super.deploy(overrides || {}) as Promise<GiftCards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GiftCards {
    return super.attach(address) as GiftCards;
  }
  override connect(signer: Signer): GiftCards__factory {
    return super.connect(signer) as GiftCards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftCardsInterface {
    return new utils.Interface(_abi) as GiftCardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftCards {
    return new Contract(address, _abi, signerOrProvider) as GiftCards;
  }
}
