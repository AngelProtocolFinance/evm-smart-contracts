/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GiftCards,
  GiftCardsInterface,
} from "../../../../contracts/accessory/gift-cards/GiftCards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        indexed: false,
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "balance",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateBalances",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.AssetInfoBase",
                name: "info",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct AngelCoreStruct.AssetBase",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Deposit",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateDeposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "executeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
    ],
    name: "executeDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum AngelCoreStruct.AssetInfoBase",
            name: "info",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AngelCoreStruct.AssetBase",
        name: "fund",
        type: "tuple",
      },
    ],
    name: "executeDepositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AngelCoreStruct.AssetInfoBase",
            name: "info",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct AngelCoreStruct.AssetBase",
        name: "fund",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "endowmentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidPercentage",
        type: "uint256",
      },
    ],
    name: "executeSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct GiftCardsMessage.InstantiateMsg",
        name: "curDetails",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "queryBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct GiftCardsStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "queryDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum AngelCoreStruct.AssetInfoBase",
                name: "info",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct AngelCoreStruct.AssetBase",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct GiftCardsStorage.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarContract",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100205760ff19600654166006556123c890816100268239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816311c9a94d14611a295750806337f428411461190757806338485c5914611618578063935feaa51461150e578063b17ba7c414610eff578063b6a597dd14610e0d578063b7013b191461061f578063c1d78b6a146101155763e68f909d1461008457600080fd5b346101125780600319360112610112578060809160606040516100a681611c4c565b82815282602082015282604082015201526040516100c381611c4c565b60018060a01b0380925416918282528060015416602083019081528180600254169160408501928352606060035495019485526040519586525116602085015251166040830152516060820152f35b80fd5b5060403660031901126101125761012a611b48565b610132611b63565b61013d341515611d6b565b600390815460405161014e81611c4c565b600194858252602093348584015287604084015260405192604084019367ffffffffffffffff94818110868211176106095760405260068152654d617474696360d01b878201526060820152604051936101a785611c1c565b6001600160a01b039384168552868501918252604085018a8152928990808616898d82156104635760406101fc91600080516020612333833981519152968a526005848a510151948683525220918254611de2565b90558c526005895260408c209061021860405192839283611e88565b0390a1858a526004875260408a2093808651166001600160601b0360a01b90818754161786558a860193519384518b81101561044f5760ff801983541691161790558884015160028701558986019160408501511690825416179055606060048501920151805191821161043b578989916102938554611da8565b601f81116103eb575b5089908d601f86116001146103635794600594816000805160206123538339815191529d9c9b99956102fc999582956103129d9a95610358575b50501b92600019911b1c19161790555b51151591019060ff801983541691151516179055565b6040805194859485528401526040830190611b86565b0390a1805491820180921161034457556000805160206123738339815191526040518061033e81611d3a565b0390a180f35b634e487b7160e01b83526011600452602483fd5b0151935038806102d6565b9294939190601f1985168785528c8520945b8181106103d15750936102fc97936103129a979387936000805160206123538339815191529f9e9d9b9798600599106103b7575b50505050811b0190556102e6565b01519060f884600019921b161c19169055388d81806103a9565b8383015186558f97909501948e9450928d01928d01610375565b91509150838c52888c20601f840160051c8101918a8510610431575b918b9391601f8e940160051c01905b818110610423575061029c565b8e81558c94508d9301610416565b9091508190610407565b634e487b7160e01b8b52604160045260248bfd5b634e487b7160e01b8e52602160045260248efd5b92505050879150526004875260408a2093808651166001600160601b0360a01b90818754161786558a860193519384518b81101561044f5760ff801983541691161790558884015160028701558986019160408501511690825416179055606060048501920151805191821161043b578989916104e08554611da8565b601f81116105b9575b5089908d601f861160011461054c5794600594816000805160206123538339815191529d9c9b9995610547999582956103129d9a956103585750501b92600019911b1c191617905551151591019060ff801983541691151516179055565b6102fc565b9294939190601f1985168785528c8520945b81811061059f57509361054797936103129a979387936000805160206123538339815191529f9e9d9b9798600599106103b75750505050811b0190556102e6565b8383015186558f97909501948e9450928d01928d0161055e565b91509150838c52888c20601f840160051c8101918a85106105ff575b918b9391601f8e940160051c01905b8181106105f157506104e9565b8e81558c94508d93016105e4565b90915081906105d5565b634e487b7160e01b600052604160045260246000fd5b503461011257606036600319011261011257610639611b48565b90610642611b63565b916044359267ffffffffffffffff8411610e095761066560049436908601611c8a565b6003546001546040838101516020850151915163e68f909d60e01b8152986001600160a01b039182169792969294929389928b92918391165afa978815610dfe578798610dda575b508694875b6102a08a015151805160ff8316101561071457600582901b611fe01601602001516001600160a01b0316881461070b575b60ff8091169081146106f7576001016106b2565b634e487b7160e01b89526011600452602489fd5b600196506106e3565b5050879515610da05715610d67576040519161072f83611c1c565b6001600160a01b0384168352602083018590526040830186905284516003811015610d5357600114610d1a5761076a60208601511515611d6b565b6001600160a01b03811615610b8d57600160408401528573__$2e6ee47b30d794e0597b4af30f16ddb84c$__60018060a01b0383168252600560205260408220602086015191602060018060a01b0360408501511693015190803b15610b8957604051631bccc68560e21b815260048101939093526001600160a01b039390931660248301526044820152908290829060649082905af48015610a6a57610b71575b50506001600160a01b03811686526005602052604080872090516000805160206123338339815191529290918291610845919083611e88565b0390a180855260046020526040852060018060a01b038351166001600160601b0360a01b908183541617825560208401519081516003811015610b5d579060609291600185019060ff8019835416911617905560208201516002850155600384019060018060a01b0360408401511690825416179055015180519067ffffffffffffffff8211610b49576108dc6004840154611da8565b601f8111610b05575b50602090601f8311600114610a9457610936939291899183610a89575b50508160011b916000199060031b1c19161760048201555b60056040850151151591019060ff801983541691151516179055565b60035460018101809111610a755791600080516020612353833981519152916020949360035561097760405192839283526040878401526040830190611b86565b0390a16000805160206123738339815191526040518061099681611d3a565b0390a16040838101519383015190516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019190915292839160649183918791165af1908115610a6a578291610a2c575b50156109f15780f35b60405162461bcd60e51b8152602060048201526013602482015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b90506020813d602011610a62575b81610a4760209383611c68565b81010312610a5e57610a5890611ed7565b826109e8565b5080fd5b3d9150610a3a565b6040513d84823e3d90fd5b634e487b7160e01b86526011600452602486fd5b015190508980610902565b906004840189526020892091895b601f1985168110610aed57509183916001936109369695601f19811610610ad4575b505050811b01600482015561091a565b015160001960f88460031b161c19169055898080610ac4565b91926020600181928685015181550194019201610aa2565b60048401895260208920601f840160051c810160208510610b42575b601f830160051c82018110610b375750506108e5565b8a8155600101610b21565b5080610b21565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b89526021600452602489fd5b610b7a90611c38565b610b8557858761080c565b8580fd5b8480fd5b5080855260046020526040852060018060a01b038351166001600160601b0360a01b908183541617825560208401519081516003811015610b5d579060609291600185019060ff8019835416911617905560208201516002850155600384019060018060a01b0360408401511690825416179055015180519067ffffffffffffffff8211610b4957610c226004840154611da8565b601f8111610cd6575b50602090601f8311600114610c7f57610c7a939291899183610a895750508160011b916000199060031b1c191617600482015560056040850151151591019060ff801983541691151516179055565b610936565b906004840189526020892091895b601f1985168110610cbe5750918391600193610c7a9695601f19811610610ad457505050811b01600482015561091a565b91926020600181928685015181550194019201610c8d565b60048401895260208920601f840160051c810160208510610d13575b601f830160051c82018110610d08575050610c2b565b8a8155600101610cf2565b5080610cf2565b60405162461bcd60e51b815260206004820152601160248201527043616e6e6f7420616464206e617469766560781b6044820152606490fd5b634e487b7160e01b87526021600452602487fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5916995c9bd05b5bdd5b9d607a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152712737ba1030b1b1b2b83a32b2103a37b5b2b760711b6044820152606490fd5b610df79198503d8089833e610def8183611c68565b810190611f8e565b96386106ad565b6040513d89823e3d90fd5b8280fd5b5034610112576040366003190112610112576040516040810181811067ffffffffffffffff82111761060957604052610e44611b48565b8152610e4e611b63565b602082019081526006549160ff8316610ec457600160ff199390931683176006558354336001600160a01b0319918216178555915183546001600160a01b039182169084161784559051600280549093169116179055600355604051600080516020612373833981519152908061033e81611d3a565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b6044820152606490fd5b50346101125760803660031901126101125760043567ffffffffffffffff8111610a5e57610f31903690600401611c8a565b906064610f418135604435611de2565b036114d357815160038110156114bf5760011491821561139b57338252600560205260408220545b80156113565760208201511161130257821561125a576020810151338352600560205260408320805491820391821161124657936004918495555b60015460405163e68f909d60e01b815292859184919082906001600160a01b03165afa91821561121f57849261122a575b501561109b57602090606060018060a01b0391015116910151604051610ffa81611c1c565b602435815260443560208201526064356040820152823b1561109657604080516312848b1b60e21b815282516004820152602083015160248201529101516044820152918391839160649183915af18015610a6a57611082575b50505b338152600560205260008051602061233383398151915261033e604083206040519182913383611e88565b61108b90611c38565b610112578038611054565b505050fd5b6040828101516060830151602080860151935163095ea7b360e01b81526001600160a01b0392831660048201526024810194909452939550919291839160449183918991165af190811561121f5784916111e1575b50156111ab576060909101516040518392916001600160a01b031661111482611c1c565b602435825260443560208301526064356040830152602060018060a01b0360408501511693015190803b15610b89576040805163665a62f360e01b81528451600482015260208501516024820152930151604484015291928492849260a492849286929091606485015260848401525af18015610a6a57611197575b5050611057565b6111a090611c38565b610112578038611190565b60405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b6044820152606490fd5b90506020813d602011611217575b816111fc60209383611c68565b810103126112135761120d90611ed7565b386110f0565b8380fd5b3d91506111ef565b6040513d86823e3d90fd5b61123f9192503d8086833e610def8183611c68565b9038610fd5565b634e487b7160e01b84526011600452602484fd5b819233835260056020526040832060018060a01b0360408401511690602084015173__$2e6ee47b30d794e0597b4af30f16ddb84c$__803b156112fe576040516333f7dbc360e11b815260048101939093526001600160a01b039390931660248301526044820152908490829060649082905af490811561121f5784916112e6575b5050600490610fa4565b6112ef90611c38565b6112fa5782386112dc565b5050fd5b8680fd5b60405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f756768207370656e6461626c6520616d6f756e7420696e2062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4e6f207370656e6461626c6520616d6f756e7420696e2062616c616e636500006044820152606490fd5b33825260056020908152604080842083820151915163e9f4742760e01b8152606060048201526002820180546064830181905290875284872091938593859360848501936001600160a01b03938416938b905b8282106114a0575050505083830360031901602485015260010180548084529089528489209285019290895b8181106114875750505060448301528190038173__$2e6ee47b30d794e0597b4af30f16ddb84c$__5af491821561121f578492611459575b5050610f69565b90809250813d8311611480575b6114708183611c68565b81010312610e0957513880611452565b503d611466565b825485528896889650909401936001928301920161141a565b8354811687528a988a98509096019560019384019391909101906113ee565b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642070657263656e746167657360681b6044820152606490fd5b50346101125760209081600319360112610112578060409182805161153281611c1c565b828152815161154081611c4c565b8381528387820152838382015260608082015286820152015260043581526004835220906040519161157183611c1c565b80546001600160a01b039081168452604051909161158e82611c4c565b60ff6001820154169160038310156116025760ff93600593825260028301548683015260038301541660408201526040516115d7816115d08160048701611ee4565b0382611c68565b606082015284860152015416151560408301526115fe604051928284938452830190611b86565b0390f35b634e487b7160e01b600052602160045260246000fd5b50346101125760403660031901126101125760043590611636611b63565b60025490926001600160a01b0391821633036118c25780835260209160048352600560ff816040872001541661187d578285526004845260ff6001604087208381018284198254161790550154166003811015611869576001036117785760ff90600080516020612333833981519152869785600080516020612353833981519152985260048752600260408a2001548582168a528388526116dd60408b20918254611de2565b90555b848116895282875260408920906116fc60405192839283611e88565b0390a183875260048552604087209260408051968796875286015280845416604086015260608086015261173960a0860184600187015416611b79565b600284015460c086015260038401541660e08501526080610100850152611767610120850160048501611ee4565b92015416151560808301520390a180f35b73__$2e6ee47b30d794e0597b4af30f16ddb84c$__82871686528185526040862090848752600486526040872060028560038301541691015492823b1561186557604051631bccc68560e21b815260048101919091526001600160a01b0391909116602482015260448101929092528690829060649082905af4801561185a57611826575b5060ff9060008051602061233383398151915260008051602061235383398151915296976116e0565b906000805160206123338339815191526000805160206123538339815191529661185160ff94611c38565b965050906117fd565b6040513d88823e3d90fd5b8880fd5b634e487b7160e01b86526021600452602486fd5b60405162461bcd60e51b815260048101859052601760248201527f4465706f73697420616c726561647920636c61696d65640000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206b65657065722063616e206578656375746520636c61696d0000006044820152606490fd5b503461011257602090816003193601126101125790611924611b48565b9160606040805161193481611c1c565b8381528285820152015260018060a01b03809316815260058252604081209060405161195f81611c1c565b8254815260405193600261199c6001956119868861197f818a8501611e05565b0389611c68565b8385019788526115d06040518094819301611e42565b60408301908152604051958287526080870193518388015251926060604088015283518091528260a08801940190855b818110611a16575050505195601f19868403016060870152818088519485815201970193905b8382106119ff5786880387f35b8451811688529682019693820193908501906119f2565b82518652948401949184019187016119cc565b905034610a5e576060366003190112610a5e57611a44611b48565b611a4c611b63565b604435926001600160a01b03808516939091908486036112fe578654918383163303611b06575082169081611af2575b50508116611acd575b50611aa8575b506000805160206123738339815191526040518061033e81611d3a565b600180546001600160a01b0319166001600160a01b0390921691909117905538611a8b565b600280546001600160a01b0319166001600160a01b0390921691909117905538611a85565b6001600160a01b0319161785553880611a7c565b62461bcd60e51b815260206004820152601c60248201527f4f6e6c79206f776e65722063616e2075706461746520636f6e666967000000006044820152606490fd5b600435906001600160a01b0382168203611b5e57565b600080fd5b602435906001600160a01b0382168203611b5e57565b9060038210156116025752565b9060018060a01b03808351168252606060209182850151908284860152611bb08386018351611b79565b83820151608086015260408201511660a0850152015190608060c08401528151918260e085015260005b838110611c07575050506040610100936000858486010152015115156040830152601f8019910116010190565b81810183015185820161010001528201611bda565b6060810190811067ffffffffffffffff82111761060957604052565b67ffffffffffffffff811161060957604052565b6080810190811067ffffffffffffffff82111761060957604052565b90601f8019910116810190811067ffffffffffffffff82111761060957604052565b9190608083820312611b5e5760405192611ca384611c4c565b8381356003811015611b5e5781526020828101358183015260408301356001600160a01b0381168103611b5e576040830152606083013567ffffffffffffffff93848211611b5e57019084601f83011215611b5e5781359384116106095760405194611d18601f8601601f1916830187611c68565b848652818584010111611b5e5783606094826000940183880137850101520152565b6000546001600160a01b03908116825260015481166020830152600254166040820152600354606082015260800190565b15611d7257565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b90600182811c92168015611dd8575b6020831014611dc257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611db7565b91908201809211611def57565b634e487b7160e01b600052601160045260246000fd5b90815480825260208092019260005281600020916000905b828210611e2b575050505090565b835485529384019360019384019390910190611e1d565b90815480825260208092019260005281600020916000905b828210611e68575050505090565b83546001600160a01b031685529384019360019384019390910190611e5a565b6001600160a01b039091168152604060208201819052825490820152606080820152611ed491600290611ec160a0840160018301611e05565b926080603f198286030191015201611e42565b90565b51908115158203611b5e57565b9060009291805491611ef583611da8565b918282526001938481169081600014611f575750600114611f17575b50505050565b90919394506000526020928360002092846000945b838610611f43575050505001019038808080611f11565b805485870183015294019385908201611f2c565b9294505050602093945060ff191683830152151560051b01019038808080611f11565b51906001600160a01b0382168203611b5e57565b6020908181840312611b5e57805167ffffffffffffffff91828211611b5e570190818403916104e08312611b5e576040928351956104209182880188811086821117610609578652611fdf84611f7a565b8852611fec878501611f7a565b87890152611ffb868501611f7a565b8689015261200b60608501611f7a565b606089015261201c60808501611f7a565b608089015261202d60a08501611f7a565b60a089015261203e60c08501611f7a565b60c089015261204f60e08501611f7a565b60e0890152610100612062818601611f7a565b90890152610120612074818601611f7a565b90890152610140612086818601611f7a565b90890152610160612098818601611f7a565b908901526101806120aa818601611f7a565b908901526101a06120bc818601611f7a565b9089015260606101bf19820112611b5e578551906120d982611c1c565b6101c0928386015183526101e092838701518a82015261020094858801518a8301528b01526102209261210d848801611f7a565b908b015261024093612120858801611f7a565b908b015261026092612133848801611f7a565b908b015261028093612146858801611f7a565b908b01526102a09283870151908b01526102c093612165858801611f7a565b908b01526102e09283870151888111611b5e5787018a81840312611b5e578951928b8401918483108b84111761060957828c528051908b8211611b5e570181601f82011215611b5e578051908b821161060957816121ca8f9360051b93840186611c68565b84528d8d870192820101928311611b5e578d809101915b83831061231a57505050908352508a01526103009260a09190612205878601611f7a565b908b015261031f190112611b5e57855160a081019586118187101761060957866104c09661231398526122c561032095612240878901611ed7565b84526103409a6122518c8a01611ed7565b9085015261036092838901519085015261038093612270858a01611ed7565b60608201526103a095868a015160808301528d01526103c095612294878a01611f7a565b908d01526103e0966122a7888a01611f7a565b908d01526104009a6122ba8c8a01611f7a565b908d01528701611f7a565b908a01526122d66104408601611f7a565b908901526122e76104608501611f7a565b908801526122f86104808401611f7a565b908701526123096104a08301611f7a565b9086015201611f7a565b9082015290565b819061232584611f7a565b8152019101908d906121e156fe07a13161a1fb5cdfc9ad207b809e5b5b19fb4892c44537a1dde260fa10f82ff48999fb1df5d21606b4c9805cf97ce1db4895cb902b001f270b450abfa5faf647d3b4944622ba3933e922c4ed265fe2df22540c84d2eca7fbd9d942593577453fa26469706673582212203a062b4b0fe975d74218eeeb3e193ad89b39ba6bb1134dc935e4706a426e269b64736f6c63430008120033";

type GiftCardsConstructorParams =
  | [linkLibraryAddresses: GiftCardsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftCardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GiftCards__factory extends ContractFactory {
  constructor(...args: GiftCardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GiftCards__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: GiftCardsLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2e6ee47b30d794e0597b4af30f16ddb84c\\$__", "g"),
      linkLibraryAddresses["contracts/core/struct.sol:AngelCoreStruct"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftCards> {
    return super.deploy(overrides || {}) as Promise<GiftCards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GiftCards {
    return super.attach(address) as GiftCards;
  }
  override connect(signer: Signer): GiftCards__factory {
    return super.connect(signer) as GiftCards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftCardsInterface {
    return new utils.Interface(_abi) as GiftCardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftCards {
    return new Contract(address, _abi, signerOrProvider) as GiftCards;
  }
}

export interface GiftCardsLibraryAddresses {
  ["contracts/core/struct.sol:AngelCoreStruct"]: string;
}
