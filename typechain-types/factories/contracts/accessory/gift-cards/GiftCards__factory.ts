/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GiftCards,
  GiftCardsInterface,
} from "../../../../contracts/accessory/gift-cards/GiftCards";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum AngelCoreStruct.AllowanceAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "GiftCardsUpdateBalances",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct GiftCardsStorage.Deposit",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "GiftCardsUpdateDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "executeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeDepositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "endowmentId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidPercentage",
        type: "uint256",
      },
    ],
    name: "executeSpend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
        ],
        internalType: "struct GiftCardsMessage.InstantiateMsg",
        name: "details",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
    ],
    name: "queryBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryConfig",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrarContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nextDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct GiftCardsStorage.Config",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "queryDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct GiftCardsStorage.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarContract",
        type: "address",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c6576001606b556006549060ff8260081c16610074575060ff80821610610039575b6040516113a390816100cc8239f35b60ff90811916176006557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861002a565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816311c9a94d14610fb3575080631dbfb30f14610caf57806338485c5914610aca578063715018a614610a6a5780638da5cb5b14610a41578063935feaa5146109a6578063ac42a4eb1461095d578063b6a597dd1461073d578063e687f79f146101ab578063e68f909d146101305763f2fde38b1461009c57600080fd5b3461012c57602036600319011261012c576100b5611115565b916100be6111b6565b6001600160a01b038316156100da57836100d78461120e565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101a757816003193601126101a7579060809161014e611348565b5080519061015b82611146565b60018060a01b0380935416928383528060015416602084019081528180600254169184860192835260606003549601958652845196875251166020860152511690830152516060820152f35b5080fd5b509190346101a75760a03660031901126101a757823563ffffffff91828216809203610739576101d9611130565b608435936064938435856101ed8883611311565b0361070157604435956102018715156112b7565b33895260209760058952868a209560018060a01b0380911696878c528a5288888c2054106106bf5780600154168c89519182809263e68f909d60e01b82526103e09485935afa918215610412578a8f8f948f93948f95879261041c575b505090826044920195878751169351958694859363095ea7b360e01b855284015260248301528d5af1908115610412578d916103e5575b50156103b2575116928751946102aa86611178565b8552898501908152878501918252833b156103ae578b95938760a4948d979488948c519a8b998a98631b13439160e01b8a525116908801525160248701525160448601528401528960848401525af180156103a457610376575b5033855260058452818520816000528452816000208054908482039182116103635755815133815293840152820152600160608201527f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db490608090a180f35b634e487b7160e01b875260118852602487fd5b67ffffffffffffffff81969296116103915782529338610304565b634e487b7160e01b825260418752602482fd5b83513d88823e3d90fd5b8a80fd5b885162461bcd60e51b8152808e018c9052600e60248201526d105c1c1c9bdd994819985a5b195960921b60448201528490fd5b61040591508c8d3d1061040b575b6103fd8183611194565b8101906112f9565b38610295565b503d6103f3565b8a513d8f823e3d90fd5b955095505050505081813d83116106b8575b6104388183611194565b8101039081126106b4578951916103a09182840184811067ffffffffffffffff82111761069f578c526060908e61046e84611334565b865261047b818501611334565b9086015261048a8d8401611334565b8d860152610499828401611334565b828601526104a960808401611334565b60808601526104ba60a08401611334565b60a08601526104cb60c08401611334565b60c08601526104dc60e08401611334565b60e08601526101006104ef818501611334565b90860152610120610501818501611334565b90860152610140610513818501611334565b90860152610160610525818501611334565b90860152610180610537818501611334565b9086015261019f19011261069b578a8f8f94908f938f95926044936106906103c0879485519361056685611178565b6106866101a0918284015187526101c0968d88860151908201526101e093848601518b8301528901526102009661059e888601611334565b90890152610220926105b1848601611334565b90890152610240966105c4888601611334565b90890152610260928385015190890152610280966105e3888601611334565b908901526102a0926105f6848601611334565b908901526102c096610609888601611334565b908901526102e09261061c848601611334565b908901526103009661062f888601611334565b9089015261032092610642848601611334565b9089015261034096610655888601611334565b9089015261036092610668848601611334565b908901526103809661067b888601611334565b908901528301611334565b9086015201611334565b90820152919261025e565b8d80fd5b508f8f6041602492634e487b7160e01b835252fd5b8c80fd5b503d61042e565b875162461bcd60e51b8152808d018b9052601e60248201527f496e73756666696369656e74207370656e6461626c652062616c616e6365000060448201528390fd5b845162461bcd60e51b81526020818b01526013602482015272496e76616c69642070657263656e746167657360681b60448201528690fd5b8380fd5b503461012c578160031936011261012c5781519082820182811067ffffffffffffffff82111761094a578352610771611115565b825261077b611130565b60208301908152600692835460ff8160081c16159384809561093d575b8015610926575b156108cc575060ff1981166001178555610820929190846108bb575b506107de60ff865460081c166107d081611257565b6107d981611257565b611257565b6107e73361120e565b8654336001600160a01b03199182161788559151600180546001600160a01b039283169085161790559051600280549093169116179055565b6001600381905583516000546001600160a01b03908116825282548116602083015260025416604082015260608101919091527fd3b4944622ba3933e922c4ed265fe2df22540c84d2eca7fbd9d942593577453f90608090a1610881578280f35b805461ff001916905551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff1916610101178555386107bb565b608490602088519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b15801561079f5750600160ff83161461079f565b50600160ff831610610798565b634e487b7160e01b855260418252602485fd5b5050346101a757806003193601126101a7578060209261097b611115565b610983611130565b6001600160a01b0391821683526005865283832091168252845220549051908152f35b503461012c57602036600319011261012c5781608093610a3f926109c8611348565b5080358252602052209160ff60038251946109e286611146565b60018060a01b038082541687526001820154166020870152600281015484870152015416151560608401525180926060809160018060a01b0380825116855260208201511660208501526040810151604085015201511515910152565bf35b5050346101a757816003193601126101a75760395490516001600160a01b039091168152602090f35b8334610ac75780600319360112610ac757610a836111b6565b603980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b508290346101a757826003193601126101a757803590610ae8611130565b6002546001600160a01b03939192919084163303610c6c5780855260209082825260ff6003888820015416610c29579185969183610c23947f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db498528282527f363486153e7f2aa0a57195763226fc3a6fd1caf0d7820b2ba18cc536be40582160a0858b2060038101600160ff1982541617905560028751918583528b815416878401528b600182015416898401520154606082015260016080820152a18089528282526002848a2001548787168a5260058352848a20828b52848452886001878d200154168b528352610bdf858b20918254611311565b9055885252808620600181015460029091015491516001600160a01b0394851681529416909216602084015260408301919091526000606083015281906080820190565b0390a180f35b865162461bcd60e51b8152808401839052601760248201527f4465706f73697420616c726561647920636c61696d65640000000000000000006044820152606490fd5b855162461bcd60e51b8152602081840152601e60248201527f4f6e6c79206b65657065722063616e20636c61696d206465706f7369747300006044820152606490fd5b503461012c57606036600319011261012c57610cc9611115565b610cd1611130565b908483604435865193610ce385611146565b33855260209586860191606084878c8b8b602460018060a01b039b8c8a16978893848d528681019d8e52019d8e52610d1c8715156112b7565b8c60015416945194859384926302b05ecb60e11b84528301525afa918215610f585791610f96575b5015610f63578c8c516323b872dd60e01b8152338d8201523060248201528260448201528b8160648185885af1918215610f585791610f3b575b5015610f02579389600394848f948f988c997f363486153e7f2aa0a57195763226fc3a6fd1caf0d7820b2ba18cc536be4058219f9d60a09f9c988e610e569f9b169485610e7c575b50505050505050505083548d528a88528b8d209280875116906bffffffffffffffffffffffff8b1b91828654161785556001850192511690825416179055516002820155019051151560ff801983541691161790556003549651928784528301906060809160018060a01b0380825116855260208201511660208501526040810151604085015201511515910152565ba160018201809211610e69575060035580f35b634e487b7160e01b835260119052602482fd5b7f1d569e9ccc852fe0e371351b3eba47af14f39603cc94343da84fda12c1d01db498610ef19660018695528352600581528383209183525220610ec0838254611311565b9055516001600160a01b03938416815293909216602084015260408301919091526000606083015281906080820190565b0390a18738808f8f808a8385610dc6565b8b5162461bcd60e51b8152808c018b90526013602482015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b610f5291508b3d8d1161040b576103fd8183611194565b38610d7e565b8e51903d90823e3d90fd5b8b5162461bcd60e51b8152808c018b9052600d60248201526c24b73b30b634b2102a37b5b2b760991b6044820152606490fd5b610fad91508b3d8d1161040b576103fd8183611194565b38610d44565b848484923461012c57606036600319011261012c57610fd0611115565b610fd8611130565b604435926001600160a01b03808516939091908486036111115787549183831633036110d057507fd3b4944622ba3933e922c4ed265fe2df22540c84d2eca7fbd9d942593577453f979850821690816110bc575b50508116611097575b50611072575b50516000546001600160a01b0390811682526001548116602083015260025416604082015260035460608201528060808101610c23565b600180546001600160a01b0319166001600160a01b039092169190911790558361103b565b600280546001600160a01b0319166001600160a01b0390921691909117905585611035565b6001600160a01b031916178755878061102c565b62461bcd60e51b815260208a820152601c60248201527f4f6e6c79206f776e65722063616e2075706461746520636f6e666967000000006044820152606490fd5b8780fd5b600435906001600160a01b038216820361112b57565b600080fd5b602435906001600160a01b038216820361112b57565b6080810190811067ffffffffffffffff82111761116257604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761116257604052565b90601f8019910116810190811067ffffffffffffffff82111761116257604052565b6039546001600160a01b031633036111ca57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561125e57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b156112be57565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081e995c9bc8185b5bdd5b9d606a1b6044820152606490fd5b9081602091031261112b5751801515810361112b5790565b9190820180921161131e57565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b038216820361112b57565b6040519061135582611146565b6000606083828152826020820152826040820152015256fea2646970667358221220cc0889d8e250f9b34b6ee766aac5b3eccf9b5a79695a2dc54939c22e7427acec64736f6c63430008120033";

type GiftCardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftCardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftCards__factory extends ContractFactory {
  constructor(...args: GiftCardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftCards> {
    return super.deploy(overrides || {}) as Promise<GiftCards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GiftCards {
    return super.attach(address) as GiftCards;
  }
  override connect(signer: Signer): GiftCards__factory {
    return super.connect(signer) as GiftCards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftCardsInterface {
    return new utils.Interface(_abi) as GiftCardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftCards {
    return new Contract(address, _abi, signerOrProvider) as GiftCards;
  }
}
