/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundraisingLib,
  FundraisingLibInterface,
} from "../../../../contracts/accessory/fundraising/FundraisingLib";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "contributed",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "threshold",
        type: "tuple",
      },
    ],
    name: "thresholdMet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576108d69081610020823930815050f35b600080fdfe608060409080825260048036101561001657600080fd5b600091823560e01c90816363f9a3d21461046e57508063a0d2ef7c1461017a5763e5a3ff0e1461004557600080fd5b826003193601126101765767ffffffffffffffff90803582811161017257610070903690830161058a565b91602435908111610172576100879136910161058a565b9082815183518110159081610168575b50610160575b818501948381019160001991865b84515188101561015457805b8951805182101561014a5781906100d76001600160a01b0392839261088c565b5116906100e58b895161088c565b5116146100fa576100f5906106ff565b6100b7565b909291979350925b600019841361011d575b610115906106ff565b9690916100ab565b9050610115602061013f8361013587848b015161088c565b51928a015161088c565b51111591905061010c565b5050919096610102565b60208383519015158152f35b50600161009d565b9050151538610097565b8380fd5b5080fd5b50828060031936011261046a576024359180356101956106b6565b5061019e6106b6565b508251936101ab8561051e565b8054948581526001820192855192838554808652602080960190878c52868c20908c5b888282106104565750505050906101ea81600294930382610550565b8585015201865180818684549283815201848d52878d20928d5b898282106104375750505061021b92500382610550565b87840152826102286106b6565b98606461023585836106d6565b048a519081018091116104245784606492610251928d526106d6565b049080519182039182116104115798949852889273__$2e6ee47b30d794e0597b4af30f16ddb84c$__945b82548510156103e7579086888c8094886102fb8e60646102b88c6102ac6102a3878f61070e565b9790549b61070e565b90549060031b1c6106d6565b04905195869485947f692cb3700000000000000000000000000000000000000000000000000000000086526001600160a01b03998a9160031b1c16918501610861565b03818b5af49081156103dd57610371606461033f896102ac8f958f9997986103318f8d9b8f9e948295916103c3575b509d61070e565b90549060031b1c169961070e565b048d5195869485947f2b15f3cc0000000000000000000000000000000000000000000000000000000086528501610861565b0381895af49081156103b95790610390918c91610397575b50946106ff565b939061027c565b6103b391503d808e833e6103ab8183610550565b81019061073c565b8c610389565b89513d8d823e3d90fd5b6103d791503d808f833e6103ab8183610550565b3861032a565b8b513d86823e3d90fd5b61040d8a8a926104008451958587968752860190610493565b9184830390850152610493565b0390f35b60248b60118a634e487b7160e01b835252fd5b60248c60118b634e487b7160e01b835252fd5b85546001600160a01b0316845260019586019587955093019201610204565b8354855290930192600192830192016101ce565b8280fd5b9050826020366003190112610490575061048a602092356106a2565b15158152f35b80fd5b606082018151835260209182810151916060848601528251809152836080860193019060005b81811061050a575050506040015192604081830391015281808451928381520193019160005b8281106104ed575050505090565b83516001600160a01b0316855293810193928101926001016104df565b8251855293850193918501916001016104b9565b6060810190811067ffffffffffffffff82111761053a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761053a57604052565b67ffffffffffffffff811161053a5760051b60200190565b919060608382031261068d576040516105a28161051e565b809380358252602090818101359067ffffffffffffffff9182811161068d57810185601f8201121561068d578035906105da82610572565b916105e86040519384610550565b808352858084019160051b8301019188831161068d5786809101915b8383106106925750915050850152604081013591821161068d57019280601f8501121561068d57833561063681610572565b946106446040519687610550565b818652838087019260051b82010192831161068d578301905b82821061066e575050505060400152565b81356001600160a01b038116810361068d57815290830190830161065d565b600080fd5b8235815291810191879101610604565b6004015442116106b157600090565b600190565b604051906106c38261051e565b6060604083600081528260208201520152565b818102929181159184041417156106e957565b634e487b7160e01b600052601160045260246000fd5b60001981146106e95760010190565b80548210156107265760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b906020808383031261068d57825167ffffffffffffffff9384821161068d57019260608484031261068d57604051936107748561051e565b805185528281015182811161068d57810184601f8201121561068d5780519061079c82610572565b916107aa6040519384610550565b808352858084019160051b8301019187831161068d5786809101915b8383106108515750915050860152604081015191821161068d57019180601f8401121561068d5782516107f881610572565b936108066040519586610550565b818552838086019260051b82010192831161068d578301905b8282106108325750505050604082015290565b81516001600160a01b038116810361068d57815290830190830161081f565b82518152918101918791016107c6565b6001600160a01b0361088160409396959496606084526060840190610493565b951660208201520152565b80518210156107265760209160051b01019056fea26469706673582212208149406f4b8e4d0b731899308018ed374f70fa5251ad815ecf6e5e07f99be3a464736f6c63430008120033";

type FundraisingLibConstructorParams =
  | [linkLibraryAddresses: FundraisingLibLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundraisingLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FundraisingLib__factory extends ContractFactory {
  constructor(...args: FundraisingLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FundraisingLib__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FundraisingLibLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2e6ee47b30d794e0597b4af30f16ddb84c\\$__", "g"),
      linkLibraryAddresses["contracts/core/struct.sol:AngelCoreStruct"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundraisingLib> {
    return super.deploy(overrides || {}) as Promise<FundraisingLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundraisingLib {
    return super.attach(address) as FundraisingLib;
  }
  override connect(signer: Signer): FundraisingLib__factory {
    return super.connect(signer) as FundraisingLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundraisingLibInterface {
    return new utils.Interface(_abi) as FundraisingLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundraisingLib {
    return new Contract(address, _abi, signerOrProvider) as FundraisingLib;
  }
}

export interface FundraisingLibLibraryAddresses {
  ["contracts/core/struct.sol:AngelCoreStruct"]: string;
}
