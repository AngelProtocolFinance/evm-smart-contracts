/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FundraisingLib,
  FundraisingLibInterface,
} from "../../../../contracts/accessory/fundraising/FundraisingLib";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "contributed",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "coinNativeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "Cw20CoinVerified_amount",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "Cw20CoinVerified_addr",
            type: "address[]",
          },
        ],
        internalType: "struct AngelCoreStruct.GenericBalance",
        name: "threshold",
        type: "tuple",
      },
    ],
    name: "thresholdMet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576108a59081610020823930815050f35b600080fdfe608060409080825260048036101561001657600080fd5b600091823560e01c90816363f9a3d21461043c57508063a0d2ef7c1461017b5763e5a3ff0e1461004557600080fd5b826003193601126101775767ffffffffffffffff908035828111610173576100709036908301610558565b916024359081116101735761008791369101610558565b9082815183518110159081610169575b50610161575b818501948381019160001991865b84515188101561015557805b8951805182101561014b576001600160a01b039081906100d890849061085b565b5116906100e68b895161085b565b5116146100fb576100f6906106cd565b6100b7565b909291979350925b600019841361011e575b610116906106cd565b9690916100ab565b905061011660206101408361013687848b015161085b565b51928a015161085b565b51111591905061010d565b5050919096610103565b60208383519015158152f35b50600161009d565b9050151538610097565b8380fd5b5080fd5b50828060031936011261043857602435918035610196610684565b5061019f610684565b508251936101ac856104ec565b8054948581526001820192855192838554808652602080960190878c52868c20908c5b888282106104245750505050906101eb8160029493038261051e565b8585015201865180818684549283815201848d52878d20928d5b898282106104055750505061021c9250038261051e565b8784015282610229610684565b98606461023685836106a4565b048a519081018091116103f25784606492610252928d526106a4565b049080519182039182116103df5798949852889273__$2e6ee47b30d794e0597b4af30f16ddb84c$__945b82548510156103b5579086888c8094886102e28e60646102b98c6102ad6102a4878f6106dc565b9790549b6106dc565b90549060031b1c6106a4565b0490519586948594630692cb3760e41b865260018060a01b03998a9160031b1c1691850161082f565b03818b5af49081156103ab5761033f6064610326896102ad8f958f9997986103188f8d9b8f9e94829591610391575b509d6106dc565b90549060031b1c16996106dc565b048d519586948594630ac57cf360e21b8652850161082f565b0381895af4908115610387579061035e918c91610365575b50946106cd565b939061027d565b61038191503d808e833e610379818361051e565b81019061070a565b8c610357565b89513d8d823e3d90fd5b6103a591503d808f833e610379818361051e565b38610311565b8b513d86823e3d90fd5b6103db8a8a926103ce8451958587968752860190610461565b9184830390850152610461565b0390f35b634e487b7160e01b8b526011885260248bfd5b634e487b7160e01b8c526011895260248cfd5b85546001600160a01b0316845260019586019587955093019201610205565b8354855290930192600192830192016101cf565b8280fd5b905082602036600319011261045e575061045860209235610670565b15158152f35b80fd5b606082018151835260209182810151916060848601528251809152836080860193019060005b8181106104d8575050506040015192604081830391015281808451928381520193019160005b8281106104bb575050505090565b83516001600160a01b0316855293810193928101926001016104ad565b825185529385019391850191600101610487565b6060810190811067ffffffffffffffff82111761050857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761050857604052565b67ffffffffffffffff81116105085760051b60200190565b919060608382031261065b57604051610570816104ec565b809380358252602090818101359067ffffffffffffffff9182811161065b57810185601f8201121561065b578035906105a882610540565b916105b6604051938461051e565b808352858084019160051b8301019188831161065b5786809101915b8383106106605750915050850152604081013591821161065b57019280601f8501121561065b57833561060481610540565b94610612604051968761051e565b818652838087019260051b82010192831161065b578301905b82821061063c575050505060400152565b81356001600160a01b038116810361065b57815290830190830161062b565b600080fd5b82358152918101918791016105d2565b60040154421161067f57600090565b600190565b60405190610691826104ec565b6060604083600081528260208201520152565b818102929181159184041417156106b757565b634e487b7160e01b600052601160045260246000fd5b60001981146106b75760010190565b80548210156106f45760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b906020808383031261065b57825167ffffffffffffffff9384821161065b57019260608484031261065b5760405193610742856104ec565b805185528281015182811161065b57810184601f8201121561065b5780519061076a82610540565b91610778604051938461051e565b808352858084019160051b8301019187831161065b5786809101915b83831061081f5750915050860152604081015191821161065b57019180601f8401121561065b5782516107c681610540565b936107d4604051958661051e565b818552838086019260051b82010192831161065b578301905b8282106108005750505050604082015290565b81516001600160a01b038116810361065b5781529083019083016107ed565b8251815291810191879101610794565b61084760409295949395606083526060830190610461565b6001600160a01b0390951660208201520152565b80518210156106f45760209160051b01019056fea264697066735822122088435a3c3b754a760a5f9b1736d51a57c9d8827b17af821f673545f0def1ef9b64736f6c63430008120033";

type FundraisingLibConstructorParams =
  | [linkLibraryAddresses: FundraisingLibLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundraisingLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FundraisingLib__factory extends ContractFactory {
  constructor(...args: FundraisingLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FundraisingLib__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FundraisingLibLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2e6ee47b30d794e0597b4af30f16ddb84c\\$__", "g"),
      linkLibraryAddresses["contracts/core/struct.sol:AngelCoreStruct"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundraisingLib> {
    return super.deploy(overrides || {}) as Promise<FundraisingLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundraisingLib {
    return super.attach(address) as FundraisingLib;
  }
  override connect(signer: Signer): FundraisingLib__factory {
    return super.connect(signer) as FundraisingLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundraisingLibInterface {
    return new utils.Interface(_abi) as FundraisingLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundraisingLib {
    return new Contract(address, _abi, signerOrProvider) as FundraisingLib;
  }
}

export interface FundraisingLibLibraryAddresses {
  ["contracts/core/struct.sol:AngelCoreStruct"]: string;
}
