/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_type",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setDefaultToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummyAmt",
        type: "uint256",
      },
    ],
    name: "setDummyAmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461006557601f6105fe38819003918201601f19168301916001600160401b0383118484101761006a57808492602094604052833981010312610065575160028110156100655760ff80196000541691161760005560405161057d90816100818239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260048036101561001657600080fd5b600092833560e01c92836320dcd90b1461040f5750826341cb87fc146103c05782634dc23772146102f557826375baf37f146102ce57826388bb447b14610200578263c2bba643146101e2578263c2ec3be6146100e057505063e1e32f991461007e57600080fd5b346100dd5760203660031901126100dd5761009761045c565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b16911617815580f35b80fd5b90915060203660031901126101de5781359163ffffffff83168093036101da57602061014a916001600160a01b03865460081c166002549187865180968195829463095ea7b360e01b845233908401602090939291936001600160a01b0360408201951681520152565b03925af180156101d0579360ff916020956101a3575b505416917f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf3235600254809461019a85519283923090846104d1565b0390a251908152f35b6101c290863d81116101c9575b6101ba81836104f7565b81019061052f565b5038610160565b503d6101b0565b82513d86823e3d90fd5b8380fd5b8280fd5b8382346101fc5760203660031901126101fc573560025580f35b5080fd5b909150346101de57602091826003193601126101da5780359167ffffffffffffffff918284116102ca57366023850112156102ca578301359182116102c6573660248360051b850101116102c657918493602493519283948594930191865b82811061029457505050500390207f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d48280a280f35b91939092809550359063ffffffff82168092036102c25790815285949083019390830192909160010161025f565b8780fd5b8480fd5b8580fd5b8390346101fc57816003193601126101fc576102f360ff6020935416915180926104ae565bf35b9061033c9250602061030636610477565b8096929391948651938492839263095ea7b360e01b845233908401602090939291936001600160a01b0360408201951681520152565b0381896001600160a01b0388165af180156103b6579161019a8660ff60209963ffffffff957f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323597610399575b5054169587519485941696846104d1565b6103af908c3d81116101c9576101ba81836104f7565b5038610388565b84513d88823e3d90fd5b83346100dd5760203660031901126100dd576001600160a01b036103e261045c565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b6104567fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd82879361043f36610477565b9063ffffffff60ff899894985416971696846104d1565b0390a280f35b600435906001600160a01b038216820361047257565b600080fd5b60609060031901126104725760043563ffffffff8116810361047257906024356001600160a01b0381168103610472579060443590565b9060028210156104bb5752565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b036040929594936104ed8360608101986104ae565b1660208201520152565b90601f8019910116810190811067ffffffffffffffff82111761051957604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261047257518015158103610472579056fea2646970667358221220c69cf3f6019d7ac35a9c7b5b2a9490aaa1b78311f871710c015b82d43f77459264736f6c63430008120033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_type, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_type, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
