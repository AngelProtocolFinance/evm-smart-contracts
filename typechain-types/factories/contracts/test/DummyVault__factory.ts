/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_type",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setDefaultToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a76380380610a768339818101604052810190610032919061008b565b806000806101000a81548160ff02191690836001811115610056576100556100b8565b5b0217905550506100e7565b600080fd5b6002811061007357600080fd5b50565b60008151905061008581610066565b92915050565b6000602082840312156100a1576100a0610061565b5b60006100af84828501610076565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610980806100f66000396000f3fe6080604052600436106100705760003560e01c806375baf37f1161004e57806375baf37f146100ea57806388bb447b14610115578063c2ec3be61461013e578063e1e32f991461016e57610070565b806320dcd90b1461007557806341cb87fc146100915780634dc23772146100ba575b600080fd5b61008f600480360381019061008a9190610585565b610197565b005b34801561009d57600080fd5b506100b860048036038101906100b391906105d8565b6101eb565b005b6100d460048036038101906100cf9190610585565b61022f565b6040516100e19190610614565b60405180910390f35b3480156100f657600080fd5b506100ff610309565b60405161010c91906106a6565b60405180910390f35b34801561012157600080fd5b5061013c60048036038101906101379190610726565b61031f565b005b61015860048036038101906101539190610773565b610367565b6040516101659190610614565b60405180910390f35b34801561017a57600080fd5b50610195600480360381019061019091906105d8565b610467565b005b8263ffffffff167fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd60008054906101000a900460ff1684846040516101de939291906107af565b60405180910390a2505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008273ffffffffffffffffffffffffffffffffffffffff1663095ea7b333846040518363ffffffff1660e01b815260040161026c9291906107e6565b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610847565b508363ffffffff167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323560008054906101000a900460ff1685856040516102f7939291906107af565b60405180910390a28190509392505050565b60008060009054906101000a900460ff16905090565b818160405161032f929190610931565b60405180910390207f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d460405160405180910390a25050565b60008060019050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333836040518363ffffffff1660e01b81526004016103cb9291906107e6565b6020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610847565b508263ffffffff167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323560008054906101000a900460ff163084604051610456939291906107af565b60405180910390a280915050919050565b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6104ce816104b5565b81146104d957600080fd5b50565b6000813590506104eb816104c5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061051c826104f1565b9050919050565b61052c81610511565b811461053757600080fd5b50565b60008135905061054981610523565b92915050565b6000819050919050565b6105628161054f565b811461056d57600080fd5b50565b60008135905061057f81610559565b92915050565b60008060006060848603121561059e5761059d6104ab565b5b60006105ac868287016104dc565b93505060206105bd8682870161053a565b92505060406105ce86828701610570565b9150509250925092565b6000602082840312156105ee576105ed6104ab565b5b60006105fc8482850161053a565b91505092915050565b61060e8161054f565b82525050565b60006020820190506106296000830184610605565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061066f5761066e61062f565b5b50565b60008190506106808261065e565b919050565b600061069082610672565b9050919050565b6106a081610685565b82525050565b60006020820190506106bb6000830184610697565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106e6576106e56106c1565b5b8235905067ffffffffffffffff811115610703576107026106c6565b5b60208301915083602082028301111561071f5761071e6106cb565b5b9250929050565b6000806020838503121561073d5761073c6104ab565b5b600083013567ffffffffffffffff81111561075b5761075a6104b0565b5b610767858286016106d0565b92509250509250929050565b600060208284031215610789576107886104ab565b5b6000610797848285016104dc565b91505092915050565b6107a981610511565b82525050565b60006060820190506107c46000830186610697565b6107d160208301856107a0565b6107de6040830184610605565b949350505050565b60006040820190506107fb60008301856107a0565b6108086020830184610605565b9392505050565b60008115159050919050565b6108248161080f565b811461082f57600080fd5b50565b6000815190506108418161081b565b92915050565b60006020828403121561085d5761085c6104ab565b5b600061086b84828501610832565b91505092915050565b600081905092915050565b6000819050919050565b610892816104b5565b82525050565b60006108a48383610889565b60208301905092915050565b60006108bf60208401846104dc565b905092915050565b6000602082019050919050565b60006108e08385610874565b93506108eb8261087f565b8060005b858110156109245761090182846108b0565b61090b8882610898565b9750610916836108c7565b9250506001810190506108ef565b5085925050509392505050565b600061093e8284866108d4565b9150819050939250505056fea26469706673582212200bbf0f2396e57f1e386943b99f9895133d4cac38bef54fa9190764cd96561a1564736f6c634300080f0033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_type, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_type, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
