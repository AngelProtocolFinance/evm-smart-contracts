/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_type",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161082c38038061082c8339818101604052810190610032919061008b565b806000806101000a81548160ff02191690836001811115610056576100556100b8565b5b0217905550506100e7565b600080fd5b6002811061007357600080fd5b50565b60008151905061008581610066565b92915050565b6000602082840312156100a1576100a0610061565b5b60006100af84828501610076565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610736806100f66000396000f3fe60806040526004361061004a5760003560e01c806320dcd90b1461004f5780634dc237721461006b57806375baf37f1461009b57806388bb447b146100c6578063c2ec3be6146100ef575b600080fd5b61006960048036038101906100649190610371565b61011f565b005b61008560048036038101906100809190610371565b610173565b60405161009291906103d3565b60405180910390f35b3480156100a757600080fd5b506100b06101da565b6040516100bd9190610465565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906104e5565b6101f0565b005b61010960048036038101906101049190610532565b610238565b60405161011691906103d3565b60405180910390f35b8263ffffffff167fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd60008054906101000a900460ff1684846040516101669392919061056e565b60405180910390a2505050565b60008363ffffffff167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323560008054906101000a900460ff1685856040516101bc9392919061056e565b60405180910390a26001826101d191906105d4565b90509392505050565b60008060009054906101000a900460ff16905090565b81816040516102009291906106e7565b60405180910390207f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d460405160405180910390a25050565b600080600190508263ffffffff167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323560008054906101000a900460ff1630846040516102869392919061056e565b60405180910390a280915050919050565b600080fd5b600080fd5b600063ffffffff82169050919050565b6102ba816102a1565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610308826102dd565b9050919050565b610318816102fd565b811461032357600080fd5b50565b6000813590506103358161030f565b92915050565b6000819050919050565b61034e8161033b565b811461035957600080fd5b50565b60008135905061036b81610345565b92915050565b60008060006060848603121561038a57610389610297565b5b6000610398868287016102c8565b93505060206103a986828701610326565b92505060406103ba8682870161035c565b9150509250925092565b6103cd8161033b565b82525050565b60006020820190506103e860008301846103c4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061042e5761042d6103ee565b5b50565b600081905061043f8261041d565b919050565b600061044f82610431565b9050919050565b61045f81610444565b82525050565b600060208201905061047a6000830184610456565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104a5576104a4610480565b5b8235905067ffffffffffffffff8111156104c2576104c1610485565b5b6020830191508360208202830111156104de576104dd61048a565b5b9250929050565b600080602083850312156104fc576104fb610297565b5b600083013567ffffffffffffffff81111561051a5761051961029c565b5b6105268582860161048f565b92509250509250929050565b60006020828403121561054857610547610297565b5b6000610556848285016102c8565b91505092915050565b610568816102fd565b82525050565b60006060820190506105836000830186610456565b610590602083018561055f565b61059d60408301846103c4565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105df8261033b565b91506105ea8361033b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561061f5761061e6105a5565b5b828201905092915050565b600081905092915050565b6000819050919050565b610648816102a1565b82525050565b600061065a838361063f565b60208301905092915050565b600061067560208401846102c8565b905092915050565b6000602082019050919050565b6000610696838561062a565b93506106a182610635565b8060005b858110156106da576106b78284610666565b6106c1888261064e565b97506106cc8361067d565b9250506001810190506106a5565b5085925050509392505050565b60006106f482848661068a565b9150819050939250505056fea2646970667358221220ded50e39323786d44b03b78efa86e0c0e0def5c2623ad0cc20b874c37bbcd14264736f6c634300080a0033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_type, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_type, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
