/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
  IVault,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApproveFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyBaseToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "from",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "to",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "account",
        type: "uint32",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "convertToAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "convertToShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "receiver",
        type: "uint32",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "maxDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "maxMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
    ],
    name: "maxWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "receiver",
        type: "uint32",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "previewRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "previewWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum IVault.VaultActionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IVault.RedemptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum IVault.VaultActionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IVault.RedemptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummyAmt",
        type: "uint256",
      },
    ],
    name: "setDummyAmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "_newConfig",
        type: "tuple",
      },
    ],
    name: "setVaultConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "to",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "from",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "to",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultConfig",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "strategySelector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "yieldToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "apTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "apTokenSymbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "owner",
        type: "uint32",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604081815234620008d757620028508038038091620000218286620008dc565b8439820191602081840312620008d7578051906001600160401b038211620008d7570190610120928383820312620008d75781519384016001600160401b038111858210176200055b57825282516002811015620008d757845260208301516001600160e01b031981168103620008d7576020850152620000a482840162000900565b82850152620000b66060840162000900565b6060850152620000c96080840162000900565b6080850152620000dc60a0840162000900565b60a085015260c08301516001600160401b038111620008d757816200010391850162000915565b60c085015260e0830151906001600160401b038211620008d7576200012a91840162000915565b8060e08501526200014061010080940162000900565b8385015260a084015160c0850151835163313ce56760e01b81526001600160a01b039092169290602083600481875afa928315620008cc576000936200087e575b508051906001600160401b0382116200055b5760035490600182811c9216801562000873575b60208310146200053a5781601f84931162000801575b50602090601f8311600114620007725760009262000766575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200055b57600454600181811c911680156200075b575b60208210146200053a57601f8111620006f5575b50602090601f8311600114620006815760ff9392916000918362000675575b50508160011b916000199060031b1c1916176004555b1660ff196005541617600555608052825160028110156200065f57600680546020860151848701516001600160c81b031990921660ff949094169390931760d89390931c64ffffffff00169290921760289290921b600160281b600160c81b03169190911790556060830151600780546001600160a01b03199081166001600160a01b0393841617909155608085015160088054831691841691909117905560a085015160098054909216921691909117905560c083015180519093906001600160401b0381116200055b57600a54600181811c9116801562000654575b60208210146200053a57601f8111620005ea575b50602094601f82116001146200057d5794819293949560009262000571575b50508160011b916000199060031b1c191617600a555b60e081015180519093906001600160401b0381116200055b57600b54600181811c9116801562000550575b60208210146200053a57601f8111620004d0575b50602094601f8211600114620004635794819293949560009262000457575b50508160011b916000199060031b1c191617600b555b0151600c80546001600160a01b0319166001600160a01b039290921691909117905551611ec390816200098d8239608051818181610292015281816105220152818161114301528181611225015281816112e4015281816115a80152611d4f0152f35b015190503880620003de565b601f19821695600b60005260206000209160005b888110620004b7575083600195969798106200049d575b505050811b01600b55620003f4565b015160001960f88460031b161c191690553880806200048e565b9192602060018192868501518155019401920162000477565b600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f830160051c810191602084106200052f575b601f0160051c01905b818110620005225750620003bf565b6000815560010162000513565b90915081906200050a565b634e487b7160e01b600052602260045260246000fd5b90607f1690620003ab565b634e487b7160e01b600052604160045260246000fd5b0151905038806200036a565b601f19821695600a60005260206000209160005b888110620005d157508360019596979810620005b7575b505050811b01600a5562000380565b015160001960f88460031b161c19169055388080620005a8565b9192602060018192868501518155019401920162000591565b600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8601f830160051c8101916020841062000649575b601f0160051c01905b8181106200063c57506200034b565b600081556001016200062d565b909150819062000624565b90607f169062000337565b634e487b7160e01b600052602160045260246000fd5b01519050388062000243565b90600460005260206000209160005b601f1985168110620006dc575091839160019360ff9695601f19811610620006c2575b505050811b0160045562000259565b015160001960f88460031b161c19169055388080620006b3565b9192602060018192868501518155019401920162000690565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81016020851062000753575b601f830160051c820181106200074657505062000224565b600081556001016200072e565b50806200072e565b90607f169062000210565b015190503880620001d6565b6003600090815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510620007e5576001945083601f19811610620007cb575b505050811b01600355620001ec565b015160001960f88460031b161c19169055388080620007bc565b818101518355602094850194600190930192909101906200079f565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101602085106200086b575b90849392915b601f830160051c820181106200085b575050620001bd565b6000815585945060010162000843565b50806200083d565b91607f1691620001a7565b6020939193813d602011620008c3575b816200089d60209383620008dc565b81010312620008bf57519060ff82168203620008bc5750913862000181565b80fd5b5080fd5b3d91506200088e565b85513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200055b57604052565b51906001600160a01b0382168203620008d757565b919080601f84011215620008d7578251906001600160401b0382116200055b576040519160209162000951601f8301601f1916840185620008dc565b818452828287010111620008d75760005b8181106200097857508260009394955001015290565b85810183015184820184015282016200096256fe608060405260048036101561001357600080fd5b6000803560e01c806301e1d1141461178d57806305d565821461175957806306fdde031461168857806307a2d13a146111f15780630a28a4771461166a57806318160ddd1461164c5780631b8bdb001461153757806320dcd90b146114c657806324117f25146113ba5780632b2dfd2c14611275578063313ce5671461125457806338d52e0f1461120f5780633ffc509214610a9f5780634cdad506146111f157806367f2e441146101a657806377c7b8fc146110fb5780637cc34bb41461104b57806383ddd44814610ba157806388bb447b14610ad55780638fef2eb014610a9f57806395d89b41146109b8578063b2a2353e14610800578063b3d7f6b9146107e2578063c2bba643146107c8578063c2ec3be6146106ac578063c3ae1fc01461045c578063c6e6f5921461043e578063d4016bc81461033d578063d63ee428146101d1578063e5a2d45c146101ab578063eab27d22146101a65763ef8b30f71461017e57600080fd5b346101a35760203660031901126101a357602061019b8335611db9565b604051908152f35b80fd5b61185c565b50346101a35760403660031901126101a3576020906101c86117a8565b50604051908152f35b509034610339576101e136611af4565b91926101ec33611b66565b15610335576101fa84611dd8565b93841561030357926020928686938661021661028e9886611ca9565b604051908682528782015263ffffffff60018060a01b03951690858516907f3240a6f0b7bff8c7145bcb13d56beaf1d0c14ea08bf95817bde9f4d364a1cd3e60403392a46040805163095ea7b360e01b81526001600160a01b0390941691840191825260208201959095529195869485938492910190565b03927f0000000000000000000000000000000000000000000000000000000000000000165af180156102f857602093506102cb5750604051908152f35b6102ea90833d81116102f1575b6102e2818361190b565b810190611b4e565b50386101c8565b503d6102d8565b6040513d85823e3d90fd5b60405162461bcd60e51b8152602081840152600b60248201526a5a45524f5f41535345545360a81b6044820152606490fd5b8480fd5b5080fd5b509034610339576060366003190112610339576103586117a8565b6103606117c0565b906044359161036e33611b66565b156103355763ffffffff80921693848652856020526040862054908482106103eb575060209284927ff540a297bf7bb4d99d45e5910bb5f3935199b031511ce2e443c95397dfa7715d95604093888a5289875203838920551695868152206103d7828254611b2b565b9055604051908152a3602060405160018152f35b60849060206040519162461bcd60e51b8352820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152fd5b50346101a35760203660031901126101a357602061019b8335611db9565b50346101a35761046b36611af4565b939161047993919333611b66565b15610339578181816105c59461049161054f95611e14565b9761049b33611b66565b610653575b6104aa898b611ca9565b61055d6040519a858c5260209b8b8d82015263ffffffff60018060a01b03921690828516907f3240a6f0b7bff8c7145bcb13d56beaf1d0c14ea08bf95817bde9f4d364a1cd3e60403392a460405163a9059cbb60e01b8d82019081526001600160a01b039094166024820152604481019690965294967f0000000000000000000000000000000000000000000000000000000000000000959095169487906064820190565b03601f19810188528761190b565b6040519561056a876118bc565b8a87527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648b880152519082855af1903d1561064a573d6105a981611a91565b906105b7604051928361190b565b81528093893d92013e611c0c565b80519084826105d7575b604051858152f35b806105e6938301019101611b4e565b156105f3578080846105cf565b60405162461bcd60e51b8152908101839052602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b60609250611c0c565b63ffffffff8a1680835260016020526040832033845260205260408320548a6000198203610684575b5050506104a0565b61068d91611bff565b908352600160205260408320338452602052604083205538808a61067c565b5090602091826003193601126101a35761071c90836106c96117a8565b9382826040516106d8816118bc565b8281520152600854600e546040805163095ea7b360e01b8152339481019485526020850192909252909586936001600160a01b039093169284928792849290910190565b03925af19081156107bc57509260029161079b9461079f575b5060ff600654167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323563ffffffff600e549561077a876040519384931695309084611e67565b0390a26040519261078a846118bc565b835282015260405191829182611827565b0390f35b6107b590823d84116102f1576102e2818361190b565b5038610735565b604051903d90823e3d90fd5b5090346103395760203660031901126103395735600e5580f35b50346101a35760203660031901126101a357602061019b8335611df6565b50346101a357806003193601126101a35780610100604051610821816118ee565b8281528260208201528260408201528260608201528260808201528260a0820152606060c0820152606060e082015201526040519161085f836118ee565b6006549160ff83169160028310156109a5575050825260d881901b6001600160e01b031916602083015260281c6001600160a01b03908116604083015260075481166060830152600854811660808301526009541660a08201526108c161192d565b60c08201526108ce6119eb565b60e082015260018060a01b03600c54166101008201526040518091602082526108fb602083018251611a84565b63ffffffff60e01b602082015116604083015260018060a01b03604082015116606083015260018060a01b03606082015116608083015260018060a01b0360808201511660a083015260018060a01b0360a08201511660c083015260c081015161098d610976610120928360e08701526101408601906117d3565b60e0840151858203601f19016101008701526117d3565b610100909201516001600160a01b0316908301520390f35b634e487b7160e01b825260219052602490fd5b50346101a357806003193601126101a35760405191818154906109da82611882565b80865292600192808416908115610a725750600114610a18575b61079b86610a048188038261190b565b6040519182916020835260208301906117d3565b815292507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610a5a575050508101602001610a048261079b386109f4565b80546020858701810191909152909301928101610a3e565b905086955061079b96935060209250610a0494915060ff191682840152151560051b8201019293386109f4565b50346101a35760203660031901126101a357602061019b610abe6117a8565b63ffffffff16600052600060205260406000205490565b5090346103395760209081600319360112610b9d5780359067ffffffffffffffff90818311610335573660238401121561033557820135908111610b99573660248260051b84010111610b99576040519283928392602490910191865b828110610b6757505050500390207f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d48280a280f35b91939092809550359063ffffffff8216809203610b9557908152859490830193908301929091600101610b32565b8780fd5b8380fd5b8280fd5b50346101a35760206003198181360112610b9d5783359167ffffffffffffffff9182841161033557610120908436030112610b995760405191610be3836118ee565b8386013560028110156110475783526024840135936001600160e01b03198516850361104757828401948552610c1b60448201611813565b9260408501938452610c2f60648301611813565b9560608601968752610c4360848401611813565b9660808701978852610c5760a48501611813565b9060a0880191825260c485013586811161104357610c7a908c3691880101611aad565b9260c0890193845260e486013587811161103f57610104610ca3610cb1928f36918b0101611aad565b9760e08c0198895201611813565b6101008a01908152600c546001600160a01b039a919991908b16330361102e575191600283101561101a57928a949392859392849360ff64ffffffff00600654925160d81c169265010000000000600160c81b03905160281b1693169066ffffffffffffff60c81b161717176006555116996bffffffffffffffffffffffff60a01b9a8b600754161760075551168960085416176008555116876009541617600955519182518481116110075780610d6a600a54611882565b94601f95868111610f9c575b508490868311600114610f19578b92610f0e575b50508160011b916000199060031b1c191617600a555b51908151938411610efb5790839291610dba600b54611882565b838111610e8b575b5080928411600114610e0557508792610dfa575b50508160011b916000199060031b1c191617600b555b511690600c541617600c5580f35b015190508680610dd6565b600b89527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99350601f1985169089905b828210610e73575050908460019594939210610e5a575b505050811b01600b55610dec565b015160001960f88460031b161c19169055868080610e4c565b80600186978294978701518155019601940190610e35565b9091929350600b89527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db98480870160051c820192848810610ef2575b9587969594939291950160051c01905b818110610ee45750610dc2565b8a8155869550600101610ed7565b92508192610ec7565b634e487b7160e01b885260418952602488fd5b015190503880610d8a565b600a8c527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a89250601f1984168c5b87828210610f86575050908460019594939210610f6d575b505050811b01600a55610da0565b015160001960f88460031b161c19169055388080610f5f565b6001859682939686015181550195019301610f47565b909150600a8b527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88680850160051c820192878610610ffe575b9085949392910160051c01905b818110610ff05750610d76565b8c8155849350600101610fe3565b92508192610fd6565b634e487b7160e01b895260418a52602489fd5b50634e487b7160e01b8c5260218d5260248cfd5b604051634755657960e01b81528e90fd5b8b80fd5b8a80fd5b8580fd5b50346101a357806003193601126101a35760065460018060a01b039081600754166110f083600854166110e2856009541661108461192d565b9061108d6119eb565b9388600c54169660405199896110a78c60ff819d16611a84565b63ffffffff60e01b8160d81b1660208c015260281c1660408a01526060890152608088015260a08701526101208060c08801528601906117d3565b9084820360e08601526117d3565b906101008301520390f35b50346101a357806003193601126101a357600254908161112857505050602060ff60055416604051908152f35b6040516370a0823160e01b81523084820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156111e45781926111b1575b5060ff600554169182810292818404149015171561119e5750602092500461019b565b634e487b7160e01b815260118452602490fd5b9091506020813d82116111dc575b816111cc6020938361190b565b810103126103395751903861117b565b3d91506111bf565b50604051903d90823e3d90fd5b50346101a35760203660031901126101a357602061019b8335611dd8565b50346101a357806003193601126101a3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101a357806003193601126101a357602060ff60055416604051908152f35b5090346103395760403660031901126103395780356112926117c0565b9261129c33611b66565b156101a3576112aa82611db9565b92831561138857604080516323b872dd60e01b815233928101928352306020848101919091529183018590529291839081906060010381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107bc57509363ffffffff9160209561136b575b506113308482611bcd565b604051928352838584015216907f998ee7ca3edf2df3955313b2583cc7f36e1ecfd3c5e2ef9c442d216b42d421d260403392a3604051908152f35b61138190863d81116102f1576102e2818361190b565b5038611325565b60649060206040519162461bcd60e51b8352820152600b60248201526a5a45524f5f53484152455360a81b6044820152fd5b5060403660031901126101a3576113cf6117a8565b91611428602435928060206040516113e6816118bc565b82815201526008546040805163095ea7b360e01b81523395810195865260208681018890526001600160a01b0396919590938693908816928492879284920190565b03925af19081156107bc575061079b947f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf32359263ffffffff926114a8575b506114838560ff600654169560085416604051948594169684611e67565b0390a260405190611493826118bc565b81526001602082015260405191829182611827565b6114bf9060203d81116102f1576102e2818361190b565b5038611465565b5060603660031901126101a3576114db6117a8565b602435906001600160a01b0382168203610b9d5763ffffffff7fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd9161153160ff6006541660405193849316956044359184611e67565b0390a280f35b5090346103395760403660031901126103395780356115546117c0565b9261155e33611b66565b156101a3576115a390602061157284611df6565b604080516323b872dd60e01b8152339781019788523060208901529087018290529095909384918291606090910190565b0381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107bc57509363ffffffff9160209561162f575b506115f48382611bcd565b604051928484528584015216907f998ee7ca3edf2df3955313b2583cc7f36e1ecfd3c5e2ef9c442d216b42d421d260403392a3604051908152f35b61164590863d81116102f1576102e2818361190b565b50386115e9565b50346101a357806003193601126101a3576020600254604051908152f35b50346101a35760203660031901126101a357602061019b8335611e14565b50346101a357806003193601126101a35760405190806003546116aa81611882565b8085529160019180831690811561172f57506001146116d4575b61079b85610a048187038261190b565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410611717575050508101602001610a048261079b6116c4565b805460208587018101919091529093019281016116fc565b86955061079b96935060209250610a0494915060ff191682840152151560051b82010192936116c4565b50346101a35760203660031901126101a35761019b604060209263ffffffff6117806117a8565b1681528084522054611dd8565b50346101a357806003193601126101a357602061019b611d34565b6004359063ffffffff821682036117bb57565b600080fd5b6024359063ffffffff821682036117bb57565b919082519283825260005b8481106117ff575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016117de565b35906001600160a01b03821682036117bb57565b8151815260209091015160408201929160058210156118465760200152565b634e487b7160e01b600052602160045260246000fd5b346117bb5760203660031901126117bb576118756117a8565b5060206040516000198152f35b90600182811c921680156118b2575b602083101461189c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611891565b6040810190811067ffffffffffffffff8211176118d857604052565b634e487b7160e01b600052604160045260246000fd5b610120810190811067ffffffffffffffff8211176118d857604052565b90601f8019910116810190811067ffffffffffffffff8211176118d857604052565b60405190600082600a549161194183611882565b808352926001908181169081156119c9575060011461196a575b506119689250038361190b565b565b600a600090815291507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b8483106119ae575061196893505081016020013861195b565b81935090816020925483858a01015201910190918592611995565b90506020925061196894915060ff191682840152151560051b8201013861195b565b60405190600082600b54916119ff83611882565b808352926001908181169081156119c95750600114611a2557506119689250038361190b565b600b600090815291507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b848310611a69575061196893505081016020013861195b565b81935090816020925483858a01015201910190918592611a50565b9060028210156118465752565b67ffffffffffffffff81116118d857601f01601f191660200190565b81601f820112156117bb57803590611ac482611a91565b92611ad2604051948561190b565b828452602083830101116117bb57816000926020809301838601378301015290565b60609060031901126117bb57600435906024356001600160a01b03811681036117bb579060443563ffffffff811681036117bb5790565b91908201809211611b3857565b634e487b7160e01b600052601160045260246000fd5b908160209103126117bb575180151581036117bb5790565b600754604051633cc5579b60e01b81526001600160a01b0392831660048201529160209183916024918391165afa908115611bc157600091611ba6575090565b611bbe915060203d81116102f1576102e2818361190b565b90565b6040513d6000823e3d90fd5b63ffffffff90611bdf83600254611b2b565b600255166000526000602052611bfb6040600020918254611b2b565b9055565b91908203918211611b3857565b91929015611c6e5750815115611c20575090565b3b15611c295790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611c815750805190602001fd5b60405162461bcd60e51b815260206004820152908190611ca59060248301906117d3565b0390fd5b63ffffffff16906000828152806020526040812054828110611ce45782604091611cdf9584528360205203912055600254611bff565b600255565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bc157600091611d8b575090565b906020823d8211611db1575b81611da46020938361190b565b810103126101a357505190565b3d9150611d97565b60025480611dc5575090565b90611bbe91611dd2611d34565b91611e33565b60025480611de4575090565b611bbe91611df0611d34565b90611e33565b60025480611e02575090565b611bbe91611e0e611d34565b90611e49565b60025480611e20575090565b90611bbe91611e2d611d34565b91611e49565b816000190481118202158302156117bb57020490565b816000190481118202158302156117bb570290808204910615150190565b604091949392611e7b826060810197611a84565b6001600160a01b03166020820152015256fea26469706673582212205ab82a0169eff72884325784e6c0713f471cfbfb3c9bf79c5024e25c2621a39b64736f6c63430008120033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _config: IVault.VaultConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_config, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _config: IVault.VaultConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_config, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
