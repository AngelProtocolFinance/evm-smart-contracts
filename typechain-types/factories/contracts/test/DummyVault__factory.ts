/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
  IVault,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApproveFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyBaseToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultConfig",
    outputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum IVault.VaultActionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IVault.RedemptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum IVault.VaultActionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IVault.RedemptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummyAmt",
        type: "uint256",
      },
    ],
    name: "setDummyAmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.VaultType",
            name: "vaultType",
            type: "uint8",
          },
          {
            internalType: "bytes4",
            name: "strategySelector",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "registrar",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "apTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "apTokenSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
        ],
        internalType: "struct IVault.VaultConfig",
        name: "_newConfig",
        type: "tuple",
      },
    ],
    name: "setVaultConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x604060808152346200048f57620012b9803803806200001e81620004aa565b9283398101602080838303126200048f5782516001600160401b03938482116200048f5701906101209081838503126200048f5785519182018281108682111762000494578652825160028110156200048f57825282810151946001600160e01b0319861686036200048f578183019586526200009d878501620004d0565b94878401958652620000b260608601620004d0565b9560608501968752620000c860808701620004d0565b9760808601988952620000de60a08801620004d0565b9160a0870192835260c08801518581116200048f578462000101918a01620004e5565b9360c0880194855260e0890151908682116200048f5762000124918a01620004e5565b9660e081019788526200013c610100809a01620004d0565b98810198895251906002821015620004795760009260ff64ffffffff008554925160d81c169265010000000000600160c81b03905160281b1693169060018060c81b031916171717815560018060a01b038080995116928160018060a01b03199b6001958d87541617865551168b60025416176002555116926003938a855416178455519081519685881162000465576004978854938585811c951680156200045a575b8986101462000447578190601f95868111620003f4575b5089908683116001146200039157859262000385575b505060001982881b1c191690851b1788555b5190815195861162000372576005978854908582811c9216801562000367575b898310146200035457508381116200030e575b5086928611600114620002a257949550859291908362000296575b50501b92600019911b1c19161790555b511690600654161760065551610d619081620005588239f35b0151935038806200026d565b87815286812093969394938691601f198316915b89838310620002f35750505010620002d8575b50505050811b0190556200027d565b01519060f884600019921b161c1916905538808080620002c9565b858701518955909701969485019488935090810190620002b6565b888252878220848089018b1c8201928a8a106200034a575b018a1c019085905b8281106200033e57505062000252565b8381550185906200032e565b9250819262000326565b634e487b7160e01b835260229052602482fd5b91607f16916200023f565b634e487b7160e01b815260418852602490fd5b0151905038806200020d565b8b86528a86208894509190601f198416875b8d828210620003dd5750508411620003c4575b505050811b0188556200021f565b0151600019838a1b60f8161c19169055388080620003b6565b8385015186558b97909501949384019301620003a3565b9091508a85528985208680850160051c8201928c86106200043d575b918991869594930160051c01915b8281106200042e575050620001f7565b8781558594508991016200041e565b9250819262000410565b634e487b7160e01b845260228a52602484fd5b94607f1694620001e0565b634e487b7160e01b82526041600452602482fd5b634e487b7160e01b600052602160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200049457604052565b51906001600160a01b03821682036200048f57565b919080601f840112156200048f5782516001600160401b03811162000494576020906200051b601f8201601f19168301620004aa565b928184528282870101116200048f5760005b8181106200054357508260009394955001015290565b85810183015184820184015282016200052d56fe608080604052600436101561001357600080fd5b60003560e01c90816320dcd90b14610ae35750806324117f25146109e857806383ddd4481461055d57806388bb447b146104a8578063b2a2353e146101a3578063c2bba6431461018a5763c2ec3be61461006c57600080fd5b60208060031936011261018557600090610084610b4e565b90828160405161009381610b94565b828152015260025460075460405163095ea7b360e01b8152336004820152602481019190915293829185916044918391906001600160a01b03165af1908115610179576101489360029261014c575b5060ff600054167f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf323563ffffffff60075495610127876040519384931695309084610ccd565b0390a26040519261013784610b94565b835282015260405191829182610b75565b0390f35b61016b90823d8411610172575b6101638183610bcd565b810190610cf3565b50386100e2565b503d610159565b6040513d6000823e3d90fd5b600080fd5b3461018557602036600319011261018557600435600755005b346101855760003660031901126101855760006101006040516101c581610bb0565b8281528260208201528260408201528260608201528260808201528260a0820152606060c0820152606060e0820152015260405161020281610bb0565b60005460ff8116600281101561049257825260d881901b6001600160e01b031916602083015260281c6001600160a01b03908116604080840191909152600154821660608401526002548216608084015260035490911660a08301525160045481600061026e83610c93565b80835292600181169081156104735750600114610424575b61029292500382610bcd565b60c08201526040516005548160006102a983610c93565b808352926001811690811561040557506001146103a4575b6102cd92500382610bcd565b60e082015260018060a01b03600654166101008201526040518091602082526102fa602083018251610c46565b63ffffffff60e01b602082015116604083015260018060a01b03604082015116606083015260018060a01b03606082015116608083015260018060a01b0360808201511660a083015260018060a01b0360a08201511660c083015260c081015161038c610375610120928360e0870152610140860190610c53565b60e0840151858203601f1901610100870152610c53565b610100909201516001600160a01b0316908301520390f35b509060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0906000915b8183106103e95750509060206102cd928201016102c1565b60209193508060019154838588010152019101909183926103d1565b602092506102cd94915060ff191682840152151560051b8201016102c1565b50906004600052600080516020610d0c833981519152906000915b81831061045757505090602061029292820101610286565b602091935080600191548385880101520191019091839261043f565b6020925061029294915060ff191682840152151560051b820101610286565b634e487b7160e01b600052602160045260246000fd5b3461018557602080600319360112610185576004359067ffffffffffffffff8083116101855736602384011215610185578260040135908111610185573660248260051b8501011161018557826040519160248392019360005b8281106105355784840385207f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d4600080a2005b90919285359063ffffffff821680920361018557908152948201948201929190600101610502565b3461018557600319602036820112610185576004359067ffffffffffffffff821161018557610120908236030112610185576040519061059c82610bb0565b8060040135600281101561018557825260248101356001600160e01b03198116810361018557602083019081526105d560448301610b61565b90604084019182526105e960648401610b61565b606085019081526105fc60848501610b61565b916080860192835261061060a48601610b61565b9360a0870194855260c486013567ffffffffffffffff81116101855761063c9060043691890101610bef565b9560c0880196875260e481013567ffffffffffffffff81116101855761067a9161066f6101049260043691840101610bef565b60e08b015201610b61565b61010088015286519160028310156104925760ff64ffffffff00600054925160d81c169265010000000000600160c81b03905160281b1693169066ffffffffffffff60c81b1617171760005560018060a01b039051166001600160601b0360a01b600154161760015560018060a01b039051166001600160601b0360a01b600254161760025560018060a01b03905116906003916001600160601b0360a01b8354161782555191825167ffffffffffffffff81116108e95761073d600454610c93565b601f811161097b575b506020601f821160011461090a57819293946000926108ff575b50508160011b9160001990851b1c1916176004555b60e081015191825167ffffffffffffffff81116108e9576005916107998354610c93565b601f8111610887575b50602094601f83116001146108035794829394956000936107f8575b50508260011b92600019911b1c19161790555b6101000151600680546001600160a01b0319166001600160a01b0392909216919091179055005b0151915085806107be565b90601f19831695846000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09260005b88811061086f575084600196979810610855575b50505050811b0190556107d1565b01519060f884600019921b161c1916905584808080610847565b91936020600181928785015181550195019201610833565b836000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0601f8401851c810191602085106108df575b601f01851c01905b8181106108d357506107a2565b600081556001016108c6565b90915081906108be565b634e487b7160e01b600052604160045260246000fd5b015190508480610760565b601f198216906004600052600080516020610d0c8339815191529160005b8181106109635750958360019596971061094b575b505050811b01600455610775565b015160001983871b60f8161c1916905584808061093d565b9192602060018192868b015181550194019201610928565b6004600052601f820160051c600080516020610d0c8339815191520190602083106109d2575b601f0160051c600080516020610d0c83398151915201905b8181106109c65750610746565b600081556001016109b9565b600080516020610d0c83398151915291506109a1565b6040366003190112610185576109fc610b4e565b60243560006020604051610a0f81610b94565b828152015260025460405163095ea7b360e01b8152336004820152602481018390526001600160a01b03916020908290604490829060009087165af1801561017957610148947f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf32359263ffffffff92610ac5575b50610aa08560ff600054169560025416604051948594169684610ccd565b0390a260405190610ab082610b94565b81526001602082015260405191829182610b75565b610adc9060203d8111610172576101638183610bcd565b5086610a82565b606036600319011261018557610af7610b4e565b602435916001600160a01b03831683036101855780610b497fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd9363ffffffff60ff600054169116956044359184610ccd565b0390a2005b6004359063ffffffff8216820361018557565b35906001600160a01b038216820361018557565b8151815260209091015160408201929160058210156104925760200152565b6040810190811067ffffffffffffffff8211176108e957604052565b610120810190811067ffffffffffffffff8211176108e957604052565b90601f8019910116810190811067ffffffffffffffff8211176108e957604052565b81601f820112156101855780359067ffffffffffffffff82116108e95760405192610c24601f8401601f191660200185610bcd565b8284526020838301011161018557816000926020809301838601378301015290565b9060028210156104925752565b919082519283825260005b848110610c7f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c5e565b90600182811c92168015610cc3575b6020831014610cad57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ca2565b604091949392610ce1826060810197610c46565b6001600160a01b031660208201520152565b9081602091031261018557518015158103610185579056fe8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19ba2646970667358221220a80bc48575d15838af3c827f8c705b4dbfe86cf6ecb74846125557243e223d5864736f6c63430008120033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _config: IVault.VaultConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_config, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _config: IVault.VaultConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_config, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
