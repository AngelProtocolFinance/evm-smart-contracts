/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyVault,
  DummyVaultInterface,
} from "../../../contracts/test/DummyVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "_type",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenDeposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtDeposited",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum IVault.VaultType",
        name: "vaultType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenRedeemed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amtRedeemed",
        type: "uint256",
      },
    ],
    name: "Redemption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultType",
    outputs: [
      {
        internalType: "enum IVault.VaultType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "accountIds",
        type: "uint32[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
    ],
    name: "redeemAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setDefaultToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummyAmt",
        type: "uint256",
      },
    ],
    name: "setDummyAmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106a83803806106a883398101604081905261002f91610058565b6000805482919060ff19166001838181111561004d5761004d610080565b021790555050610096565b60006020828403121561006a57600080fd5b81516002811061007957600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b610603806100a56000396000f3fe60806040526004361061007b5760003560e01c806388bb447b1161004e57806388bb447b14610118578063c2bba64314610138578063c2ec3be614610158578063e1e32f991461016b57600080fd5b806320dcd90b1461008057806341cb87fc146100955780634dc23772146100d257806375baf37f146100f8575b600080fd5b61009361008e366004610409565b6101ae565b005b3480156100a157600080fd5b506100936100b0366004610445565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6100e56100e0366004610409565b6101fc565b6040519081526020015b60405180910390f35b34801561010457600080fd5b5060005460ff166040516100ef9190610489565b34801561012457600080fd5b5061009361013336600461049d565b6102c1565b34801561014457600080fd5b50610093610153366004610512565b600255565b6100e561016636600461052b565b610305565b34801561017757600080fd5b50610093610186366004610445565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60005460405163ffffffff8516917fc271c2371a8168d2f8d3117bb7fcd64db82ff075dc4eb21a0431554eabfc9fdd916101ef9160ff169086908690610546565b60405180910390a2505050565b60405163095ea7b360e01b8152336004820152602481018290526000906001600160a01b0384169063095ea7b3906044016020604051808303816000875af115801561024c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610270919061056e565b5060005460405163ffffffff8616917f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf3235916102b29160ff169087908790610546565b60405180910390a25092915050565b81816040516102d1929190610590565b604051908190038120907f26f2b6f1bac51611060f933759e15a99c0180a82b38966e3d8f1a8af28bf49d490600090a25050565b6000805460025460405163095ea7b360e01b815233600482015260248101919091526101009091046001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561035f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610383919061056e565b5060005460025460405163ffffffff8516927f09054fd059dd1ab4912997eda690b4a7ecb31dcd30b3b7811bd9dfd00bcf3235926103c99260ff90921691309190610546565b60405180910390a2505060025490565b803563ffffffff811681146103ed57600080fd5b919050565b80356001600160a01b03811681146103ed57600080fd5b60008060006060848603121561041e57600080fd5b610427846103d9565b9250610435602085016103f2565b9150604084013590509250925092565b60006020828403121561045757600080fd5b610460826103f2565b9392505050565b6002811061048557634e487b7160e01b600052602160045260246000fd5b9052565b602081016104978284610467565b92915050565b600080602083850312156104b057600080fd5b823567ffffffffffffffff808211156104c857600080fd5b818501915085601f8301126104dc57600080fd5b8135818111156104eb57600080fd5b8660208260051b850101111561050057600080fd5b60209290920196919550909350505050565b60006020828403121561052457600080fd5b5035919050565b60006020828403121561053d57600080fd5b610460826103d9565b606081016105548286610467565b6001600160a01b0393909316602082015260400152919050565b60006020828403121561058057600080fd5b8151801515811461046057600080fd5b60008184825b858110156105c25763ffffffff6105ac836103d9565b1683526020928301929190910190600101610596565b50909594505050505056fea26469706673582212200923a9c4db5b77c05959f7041667cbd4406ff436d58a9e1ad699bd8590f1032b64736f6c634300080f0033";

type DummyVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyVault__factory extends ContractFactory {
  constructor(...args: DummyVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyVault> {
    return super.deploy(_type, overrides || {}) as Promise<DummyVault>;
  }
  override getDeployTransaction(
    _type: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_type, overrides || {});
  }
  override attach(address: string): DummyVault {
    return super.attach(address) as DummyVault;
  }
  override connect(signer: Signer): DummyVault__factory {
    return super.connect(signer) as DummyVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyVaultInterface {
    return new utils.Interface(_abi) as DummyVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyVault {
    return new Contract(address, _abi, signerOrProvider) as DummyVault;
  }
}
