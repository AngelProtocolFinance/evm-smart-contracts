/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyGateway,
  DummyGatewayInterface,
} from "../../../contracts/test/DummyGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "BurnFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "ExceedMintLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuthModule",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCodeHash",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCommands",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSetMintLimitsParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenDeployer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "MintFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotProxy",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "SetupFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenContractDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenDeployFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationContractAddress",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "ContractCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sourceTxHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceEventIndex",
        type: "uint256",
      },
    ],
    name: "ContractCallApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sourceTxHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceEventIndex",
        type: "uint256",
      },
    ],
    name: "ContractCallApprovedWithMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationContractAddress",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ContractCallWithToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "newOperatorsData",
        type: "bytes",
      },
    ],
    name: "OperatorshipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddresses",
        type: "address",
      },
    ],
    name: "TokenDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "TokenMintLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "adminEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "adminThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allTokensFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authModule",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "callContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callContractWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
    ],
    name: "isCommandExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "isContractCallAndMintApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
    ],
    name: "isContractCallApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setTestTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "symbols",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "limits",
        type: "uint256[]",
      },
    ],
    name: "setTokenMintLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "tokenAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "tokenFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "tokenMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "tokenMintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "newImplementationCodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "setupParams",
        type: "bytes",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
    ],
    name: "validateContractCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "validateContractCallAndMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bf9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637b1b769e116100c3578063aa1e1f0a1161007c578063aa1e1f0a146102c3578063b5417084146102ca578063bc00c216146102e3578063cec7b359146101d4578063d26ff210146102f6578063f6a5f9f51461030457600080fd5b80637b1b769e1461025657806388b3058714610264578063935b13f6146102725780639543fe14146102855780639ded06df1461015d578063a3499c73146102b557600080fd5b80632a2dae0a116101155780632a2dae0a1461020d578063364940d8146102285780635c60da1b1461020d5780635f6970c31461022f57806364940c561461020d57806367ace8eb1461024257600080fd5b806309c5eabe1461015d57806314bfd6d0146101715780631876eed91461019b5780631c92115f146101be578063269eb65e146101d457806326ef699d146101f6575b600080fd5b61016f61016b36600461044c565b5050565b005b61018561017f36600461048d565b50606090565b60405161019291906104a6565b60405180910390f35b6101ae6101a93660046104f3565b610317565b6040519015158152602001610192565b61016f6101cc3660046105a7565b505050505050565b6101e86101e2366004610656565b50600090565b604051908152602001610192565b61016f610204366004610706565b50505050505050565b60005b6040516001600160a01b039091168152602001610192565b60006101e8565b6101ae61023d3660046107a8565b610330565b61016f61025036600461086d565b50505050565b6101ae6101e2366004610656565b6101e86101e236600461048d565b610210610280366004610656565b610346565b61016f6102933660046108ef565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61016f610250366004610911565b60006101ae565b61016f6102d836600461095e565b505050505050505050565b6101ae6102f1366004610a29565b6103b3565b6101ae6101e236600461048d565b6101ae610312366004610af5565b6103cd565b60006103228a6103e4565b9a9950505050505050505050565b600061033b876103e4565b979650505050505050565b604051622a25a760e91b602082015260009060230160405160208183030381529060405280519060200120826040516020016103829190610b88565b60405160208183030381529060405280519060200120036103ae5750506000546001600160a01b031690565b919050565b60006103be8b6103e4565b9b9a5050505050505050505050565b60006103d8886103e4565b98975050505050505050565b6000637472756560e01b82036103fc57506001919050565b506000919050565b60008083601f84011261041657600080fd5b5081356001600160401b0381111561042d57600080fd5b60208301915083602082850101111561044557600080fd5b9250929050565b6000806020838503121561045f57600080fd5b82356001600160401b0381111561047557600080fd5b61048185828601610404565b90969095509350505050565b60006020828403121561049f57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104e75783516001600160a01b0316835292840192918401916001016104c2565b50909695505050505050565b600080600080600080600080600060c08a8c03121561051157600080fd5b8935985060208a01356001600160401b038082111561052f57600080fd5b61053b8d838e01610404565b909a50985060408c013591508082111561055457600080fd5b6105608d838e01610404565b909850965060608c0135955060808c013591508082111561058057600080fd5b5061058d8c828d01610404565b9a9d999c50979a9699959894979660a00135949350505050565b600080600080600080606087890312156105c057600080fd5b86356001600160401b03808211156105d757600080fd5b6105e38a838b01610404565b909850965060208901359150808211156105fc57600080fd5b6106088a838b01610404565b9096509450604089013591508082111561062157600080fd5b5061062e89828a01610404565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561066857600080fd5b81356001600160401b038082111561067f57600080fd5b818401915084601f83011261069357600080fd5b8135818111156106a5576106a5610640565b604051601f8201601f19908116603f011681019083821181831017156106cd576106cd610640565b816040528281528760208487010111156106e657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060008060008060006080888a03121561072157600080fd5b87356001600160401b038082111561073857600080fd5b6107448b838c01610404565b909950975060208a013591508082111561075d57600080fd5b6107698b838c01610404565b909750955060408a013591508082111561078257600080fd5b5061078f8a828b01610404565b989b979a50959894979596606090950135949350505050565b600080600080600080608087890312156107c157600080fd5b8635955060208701356001600160401b03808211156107df57600080fd5b6107eb8a838b01610404565b9097509550604089013591508082111561080457600080fd5b5061081189828a01610404565b979a9699509497949695606090950135949350505050565b60008083601f84011261083b57600080fd5b5081356001600160401b0381111561085257600080fd5b6020830191508360208260051b850101111561044557600080fd5b6000806000806040858703121561088357600080fd5b84356001600160401b038082111561089a57600080fd5b6108a688838901610829565b909650945060208701359150808211156108bf57600080fd5b506108cc87828801610829565b95989497509550505050565b80356001600160a01b03811681146103ae57600080fd5b60006020828403121561090157600080fd5b61090a826108d8565b9392505050565b6000806000806060858703121561092757600080fd5b610930856108d8565b93506020850135925060408501356001600160401b0381111561095257600080fd5b6108cc87828801610404565b600080600080600080600080600060a08a8c03121561097c57600080fd5b89356001600160401b038082111561099357600080fd5b61099f8d838e01610404565b909b50995060208c01359150808211156109b857600080fd5b6109c48d838e01610404565b909950975060408c01359150808211156109dd57600080fd5b6109e98d838e01610404565b909750955060608c0135915080821115610a0257600080fd5b50610a0f8c828d01610404565b9a9d999c50979a9699959894979660800135949350505050565b60008060008060008060008060008060e08b8d031215610a4857600080fd5b8a35995060208b01356001600160401b0380821115610a6657600080fd5b610a728e838f01610404565b909b50995060408d0135915080821115610a8b57600080fd5b610a978e838f01610404565b9099509750879150610aab60608e016108d8565b965060808d0135955060a08d0135915080821115610ac857600080fd5b50610ad58d828e01610404565b9150809450508092505060c08b013590509295989b9194979a5092959850565b600080600080600080600060a0888a031215610b1057600080fd5b8735965060208801356001600160401b0380821115610b2e57600080fd5b610b3a8b838c01610404565b909850965060408a0135915080821115610b5357600080fd5b50610b608a828b01610404565b9095509350610b739050606089016108d8565b91506080880135905092959891949750929550565b6000825160005b81811015610ba95760208186018101518583015201610b8f565b81811115610bb8576000828501525b50919091019291505056fea2646970667358221220dc374b62a77c7480167e6c8f95f2d9746be39e2ef800784939b5e5f09d92bc3264736f6c634300080f0033";

type DummyGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyGateway__factory extends ContractFactory {
  constructor(...args: DummyGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyGateway> {
    return super.deploy(overrides || {}) as Promise<DummyGateway>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DummyGateway {
    return super.attach(address) as DummyGateway;
  }
  override connect(signer: Signer): DummyGateway__factory {
    return super.connect(signer) as DummyGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyGatewayInterface {
    return new utils.Interface(_abi) as DummyGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyGateway {
    return new Contract(address, _abi, signerOrProvider) as DummyGateway;
  }
}
