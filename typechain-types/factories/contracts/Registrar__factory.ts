/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "protocolTaxCollector",
        type: "address",
      },
      {
        internalType: "string",
        name: "primaryChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "primaryChainRouter",
        type: "string",
      },
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apGoldfinch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "allowedSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.CRVParams",
        name: "crvParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isApproved",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "isStrategyApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "lockedRebalanceToLiquid",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061328d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638129fc1c116100b8578063c5ec133a1161007c578063c5ec133a1461030b578063ce8144bc14610329578063d1adbcfb14610345578063da81f13d14610375578063edbcc59914610391578063f2fde38b146103af57610137565b80638129fc1c146102725780638da5cb5b1461027c578063afd44bcc1461029a578063b7644fd9146102ca578063b8efa48e146102ed57610137565b806342b8c5e9116100ff57806342b8c5e9146101e45780634349597a146102145780636f2da65714610230578063715018a61461024c57806372b1df291461025657610137565b80630560bd961461013c5780630dcfe5fa1461016c578063379fbf901461018a57806338f2e95c146101a65780633a1d4e22146101c8575b600080fd5b610156600480360381019061015191906119c2565b6103cb565b6040516101639190611a0a565b60405180910390f35b610174610421565b6040516101819190611a76565b60405180910390f35b6101a4600480360381019061019f9190611b15565b610459565b005b6101ae610706565b6040516101bf959493929190611b9b565b60405180910390f35b6101e260048036038101906101dd9190611c12565b610774565b005b6101fe60048036038101906101f99190611c5b565b6107c8565b60405161020b9190611d8e565b60405180910390f35b61022e60048036038101906102299190611da9565b610998565b005b61024a60048036038101906102459190611e15565b610a49565b005b610254610ae7565b005b610270600480360381019061026b9190611e74565b610afb565b005b61027a610b10565b005b610284610f04565b6040516102919190611eb0565b60405180910390f35b6102b460048036038101906102af91906119c2565b610f2e565b6040516102c19190611eda565b60405180910390f35b6102d2610f77565b6040516102e496959493929190611f8e565b60405180910390f35b6102f5611111565b60405161030291906120e6565b60405180910390f35b610313611347565b6040516103209190612124565b60405180910390f35b610343600480360381019061033e919061215e565b611367565b005b61035f600480360381019061035a9190611c5b565b6113bb565b60405161036c9190611a0a565b60405180910390f35b61038f600480360381019061038a919061218b565b611426565b005b6103996114f5565b6040516103a69190612233565b60405180910390f35b6103c960048036038101906103c491906119c2565b6115b7565b005b6000606b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61042961180a565b606d6040518060200160405290816000820160405180602001604052908160008201548152505081525050905090565b61046161163a565b600060405180604001604052806000600181111561048257610481611c97565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff168152509050600060405180604001604052806001808111156104c3576104c2611c97565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff1681525090506040518060600160405280841515815260200183815260200182815250606a6000887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010160008201518160000160006101000a81548160ff021916908360018111156105a6576105a5611c97565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060408201518160020160008201518160000160006101000a81548160ff0219169083600181111561062857610627611c97565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f9f93cfe264ca25e4e50c4be14c5d2aa2127eebae6c3312d17b27343fc29800b0866040516106f69190611a0a565b60405180910390a4505050505050565b60658060000160009054906101000a900460ff16908060000160019054906101000a900463ffffffff16908060000160059054906101000a900463ffffffff16908060000160099054906101000a900460ff169080600001600a9054906101000a900463ffffffff16905085565b61077c61163a565b806066818161078b91906128e6565b9050507f5f9e9ec621ae5fd9b4fe73691f82e7be4aea5948a3d3c4768884823f51b508cd816040516107bd9190612aa9565b60405180910390a150565b6107d0611823565b606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182016040518060400160405290816000820160009054906101000a900460ff16600181111561087c5761087b611c97565b5b600181111561088e5761088d611c97565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001600282016040518060400160405290816000820160009054906101000a900460ff16600181111561092157610920611c97565b5b600181111561093357610932611c97565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815250509050919050565b6109a061163a565b80606b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d82604051610a3d9190611a0a565b60405180910390a25050565b610a5161163a565b80606c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d73382604051610adb9190611eda565b60405180910390a25050565b610aef61163a565b610af960006116b8565b565b80606d8181610b0a9190612b93565b90505050565b60008060019054906101000a900460ff16159050808015610b415750600160008054906101000a900460ff1660ff16105b80610b6e5750610b503061177e565b158015610b6d5750600160008054906101000a900460ff1660ff16145b5b610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba490612c13565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610bea576001600060016101000a81548160ff0219169083151502179055505b610bf26117a1565b6040518060a00160405280600015158152602001604b63ffffffff168152602001601463ffffffff168152602001600015158152602001600063ffffffff16815250606560008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160056101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160096101000a81548160ff021916908315150217905550608082015181600001600a6101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060c00160405280600263ffffffff168152602001606463ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600781526020017f506f6c79676f6e000000000000000000000000000000000000000000000000008152508152602001604051806020016040528060008152508152602001600073ffffffffffffffffffffffffffffffffffffffff16815250606660008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816001019081610e479190612c33565b506080820151816002019081610e5d9190612c33565b5060a08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508015610f015760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610ef89190612d4d565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60668060000160009054906101000a900463ffffffff16908060000160049054906101000a900463ffffffff16908060000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610fda90612510565b80601f016020809104026020016040519081016040528092919081815260200182805461100690612510565b80156110535780601f1061102857610100808354040283529160200191611053565b820191906000526020600020905b81548152906001019060200180831161103657829003601f168201915b50505050509080600201805461106890612510565b80601f016020809104026020016040519081016040528092919081815260200182805461109490612510565b80156110e15780601f106110b6576101008083540402835291602001916110e1565b820191906000526020600020905b8154815290600101906020018083116110c457829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b611119611852565b60666040518060c00160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546111d890612510565b80601f016020809104026020016040519081016040528092919081815260200182805461120490612510565b80156112515780601f1061122657610100808354040283529160200191611251565b820191906000526020600020905b81548152906001019060200180831161123457829003601f168201915b5050505050815260200160028201805461126a90612510565b80601f016020809104026020016040519081016040528092919081815260200182805461129690612510565b80156112e35780601f106112b8576101008083540402835291602001916112e3565b820191906000526020600020905b8154815290600101906020018083116112c657829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b606d80600001604051806020016040529081600082015481525050905081565b61136f61163a565b806065818161137e9190612ff7565b9050507f52aa634c2343b11cc9bcf4d023c1dc964676b7ae1a604d8754862efdf3db4c3d816040516113b091906130ac565b60405180910390a150565b6000606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff169050919050565b61142e61163a565b80606a6000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2133e7740bf1bd950965acd26008d60b6e9ce17d07da0838c81536561c67717a826040516114e99190611a0a565b60405180910390a25050565b6114fd6118c0565b60656040518060a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160059054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160099054906101000a900460ff1615151515815260200160008201600a9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905090565b6115bf61163a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361162e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162590613139565b60405180910390fd5b611637816116b8565b50565b611642611802565b73ffffffffffffffffffffffffffffffffffffffff16611660610f04565b73ffffffffffffffffffffffffffffffffffffffff16146116b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ad906131a5565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166117f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e790613237565b60405180910390fd5b6118006117fb611802565b6116b8565b565b600033905090565b604051806020016040528061181d611905565b81525090565b604051806060016040528060001515815260200161183f611918565b815260200161184c611918565b81525090565b6040518060c00160405280600063ffffffff168152602001600063ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600015158152602001600063ffffffff168152602001600063ffffffff168152602001600015158152602001600063ffffffff1681525090565b6040518060200160405280600081525090565b60405180604001604052806000600181111561193757611936611c97565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061198f82611964565b9050919050565b61199f81611984565b81146119aa57600080fd5b50565b6000813590506119bc81611996565b92915050565b6000602082840312156119d8576119d761195a565b5b60006119e6848285016119ad565b91505092915050565b60008115159050919050565b611a04816119ef565b82525050565b6000602082019050611a1f60008301846119fb565b92915050565b6000819050919050565b611a3881611a25565b82525050565b602082016000820151611a546000850182611a2f565b50505050565b602082016000820151611a706000850182611a3e565b50505050565b6000602082019050611a8b6000830184611a5a565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ac681611a91565b8114611ad157600080fd5b50565b600081359050611ae381611abd565b92915050565b611af2816119ef565b8114611afd57600080fd5b50565b600081359050611b0f81611ae9565b92915050565b60008060008060808587031215611b2f57611b2e61195a565b5b6000611b3d87828801611ad4565b9450506020611b4e878288016119ad565b9350506040611b5f878288016119ad565b9250506060611b7087828801611b00565b91505092959194509250565b600063ffffffff82169050919050565b611b9581611b7c565b82525050565b600060a082019050611bb060008301886119fb565b611bbd6020830187611b8c565b611bca6040830186611b8c565b611bd760608301856119fb565b611be46080830184611b8c565b9695505050505050565b600080fd5b600060c08284031215611c0957611c08611bee565b5b81905092915050565b600060208284031215611c2857611c2761195a565b5b600082013567ffffffffffffffff811115611c4657611c4561195f565b5b611c5284828501611bf3565b91505092915050565b600060208284031215611c7157611c7061195a565b5b6000611c7f84828501611ad4565b91505092915050565b611c91816119ef565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611cd757611cd6611c97565b5b50565b6000819050611ce882611cc6565b919050565b6000611cf882611cda565b9050919050565b611d0881611ced565b82525050565b611d1781611984565b82525050565b604082016000820151611d336000850182611cff565b506020820151611d466020850182611d0e565b50505050565b60a082016000820151611d626000850182611c88565b506020820151611d756020850182611d1d565b506040820151611d886060850182611d1d565b50505050565b600060a082019050611da36000830184611d4c565b92915050565b60008060408385031215611dc057611dbf61195a565b5b6000611dce858286016119ad565b9250506020611ddf85828601611b00565b9150509250929050565b611df281611a25565b8114611dfd57600080fd5b50565b600081359050611e0f81611de9565b92915050565b60008060408385031215611e2c57611e2b61195a565b5b6000611e3a858286016119ad565b9250506020611e4b85828601611e00565b9150509250929050565b600060208284031215611e6b57611e6a611bee565b5b81905092915050565b600060208284031215611e8a57611e8961195a565b5b6000611e9884828501611e55565b91505092915050565b611eaa81611984565b82525050565b6000602082019050611ec56000830184611ea1565b92915050565b611ed481611a25565b82525050565b6000602082019050611eef6000830184611ecb565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f2f578082015181840152602081019050611f14565b83811115611f3e576000848401525b50505050565b6000601f19601f8301169050919050565b6000611f6082611ef5565b611f6a8185611f00565b9350611f7a818560208601611f11565b611f8381611f44565b840191505092915050565b600060c082019050611fa36000830189611b8c565b611fb06020830188611b8c565b611fbd6040830187611ea1565b8181036060830152611fcf8186611f55565b90508181036080830152611fe38185611f55565b9050611ff260a0830184611ea1565b979650505050505050565b61200681611b7c565b82525050565b600082825260208201905092915050565b600061202882611ef5565b612032818561200c565b9350612042818560208601611f11565b61204b81611f44565b840191505092915050565b600060c08301600083015161206e6000860182611ffd565b5060208301516120816020860182611ffd565b5060408301516120946040860182611d0e565b50606083015184820360608601526120ac828261201d565b915050608083015184820360808601526120c6828261201d565b91505060a08301516120db60a0860182611d0e565b508091505092915050565b600060208201905081810360008301526121008184612056565b905092915050565b60208201600082015161211e6000850182611a2f565b50505050565b60006020820190506121396000830184612108565b92915050565b600060a0828403121561215557612154611bee565b5b81905092915050565b600060a082840312156121745761217361195a565b5b60006121828482850161213f565b91505092915050565b600080604083850312156121a2576121a161195a565b5b60006121b085828601611ad4565b92505060206121c185828601611b00565b9150509250929050565b60a0820160008201516121e16000850182611c88565b5060208201516121f46020850182611ffd565b5060408201516122076040850182611ffd565b50606082015161221a6060850182611c88565b50608082015161222d6080850182611ffd565b50505050565b600060a08201905061224860008301846121cb565b92915050565b61225781611b7c565b811461226257600080fd5b50565b600081356122728161224e565b80915050919050565b60008160001b9050919050565b600063ffffffff6122988461227b565b9350801983169250808416831791505092915050565b6000819050919050565b60006122d36122ce6122c984611b7c565b6122ae565b611b7c565b9050919050565b6000819050919050565b6122ed826122b8565b6123006122f9826122da565b8354612288565b8255505050565b60008160201b9050919050565b600067ffffffff0000000061232884612307565b9350801983169250808416831791505092915050565b612347826122b8565b61235a612353826122da565b8354612314565b8255505050565b6000813561236e81611996565b80915050919050565b60008160401b9050919050565b60007bffffffffffffffffffffffffffffffffffffffff00000000000000006123ac84612377565b9350801983169250808416831791505092915050565b60006123dd6123d86123d384611964565b6122ae565b611964565b9050919050565b60006123ef826123c2565b9050919050565b6000612401826123e4565b9050919050565b6000819050919050565b61241b826123f6565b61242e61242782612408565b8354612384565b8255505050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261246157612460612435565b5b80840192508235915067ffffffffffffffff8211156124835761248261243a565b5b60208301925060018202360383131561249f5761249e61243f565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061252857607f821691505b60208210810361253b5761253a6124e1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026125a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612566565b6125ad8683612566565b95508019841693508086168417925050509392505050565b60006125e06125db6125d684611a25565b6122ae565b611a25565b9050919050565b6000819050919050565b6125fa836125c5565b61260e612606826125e7565b848454612573565b825550505050565b600090565b612623612616565b61262e8184846125f1565b505050565b5b818110156126525761264760008261261b565b600181019050612634565b5050565b601f8211156126975761266881612541565b61267184612556565b81016020851015612680578190505b61269461268c85612556565b830182612633565b50505b505050565b600082821c905092915050565b60006126ba6000198460080261269c565b1980831691505092915050565b60006126d383836126a9565b9150826002028217905092915050565b6126ed83836124a7565b67ffffffffffffffff811115612706576127056124b2565b5b6127108254612510565b61271b828285612656565b6000601f83116001811461274a5760008415612738578287013590505b61274285826126c7565b8655506127aa565b601f19841661275886612541565b60005b828110156127805784890135825560018201915060208501945060208101905061275b565b8683101561279d5784890135612799601f8916826126a9565b8355505b6001600288020188555050505b50505050505050565b6127be8383836126e3565b505050565b600073ffffffffffffffffffffffffffffffffffffffff6127e38461227b565b9350801983169250808416831791505092915050565b612802826123f6565b61281561280e82612408565b83546127c3565b8255505050565b60008101600083018061282e81612265565b905061283a81846122e4565b50505060008101602083018061284f81612265565b905061285b818461233e565b50505060008101604083018061287081612361565b905061287c8184612412565b50505060018101606083016128918185612444565b61289c8183866127b3565b5050505060028101608083016128b28185612444565b6128bd8183866127b3565b505050506003810160a08301806128d381612361565b90506128df81846127f9565b5050505050565b6128f0828261281c565b5050565b6000813590506129038161224e565b92915050565b600061291860208401846128f4565b905092915050565b600061292f60208401846119ad565b905092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261296357612962612941565b5b83810192508235915060208301925067ffffffffffffffff82111561298b5761298a612937565b5b6001820236038313156129a1576129a061293c565b5b509250929050565b82818337600083830152505050565b60006129c4838561200c565b93506129d18385846129a9565b6129da83611f44565b840190509392505050565b600060c083016129f86000840184612909565b612a056000860182611ffd565b50612a136020840184612909565b612a206020860182611ffd565b50612a2e6040840184612920565b612a3b6040860182611d0e565b50612a496060840184612946565b8583036060870152612a5c8382846129b8565b92505050612a6d6080840184612946565b8583036080870152612a808382846129b8565b92505050612a9160a0840184612920565b612a9e60a0860182611d0e565b508091505092915050565b60006020820190508181036000830152612ac381846129e5565b905092915050565b60008135612ad881611de9565b80915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612b0d8461227b565b9350801983169250808416831791505092915050565b612b2c826125c5565b612b3f612b38826125e7565b8354612ae1565b8255505050565b600081016000830180612b5881612acb565b9050612b648184612b23565b5050505050565b612b758282612b46565b5050565b600081016000830180612b8c8184612b6b565b5050505050565b612b9d8282612b79565b5050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612bfd602e83611f00565b9150612c0882612ba1565b604082019050919050565b60006020820190508181036000830152612c2c81612bf0565b9050919050565b612c3c82611ef5565b67ffffffffffffffff811115612c5557612c546124b2565b5b612c5f8254612510565b612c6a828285612656565b600060209050601f831160018114612c9d5760008415612c8b578287015190505b612c9585826126c7565b865550612cfd565b601f198416612cab86612541565b60005b82811015612cd357848901518255600182019150602085019450602081019050612cae565b86831015612cf05784890151612cec601f8916826126a9565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600060ff82169050919050565b6000612d37612d32612d2d84612d05565b6122ae565b612d0f565b9050919050565b612d4781612d1c565b82525050565b6000602082019050612d626000830184612d3e565b92915050565b60008135612d7581611ae9565b80915050919050565b600060ff612d8b8461227b565b9350801983169250808416831791505092915050565b6000612dac826119ef565b9050919050565b6000819050919050565b612dc682612da1565b612dd9612dd282612db3565b8354612d7e565b8255505050565b60008160081b9050919050565b600064ffffffff00612dfe84612de0565b9350801983169250808416831791505092915050565b612e1d826122b8565b612e30612e29826122da565b8354612ded565b8255505050565b60008160281b9050919050565b600068ffffffff0000000000612e5984612e37565b9350801983169250808416831791505092915050565b612e78826122b8565b612e8b612e84826122da565b8354612e44565b8255505050565b60008160481b9050919050565b600069ff000000000000000000612eb584612e92565b9350801983169250808416831791505092915050565b612ed482612da1565b612ee7612ee082612db3565b8354612e9f565b8255505050565b60008160501b9050919050565b60006dffffffff00000000000000000000612f1584612eee565b9350801983169250808416831791505092915050565b612f34826122b8565b612f47612f40826122da565b8354612efb565b8255505050565b600081016000830180612f6081612d68565b9050612f6c8184612dbd565b505050600081016020830180612f8181612265565b9050612f8d8184612e14565b505050600081016040830180612fa281612265565b9050612fae8184612e6f565b505050600081016060830180612fc381612d68565b9050612fcf8184612ecb565b505050600081016080830180612fe481612265565b9050612ff08184612f2b565b5050505050565b6130018282612f4e565b5050565b60006130146020840184611b00565b905092915050565b60a0820161302d6000830183613005565b61303a6000850182611c88565b506130486020830183612909565b6130556020850182611ffd565b506130636040830183612909565b6130706040850182611ffd565b5061307e6060830183613005565b61308b6060850182611c88565b506130996080830183612909565b6130a66080850182611ffd565b50505050565b600060a0820190506130c1600083018461301c565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613123602683611f00565b915061312e826130c7565b604082019050919050565b6000602082019050818103600083015261315281613116565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061318f602083611f00565b915061319a82613159565b602082019050919050565b600060208201905081810360008301526131be81613182565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613221602b83611f00565b915061322c826131c5565b604082019050919050565b6000602082019050818103600083015261325081613214565b905091905056fea2646970667358221220056258b3fd5bcb3089a4a48fb39a573446b4d1ef12df9dfd98186e3cf26043fe64736f6c634300080f0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
