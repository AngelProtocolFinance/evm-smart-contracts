/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "protocolTaxCollector",
        type: "address",
      },
      {
        internalType: "string",
        name: "primaryChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "primaryChainRouter",
        type: "string",
      },
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apGoldfinch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "allowedSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.CRVParams",
        name: "crvParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isApproved",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "isStrategyApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "lockedRebalanceToLiquid",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a31806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638129fc1c116100b8578063c5ec133a1161007c578063c5ec133a14610334578063ce8144bc1461035a578063d1adbcfb1461036d578063da81f13d1461039a578063edbcc599146103ad578063f2fde38b1461048a57600080fd5b80638129fc1c146102ab5780638da5cb5b146102b3578063afd44bcc146102ce578063b7644fd914610305578063b8efa48e1461031f57600080fd5b806342b8c5e9116100ff57806342b8c5e91461024a5780634349597a1461026a5780636f2da6571461027d578063715018a61461029057806372b1df291461029857600080fd5b80630560bd961461013c5780630dcfe5fa1461017d578063379fbf90146101b057806338f2e95c146101c55780633a1d4e2214610237575b600080fd5b61016861014a366004611059565b6001600160a01b03166000908152606b602052604090205460ff1690565b60405190151581526020015b60405180910390f35b60408051808201825260006020808301918252915281518083018352606d54818301818152909152915191825201610174565b6101c36101be3660046110a8565b61049d565b005b6065546102029060ff8082169163ffffffff6101008204811692650100000000008304821692600160481b810490911691600160501b9091041685565b60408051951515865263ffffffff9485166020870152928416928501929092521515606084015216608082015260a001610174565b6101c3610245366004611102565b610624565b61025d61025836600461113d565b610676565b60405161017491906111a4565b6101c36102783660046111db565b610767565b6101c361028b366004611214565b6107cf565b6101c3610824565b6101c36102a6366004611240565b610838565b6101c361084b565b6033546040516001600160a01b039091168152602001610174565b6102f76102dc366004611059565b6001600160a01b03166000908152606c602052604090205490565b604051908152602001610174565b61030d610aa9565b604051610174969594939291906112a5565b610327610c02565b6040516101749190611308565b6040805160208101909152606d54815261034b9081565b60405190518152602001610174565b6101c361036836600461138f565b610db4565b61016861037b36600461113d565b6001600160e01b0319166000908152606a602052604090205460ff1690565b6101c36103a83660046113a1565b610dfb565b6104366040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506040805160a08101825260655460ff8082161515835263ffffffff610100830481166020850152650100000000008304811694840194909452600160481b82041615156060830152600160501b9004909116608082015290565b6040516101749190600060a082019050825115158252602083015163ffffffff8082166020850152806040860151166040850152606085015115156060850152806080860151166080850152505092915050565b6101c3610498366004611059565b610e5c565b6104a5610ed2565b60408051808201825260008082526001600160a01b03861660208301528251808401909352909180600181526001600160a01b0386166020918201526040805160608101825286151581528083018681528183018590526001600160e01b03198b166000908152606a909452919092208251815490151560ff1991821617825591518051600180840180549798509596939592949293919284921690838181111561055257610552611158565b02179055506020919091015181546001600160a01b0390911661010002610100600160a81b031990911617905560408201518051600283018054909190829060ff1916600183818111156105a8576105a8611158565b02179055506020918201518154610100600160a81b0319166101006001600160a01b0392831602179091556040518715158152888216945090891692506001600160e01b03198a16917f9f93cfe264ca25e4e50c4be14c5d2aa2127eebae6c3312d17b27343fc29800b0910160405180910390a4505050505050565b61062c610ed2565b8060666106398282611596565b9050507f5f9e9ec621ae5fd9b4fe73691f82e7be4aea5948a3d3c4768884823f51b508cd8160405161066b9190611704565b60405180910390a150565b61067e610ff7565b6001600160e01b031982166000908152606a60209081526040918290208251606081018452815460ff908116151582528451808601909552600180840180549396949587019493909284929116908111156106db576106db611158565b60018111156106ec576106ec611158565b8152905461010090046001600160a01b0316602091820152908252604080518082019091526002840180549390920192909190829060ff16600181111561073557610735611158565b600181111561074657610746611158565b8152905461010090046001600160a01b031660209091015290525092915050565b61076f610ed2565b6001600160a01b0382166000818152606b6020908152604091829020805460ff191685151590811790915591519182527f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d91015b60405180910390a25050565b6107d7610ed2565b6001600160a01b0382166000818152606c602052604090819020839055517f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d733906107c39084815260200190565b61082c610ed2565b6108366000610f2c565b565b80606d610846828290359055565b505050565b600054610100900460ff161580801561086b5750600054600160ff909116105b806108855750303b158015610885575060005460ff166001145b6108ed5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610910576000805461ff0019166101001790555b610918610f7e565b6040805160a080820183526000808352604b60208085019190915260148486015260608085018390526080948501839052606580546dffffffffffffffffffffffffffff191665140000004b00179055855160c0810187526002815260648184019081528188018581528851808a018a5260078152662837b63cb3b7b760c91b8187015293830193845288519485019098528484529581019290925292810191909152805160668054945195516001600160a01b0316600160401b0268010000000000000000600160e01b031963ffffffff9788166401000000000267ffffffffffffffff199097169390971692909217949094179490941693909317825551606790610a2590826117cb565b5060808201516002820190610a3a90826117cb565b5060a09190910151600390910180546001600160a01b0319166001600160a01b039092169190911790558015610aa6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161066b565b50565b606680546067805463ffffffff80841694640100000000850490911693600160401b90046001600160a01b0316929091610ae290611453565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0e90611453565b8015610b5b5780601f10610b3057610100808354040283529160200191610b5b565b820191906000526020600020905b815481529060010190602001808311610b3e57829003601f168201915b505050505090806002018054610b7090611453565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9c90611453565b8015610be95780601f10610bbe57610100808354040283529160200191610be9565b820191906000526020600020905b815481529060010190602001808311610bcc57829003601f168201915b505050600390930154919250506001600160a01b031686565b6040805160c0810182526000808252602082018190529181018290526060808201819052608082015260a08101919091526040805160c0810182526066805463ffffffff80821684526401000000008204166020840152600160401b90046001600160a01b03169282019290925260678054919291606084019190610c8690611453565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb290611453565b8015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b50505050508152602001600282018054610d1890611453565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4490611453565b8015610d915780601f10610d6657610100808354040283529160200191610d91565b820191906000526020600020905b815481529060010190602001808311610d7457829003601f168201915b5050509183525050600391909101546001600160a01b0316602090910152919050565b610dbc610ed2565b806065610dc98282611898565b9050507f52aa634c2343b11cc9bcf4d023c1dc964676b7ae1a604d8754862efdf3db4c3d8160405161066b9190611980565b610e03610ed2565b6001600160e01b031982166000818152606a6020908152604091829020805460ff191685151590811790915591519182527f2133e7740bf1bd950965acd26008d60b6e9ce17d07da0838c81536561c67717a91016107c3565b610e64610ed2565b6001600160a01b038116610ec95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e4565b610aa681610f2c565b6033546001600160a01b031633146108365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610fe95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016108e4565b61083633610f2c565b905290565b6040518060600160405280600015158152602001611025604080518082019091526000808252602082015290565b8152602001610ff2604080518082019091526000808252602082015290565b6001600160a01b0381168114610aa657600080fd5b60006020828403121561106b57600080fd5b813561107681611044565b9392505050565b80356001600160e01b03198116811461109557600080fd5b919050565b8015158114610aa657600080fd5b600080600080608085870312156110be57600080fd5b6110c78561107d565b935060208501356110d781611044565b925060408501356110e781611044565b915060608501356110f78161109a565b939692955090935050565b60006020828403121561111457600080fd5b813567ffffffffffffffff81111561112b57600080fd5b820160c0818503121561107657600080fd5b60006020828403121561114f57600080fd5b6110768261107d565b634e487b7160e01b600052602160045260246000fd5b80516002811061118e57634e487b7160e01b600052602160045260246000fd5b82526020908101516001600160a01b0316910152565b81511515815260208083015160a08301916111c19084018261116e565b5060408301516111d4606084018261116e565b5092915050565b600080604083850312156111ee57600080fd5b82356111f981611044565b915060208301356112098161109a565b809150509250929050565b6000806040838503121561122757600080fd5b823561123281611044565b946020939093013593505050565b60006020828403121561125257600080fd5b50919050565b6000815180845260005b8181101561127e57602081850181015186830182015201611262565b81811115611290576000602083870101525b50601f01601f19169290920160200192915050565b63ffffffff8781168252861660208201526001600160a01b03858116604083015260c060608301819052600091906112df90840187611258565b83810360808501526112f18187611258565b92505080841660a084015250979650505050505050565b60208152600063ffffffff80845116602084015280602085015116604084015250604083015160018060a01b0380821660608501526060850151915060c0608085015261135860e0850183611258565b91506080850151601f198584030160a08601526113758382611258565b9250508060a08601511660c0850152508091505092915050565b600060a0828403121561125257600080fd5b600080604083850312156113b457600080fd5b6111f98361107d565b63ffffffff81168114610aa657600080fd5b600081356113dc816113bd565b92915050565b600081356113dc81611044565b6000808335601e1984360301811261140657600080fd5b83018035915067ffffffffffffffff82111561142157600080fd5b60200191503681900382131561143657600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061146757607f821691505b60208210810361125257634e487b7160e01b600052602260045260246000fd5b601f82111561084657600081815260208120601f850160051c810160208610156114ae5750805b601f850160051c820191505b818110156114cd578281556001016114ba565b505050505050565b67ffffffffffffffff8311156114ed576114ed61143d565b611501836114fb8354611453565b83611487565b6000601f841160018114611535576000851561151d5750838201355b600019600387901b1c1916600186901b17835561158f565b600083815260209020601f19861690835b828110156115665786850135825560209485019460019092019101611546565b50868210156115835760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81356115a1816113bd565b63ffffffff8116905081548163ffffffff19821617835560208401356115c6816113bd565b67ffffffff000000008160201b169050808367ffffffffffffffff1984161717845560408501356115f681611044565b6001600160e01b0319929092169092179190911760409190911b68010000000000000000600160e01b031617815561163160608301836113ef565b61163f8183600186016114d5565b505061164e60808301836113ef565b61165c8183600286016114d5565b505061169161166d60a084016113e2565b6003830180546001600160a01b0319166001600160a01b0392909216919091179055565b5050565b6000808335601e198436030181126116ac57600080fd5b830160208101925035905067ffffffffffffffff8111156116cc57600080fd5b80360382131561143657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260008235611715816113bd565b63ffffffff808216602085015260208501359150611732826113bd565b1660408381019190915283013561174881611044565b6001600160a01b031660608381019190915261176690840184611695565b60c0608085015261177b60e0850182846116db565b91505061178b6080850185611695565b848303601f190160a08601526117a28382846116db565b9250505060a08401356117b481611044565b6001600160a01b03811660c0850152509392505050565b815167ffffffffffffffff8111156117e5576117e561143d565b6117f9816117f38454611453565b84611487565b602080601f83116001811461182e57600084156118165750858301515b600019600386901b1c1916600185901b1785556114cd565b600085815260208120601f198616915b8281101561185d5788860151825594840194600190910190840161183e565b508582101561187b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081356113dc8161109a565b81356118a38161109a565b815460ff19811691151560ff16918217835560208401356118c3816113bd565b64ffffffff008160081b169050808364ffffffffff1984161717845560408501356118ed816113bd565b68ffffffff00000000008160281b168468ffffffffffffffffff1985161783171785555050505061194d6119236060840161188b565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b61169161195c608084016113cf565b82805463ffffffff60501b191660509290921b63ffffffff60501b16919091179055565b60a08101823561198f8161109a565b1515825260208301356119a1816113bd565b63ffffffff90811660208401526040840135906119bd826113bd565b90811660408401526060840135906119d48261109a565b90151560608401526080840135906119eb826113bd565b808216608085015250509291505056fea2646970667358221220f4e2d4a5b5b1a891836608b9fe107ec2d4c1a236301bf3945ec65d49d6eda96564736f6c634300080f0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
