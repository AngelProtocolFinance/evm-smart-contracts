/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "protocolTaxCollector",
        type: "address",
      },
      {
        internalType: "string",
        name: "primaryChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "primaryChainRouter",
        type: "string",
      },
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apGoldfinch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "allowedSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.CRVParams",
        name: "crvParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isApproved",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "isStrategyApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "lockedRebalanceToLiquid",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "basis",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ae5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806372b1df29116100b8578063b8efa48e1161007c578063b8efa48e14610343578063c5ec133a14610358578063d1adbcfb1461037e578063da81f13d146103ab578063edbcc599146103be578063f2fde38b146104bc57600080fd5b806372b1df29146102bc5780638129fc1c146102cf5780638da5cb5b146102d7578063afd44bcc146102f2578063b7644fd91461032957600080fd5b80633a1d4e22116100ff5780633a1d4e221461025b57806342b8c5e91461026e5780634349597a1461028e5780636f2da657146102a1578063715018a6146102b457600080fd5b80630560bd961461013c5780630dcfe5fa1461017d5780632e360914146101b0578063379fbf90146101c557806338f2e95c146101d8575b600080fd5b61016861014a3660046110a5565b6001600160a01b03166000908152606b602052604090205460ff1690565b60405190151581526020015b60405180910390f35b60408051808201825260006020808301918252915281518083018352606d54818301818152909152915191825201610174565b6101c36101be3660046110e1565b6104cf565b005b6101c36101d3366004611128565b610521565b60655461021e9060ff8082169163ffffffff6101008204811692650100000000008304821692600160481b810490911691600160501b8204811691600160701b90041686565b60408051961515875263ffffffff9586166020880152938516938601939093529015156060850152821660808401521660a082015260c001610174565b6101c3610269366004611182565b6106a8565b61028161027c3660046111bf565b6106ef565b6040516101749190611226565b6101c361029c36600461125d565b6107e0565b6101c36102af366004611296565b610848565b6101c361089d565b6101c36102ca3660046112c2565b6108b1565b6101c36108c4565b6033546040516001600160a01b039091168152602001610174565b61031b6103003660046110a5565b6001600160a01b03166000908152606c602052604090205490565b604051908152602001610174565b610331610b3c565b60405161017496959493929190611321565b61034b610c95565b6040516101749190611384565b6040805160208101909152606d54815261036f9081565b60405190518152602001610174565b61016861038c3660046111bf565b6001600160e01b0319166000908152606a602052604090205460ff1690565b6101c36103b936600461140b565b610e47565b61045c6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260655460ff8082161515835263ffffffff610100830481166020850152650100000000008304811694840194909452600160481b82041615156060830152600160501b810483166080830152600160701b900490911660a082015290565b6040516101749190600060c082019050825115158252602083015163ffffffff80821660208501528060408601511660408501526060850151151560608501528060808601511660808501528060a08601511660a0850152505092915050565b6101c36104ca3660046110a5565b610ea8565b6104d7610f1e565b8060656104e48282611459565b9050507f9ba2671e8e8451ccaa99b5ba3b232e5a1b174450f12aa494675d0941fa4c17f9816040516105169190611578565b60405180910390a150565b610529610f1e565b60408051808201825260008082526001600160a01b03861660208301528251808401909352909180600181526001600160a01b0386166020918201526040805160608101825286151581528083018681528183018590526001600160e01b03198b166000908152606a909452919092208251815490151560ff199182161782559151805160018084018054979850959693959294929391928492169083818111156105d6576105d66111da565b02179055506020919091015181546001600160a01b0390911661010002610100600160a81b031990911617905560408201518051600283018054909190829060ff19166001838181111561062c5761062c6111da565b02179055506020918201518154610100600160a81b0319166101006001600160a01b0392831602179091556040518715158152888216945090891692506001600160e01b03198a16917f9f93cfe264ca25e4e50c4be14c5d2aa2127eebae6c3312d17b27343fc29800b0910160405180910390a4505050505050565b6106b0610f1e565b8060666106bd82826117be565b9050507f5f9e9ec621ae5fd9b4fe73691f82e7be4aea5948a3d3c4768884823f51b508cd816040516105169190611928565b6106f7611043565b6001600160e01b031982166000908152606a60209081526040918290208251606081018452815460ff90811615158252845180860190955260018084018054939694958701949390928492911690811115610754576107546111da565b6001811115610765576107656111da565b8152905461010090046001600160a01b0316602091820152908252604080518082019091526002840180549390920192909190829060ff1660018111156107ae576107ae6111da565b60018111156107bf576107bf6111da565b8152905461010090046001600160a01b031660209091015290525092915050565b6107e8610f1e565b6001600160a01b0382166000818152606b6020908152604091829020805460ff191685151590811790915591519182527f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d91015b60405180910390a25050565b610850610f1e565b6001600160a01b0382166000818152606c602052604090819020839055517f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d7339061083c9084815260200190565b6108a5610f1e565b6108af6000610f78565b565b80606d6108bf828290359055565b505050565b600054610100900460ff16158080156108e45750600054600160ff909116105b806108fe5750303b1580156108fe575060005460ff166001145b6109665760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610989576000805461ff0019166101001790555b610991610fca565b6040805160c080820183526000808352604b60208085019190915260148486015260608085018390526080808601849052606460a0968701819052606580546e640000000000000000140000004b0071ffffffffffffffffffffffffffffffffffff1990911617905587519586018852600286528584019081528588018581528851808a018a5260078152662837b63cb3b7b760c91b8187015293870193845288519485019098528484529085019290925293830191909152815160668054925195516001600160a01b0316600160401b0268010000000000000000600160e01b031963ffffffff9788166401000000000267ffffffffffffffff19909516939097169290921792909217949094169390931783559051909190606790610ab890826119ef565b5060808201516002820190610acd90826119ef565b5060a09190910151600390910180546001600160a01b0319166001600160a01b039092169190911790558015610b39576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610516565b50565b606680546067805463ffffffff80841694640100000000850490911693600160401b90046001600160a01b0316929091610b759061167b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba19061167b565b8015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b505050505090806002018054610c039061167b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2f9061167b565b8015610c7c5780601f10610c5157610100808354040283529160200191610c7c565b820191906000526020600020905b815481529060010190602001808311610c5f57829003601f168201915b505050600390930154919250506001600160a01b031686565b6040805160c0810182526000808252602082018190529181018290526060808201819052608082015260a08101919091526040805160c0810182526066805463ffffffff80821684526401000000008204166020840152600160401b90046001600160a01b03169282019290925260678054919291606084019190610d199061167b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d459061167b565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b50505050508152602001600282018054610dab9061167b565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd79061167b565b8015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b5050509183525050600391909101546001600160a01b0316602090910152919050565b610e4f610f1e565b6001600160e01b031982166000818152606a6020908152604091829020805460ff191685151590811790915591519182527f2133e7740bf1bd950965acd26008d60b6e9ce17d07da0838c81536561c67717a910161083c565b610eb0610f1e565b6001600160a01b038116610f155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161095d565b610b3981610f78565b6033546001600160a01b031633146108af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161095d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110355760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161095d565b6108af33610f78565b905290565b6040518060600160405280600015158152602001611071604080518082019091526000808252602082015290565b815260200161103e604080518082019091526000808252602082015290565b6001600160a01b0381168114610b3957600080fd5b6000602082840312156110b757600080fd5b81356110c281611090565b9392505050565b600060c082840312156110db57600080fd5b50919050565b600060c082840312156110f357600080fd5b6110c283836110c9565b80356001600160e01b03198116811461111557600080fd5b919050565b8015158114610b3957600080fd5b6000806000806080858703121561113e57600080fd5b611147856110fd565b9350602085013561115781611090565b9250604085013561116781611090565b915060608501356111778161111a565b939692955090935050565b60006020828403121561119457600080fd5b813567ffffffffffffffff8111156111ab57600080fd5b6111b7848285016110c9565b949350505050565b6000602082840312156111d157600080fd5b6110c2826110fd565b634e487b7160e01b600052602160045260246000fd5b80516002811061121057634e487b7160e01b600052602160045260246000fd5b82526020908101516001600160a01b0316910152565b81511515815260208083015160a0830191611243908401826111f0565b50604083015161125660608401826111f0565b5092915050565b6000806040838503121561127057600080fd5b823561127b81611090565b9150602083013561128b8161111a565b809150509250929050565b600080604083850312156112a957600080fd5b82356112b481611090565b946020939093013593505050565b6000602082840312156110db57600080fd5b6000815180845260005b818110156112fa576020818501810151868301820152016112de565b8181111561130c576000602083870101525b50601f01601f19169290920160200192915050565b63ffffffff8781168252861660208201526001600160a01b03858116604083015260c0606083018190526000919061135b908401876112d4565b838103608085015261136d81876112d4565b92505080841660a084015250979650505050505050565b60208152600063ffffffff80845116602084015280602085015116604084015250604083015160018060a01b0380821660608501526060850151915060c060808501526113d460e08501836112d4565b91506080850151601f198584030160a08601526113f183826112d4565b9250508060a08601511660c0850152508091505092915050565b6000806040838503121561141e57600080fd5b61127b836110fd565b600081356114348161111a565b92915050565b63ffffffff81168114610b3957600080fd5b600081356114348161143a565b81356114648161111a565b815460ff19811691151560ff16918217835560208401356114848161143a565b64ffffffff008160081b169050808364ffffffffff1984161717845560408501356114ae8161143a565b68ffffffff00000000008160281b168468ffffffffffffffffff1985161783171785555050505061150e6114e460608401611427565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b61154161151d6080840161144c565b82805463ffffffff60501b191660509290921b63ffffffff60501b16919091179055565b61157461155060a0840161144c565b82805463ffffffff60701b191660709290921b63ffffffff60701b16919091179055565b5050565b60c0810182356115878161111a565b1515825260208301356115998161143a565b63ffffffff90811660208401526040840135906115b58261143a565b90811660408401526060840135906115cc8261111a565b90151560608401526080840135906115e38261143a565b908116608084015260a0840135906115fa8261143a565b80821660a0850152505092915050565b6000813561143481611090565b6000808335601e1984360301811261162e57600080fd5b83018035915067ffffffffffffffff82111561164957600080fd5b60200191503681900382131561165e57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061168f57607f821691505b6020821081036110db57634e487b7160e01b600052602260045260246000fd5b601f8211156108bf57600081815260208120601f850160051c810160208610156116d65750805b601f850160051c820191505b818110156116f5578281556001016116e2565b505050505050565b67ffffffffffffffff83111561171557611715611665565b61172983611723835461167b565b836116af565b6000601f84116001811461175d57600085156117455750838201355b600019600387901b1c1916600186901b1783556117b7565b600083815260209020601f19861690835b8281101561178e578685013582556020948501946001909201910161176e565b50868210156117ab5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81356117c98161143a565b63ffffffff8116905081548163ffffffff19821617835560208401356117ee8161143a565b67ffffffff000000008160201b169050808367ffffffffffffffff19841617178455604085013561181e81611090565b6001600160e01b0319929092169092179190911760409190911b68010000000000000000600160e01b03161781556118596060830183611617565b6118678183600186016116fd565b50506118766080830183611617565b6118848183600286016116fd565b505061157461189560a0840161160a565b6003830180546001600160a01b0319166001600160a01b0392909216919091179055565b6000808335601e198436030181126118d057600080fd5b830160208101925035905067ffffffffffffffff8111156118f057600080fd5b80360382131561165e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600082356119398161143a565b63ffffffff8082166020850152602085013591506119568261143a565b1660408381019190915283013561196c81611090565b6001600160a01b031660608381019190915261198a908401846118b9565b60c0608085015261199f60e0850182846118ff565b9150506119af60808501856118b9565b848303601f190160a08601526119c68382846118ff565b9250505060a08401356119d881611090565b6001600160a01b03811660c0850152509392505050565b815167ffffffffffffffff811115611a0957611a09611665565b611a1d81611a17845461167b565b846116af565b602080601f831160018114611a525760008415611a3a5750858301515b600019600386901b1c1916600185901b1785556116f5565b600085815260208120601f198616915b82811015611a8157888601518255948401946001909101908401611a62565b5085821015611a9f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220ca0f3cf764452d8f7936ba28fe4252ad8086745d02592fc709f43d5183f0b36a64736f6c634300080f0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
