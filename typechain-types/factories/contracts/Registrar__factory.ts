/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "protocolTaxCollector",
        type: "address",
      },
      {
        internalType: "string",
        name: "primaryChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "primaryChainRouter",
        type: "string",
      },
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apGoldfinch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "allowedSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.CRVParams",
        name: "crvParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isApproved",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "isStrategyApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "lockedRebalanceToLiquid",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061326e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638129fc1c116100b8578063c5ec133a1161007c578063c5ec133a1461030b578063ce8144bc14610329578063d1adbcfb14610345578063da81f13d14610375578063edbcc59914610391578063f2fde38b146103af57610137565b80638129fc1c146102725780638da5cb5b1461027c578063afd44bcc1461029a578063b7644fd9146102ca578063b8efa48e146102ed57610137565b806342b8c5e9116100ff57806342b8c5e9146101e45780634349597a146102145780636f2da65714610230578063715018a61461024c57806372b1df291461025657610137565b80630560bd961461013c5780630dcfe5fa1461016c578063379fbf901461018a57806338f2e95c146101a65780633a1d4e22146101c8575b600080fd5b61015660048036038101906101519190611a74565b6103cb565b6040516101639190611abc565b60405180910390f35b610174610421565b6040516101819190611b28565b60405180910390f35b6101a4600480360381019061019f9190611bc7565b610459565b005b6101ae610706565b6040516101bf959493929190611c4d565b60405180910390f35b6101e260048036038101906101dd9190611cc4565b610774565b005b6101fe60048036038101906101f99190611d0d565b6107c8565b60405161020b9190611e40565b60405180910390f35b61022e60048036038101906102299190611e5b565b610998565b005b61024a60048036038101906102459190611ec7565b610a49565b005b610254610ae7565b005b610270600480360381019061026b9190611f26565b610afb565b005b61027a610b10565b005b610284610f12565b6040516102919190611f62565b60405180910390f35b6102b460048036038101906102af9190611a74565b610f3c565b6040516102c19190611f8c565b60405180910390f35b6102d2610f85565b6040516102e496959493929190612040565b60405180910390f35b6102f561111f565b6040516103029190612198565b60405180910390f35b610313611355565b60405161032091906121d6565b60405180910390f35b610343600480360381019061033e9190612210565b611375565b005b61035f600480360381019061035a9190611d0d565b6113c9565b60405161036c9190611abc565b60405180910390f35b61038f600480360381019061038a919061223d565b611434565b005b610399611503565b6040516103a691906122e5565b60405180910390f35b6103c960048036038101906103c49190611a74565b6115c5565b005b6000606b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610429611819565b606d6040518060200160405290816000820160405180602001604052908160008201548152505081525050905090565b610461611649565b6000604051806040016040528060018081111561048157610480611d49565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff16815250905060006040518060400160405280600060018111156104c3576104c2611d49565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff1681525090506040518060600160405280841515815260200183815260200182815250606a6000887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010160008201518160000160006101000a81548160ff021916908360018111156105a6576105a5611d49565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060408201518160020160008201518160000160006101000a81548160ff0219169083600181111561062857610627611d49565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f9f93cfe264ca25e4e50c4be14c5d2aa2127eebae6c3312d17b27343fc29800b0866040516106f69190611abc565b60405180910390a4505050505050565b60658060000160009054906101000a900460ff16908060000160019054906101000a900463ffffffff16908060000160059054906101000a900463ffffffff16908060000160099054906101000a900460ff169080600001600a9054906101000a900463ffffffff16905085565b61077c611649565b806066818161078b9190612999565b9050507f5f9e9ec621ae5fd9b4fe73691f82e7be4aea5948a3d3c4768884823f51b508cd816040516107bd9190612b5c565b60405180910390a150565b6107d0611832565b606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182016040518060400160405290816000820160009054906101000a900460ff16600181111561087c5761087b611d49565b5b600181111561088e5761088d611d49565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001600282016040518060400160405290816000820160009054906101000a900460ff16600181111561092157610920611d49565b5b600181111561093357610932611d49565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815250509050919050565b6109a0611649565b80606b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d82604051610a3d9190611abc565b60405180910390a25050565b610a51611649565b80606c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d73382604051610adb9190611f8c565b60405180910390a25050565b610aef611649565b610af960006116c7565b565b80606d8181610b0a9190612c46565b90505050565b60008060019054906101000a900460ff16159050808015610b415750600160008054906101000a900460ff1660ff16105b80610b6e5750610b503061178d565b158015610b6d5750600160008054906101000a900460ff1660ff16145b5b610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba490612cc6565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610bea576001600060016101000a81548160ff0219169083151502179055505b610bf26117b0565b6040518060a00160405280600015158152602001604b63ffffffff168152602001601463ffffffff168152602001600015158152602001600063ffffffff16815250606560008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160056101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160096101000a81548160ff021916908315150217905550608082015181600001600a6101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060c00160405280600263ffffffff168152602001606463ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600781526020017f506f6c79676f6e000000000000000000000000000000000000000000000000008152508152602001604051806020016040528060008152508152602001600073ffffffffffffffffffffffffffffffffffffffff16815250606660008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816001019080519060200190610e4e929190611861565b506080820151816002019080519060200190610e6b929190611861565b5060a08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508015610f0f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f069190612d2e565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60668060000160009054906101000a900463ffffffff16908060000160049054906101000a900463ffffffff16908060000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610fe8906125c2565b80601f0160208091040260200160405190810160405280929190818152602001828054611014906125c2565b80156110615780601f1061103657610100808354040283529160200191611061565b820191906000526020600020905b81548152906001019060200180831161104457829003601f168201915b505050505090806002018054611076906125c2565b80601f01602080910402602001604051908101604052809291908181526020018280546110a2906125c2565b80156110ef5780601f106110c4576101008083540402835291602001916110ef565b820191906000526020600020905b8154815290600101906020018083116110d257829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6111276118e7565b60666040518060c00160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546111e6906125c2565b80601f0160208091040260200160405190810160405280929190818152602001828054611212906125c2565b801561125f5780601f106112345761010080835404028352916020019161125f565b820191906000526020600020905b81548152906001019060200180831161124257829003601f168201915b50505050508152602001600282018054611278906125c2565b80601f01602080910402602001604051908101604052809291908181526020018280546112a4906125c2565b80156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b606d80600001604051806020016040529081600082015481525050905081565b61137d611649565b806065818161138c9190612fd8565b9050507f52aa634c2343b11cc9bcf4d023c1dc964676b7ae1a604d8754862efdf3db4c3d816040516113be919061308d565b60405180910390a150565b6000606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff169050919050565b61143c611649565b80606a6000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2133e7740bf1bd950965acd26008d60b6e9ce17d07da0838c81536561c67717a826040516114f79190611abc565b60405180910390a25050565b61150b611955565b60656040518060a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160059054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160099054906101000a900460ff1615151515815260200160008201600a9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905090565b6115cd611649565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561163d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116349061311a565b60405180910390fd5b611646816116c7565b50565b611651611811565b73ffffffffffffffffffffffffffffffffffffffff1661166f610f12565b73ffffffffffffffffffffffffffffffffffffffff16146116c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bc90613186565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f690613218565b60405180910390fd5b61180f61180a611811565b6116c7565b565b600033905090565b604051806020016040528061182c61199a565b81525090565b604051806060016040528060001515815260200161184e6119ad565b815260200161185b6119ad565b81525090565b82805461186d906125c2565b90600052602060002090601f01602090048101928261188f57600085556118d6565b82601f106118a857805160ff19168380011785556118d6565b828001600101855582156118d6579182015b828111156118d55782518255916020019190600101906118ba565b5b5090506118e391906119ef565b5090565b6040518060c00160405280600063ffffffff168152602001600063ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600015158152602001600063ffffffff168152602001600063ffffffff168152602001600015158152602001600063ffffffff1681525090565b6040518060200160405280600081525090565b6040518060400160405280600060018111156119cc576119cb611d49565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115611a085760008160009055506001016119f0565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a4182611a16565b9050919050565b611a5181611a36565b8114611a5c57600080fd5b50565b600081359050611a6e81611a48565b92915050565b600060208284031215611a8a57611a89611a0c565b5b6000611a9884828501611a5f565b91505092915050565b60008115159050919050565b611ab681611aa1565b82525050565b6000602082019050611ad16000830184611aad565b92915050565b6000819050919050565b611aea81611ad7565b82525050565b602082016000820151611b066000850182611ae1565b50505050565b602082016000820151611b226000850182611af0565b50505050565b6000602082019050611b3d6000830184611b0c565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b7881611b43565b8114611b8357600080fd5b50565b600081359050611b9581611b6f565b92915050565b611ba481611aa1565b8114611baf57600080fd5b50565b600081359050611bc181611b9b565b92915050565b60008060008060808587031215611be157611be0611a0c565b5b6000611bef87828801611b86565b9450506020611c0087828801611a5f565b9350506040611c1187828801611a5f565b9250506060611c2287828801611bb2565b91505092959194509250565b600063ffffffff82169050919050565b611c4781611c2e565b82525050565b600060a082019050611c626000830188611aad565b611c6f6020830187611c3e565b611c7c6040830186611c3e565b611c896060830185611aad565b611c966080830184611c3e565b9695505050505050565b600080fd5b600060c08284031215611cbb57611cba611ca0565b5b81905092915050565b600060208284031215611cda57611cd9611a0c565b5b600082013567ffffffffffffffff811115611cf857611cf7611a11565b5b611d0484828501611ca5565b91505092915050565b600060208284031215611d2357611d22611a0c565b5b6000611d3184828501611b86565b91505092915050565b611d4381611aa1565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611d8957611d88611d49565b5b50565b6000819050611d9a82611d78565b919050565b6000611daa82611d8c565b9050919050565b611dba81611d9f565b82525050565b611dc981611a36565b82525050565b604082016000820151611de56000850182611db1565b506020820151611df86020850182611dc0565b50505050565b60a082016000820151611e146000850182611d3a565b506020820151611e276020850182611dcf565b506040820151611e3a6060850182611dcf565b50505050565b600060a082019050611e556000830184611dfe565b92915050565b60008060408385031215611e7257611e71611a0c565b5b6000611e8085828601611a5f565b9250506020611e9185828601611bb2565b9150509250929050565b611ea481611ad7565b8114611eaf57600080fd5b50565b600081359050611ec181611e9b565b92915050565b60008060408385031215611ede57611edd611a0c565b5b6000611eec85828601611a5f565b9250506020611efd85828601611eb2565b9150509250929050565b600060208284031215611f1d57611f1c611ca0565b5b81905092915050565b600060208284031215611f3c57611f3b611a0c565b5b6000611f4a84828501611f07565b91505092915050565b611f5c81611a36565b82525050565b6000602082019050611f776000830184611f53565b92915050565b611f8681611ad7565b82525050565b6000602082019050611fa16000830184611f7d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fe1578082015181840152602081019050611fc6565b83811115611ff0576000848401525b50505050565b6000601f19601f8301169050919050565b600061201282611fa7565b61201c8185611fb2565b935061202c818560208601611fc3565b61203581611ff6565b840191505092915050565b600060c0820190506120556000830189611c3e565b6120626020830188611c3e565b61206f6040830187611f53565b81810360608301526120818186612007565b905081810360808301526120958185612007565b90506120a460a0830184611f53565b979650505050505050565b6120b881611c2e565b82525050565b600082825260208201905092915050565b60006120da82611fa7565b6120e481856120be565b93506120f4818560208601611fc3565b6120fd81611ff6565b840191505092915050565b600060c08301600083015161212060008601826120af565b50602083015161213360208601826120af565b5060408301516121466040860182611dc0565b506060830151848203606086015261215e82826120cf565b9150506080830151848203608086015261217882826120cf565b91505060a083015161218d60a0860182611dc0565b508091505092915050565b600060208201905081810360008301526121b28184612108565b905092915050565b6020820160008201516121d06000850182611ae1565b50505050565b60006020820190506121eb60008301846121ba565b92915050565b600060a0828403121561220757612206611ca0565b5b81905092915050565b600060a0828403121561222657612225611a0c565b5b6000612234848285016121f1565b91505092915050565b6000806040838503121561225457612253611a0c565b5b600061226285828601611b86565b925050602061227385828601611bb2565b9150509250929050565b60a0820160008201516122936000850182611d3a565b5060208201516122a660208501826120af565b5060408201516122b960408501826120af565b5060608201516122cc6060850182611d3a565b5060808201516122df60808501826120af565b50505050565b600060a0820190506122fa600083018461227d565b92915050565b61230981611c2e565b811461231457600080fd5b50565b6000813561232481612300565b80915050919050565b60008160001b9050919050565b600063ffffffff61234a8461232d565b9350801983169250808416831791505092915050565b6000819050919050565b600061238561238061237b84611c2e565b612360565b611c2e565b9050919050565b6000819050919050565b61239f8261236a565b6123b26123ab8261238c565b835461233a565b8255505050565b60008160201b9050919050565b600067ffffffff000000006123da846123b9565b9350801983169250808416831791505092915050565b6123f98261236a565b61240c6124058261238c565b83546123c6565b8255505050565b6000813561242081611a48565b80915050919050565b60008160401b9050919050565b60007bffffffffffffffffffffffffffffffffffffffff000000000000000061245e84612429565b9350801983169250808416831791505092915050565b600061248f61248a61248584611a16565b612360565b611a16565b9050919050565b60006124a182612474565b9050919050565b60006124b382612496565b9050919050565b6000819050919050565b6124cd826124a8565b6124e06124d9826124ba565b8354612436565b8255505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612513576125126124e7565b5b80840192508235915067ffffffffffffffff821115612535576125346124ec565b5b602083019250600182023603831315612551576125506124f1565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125da57607f821691505b602082108114156125ee576125ed612593565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612619565b6126608683612619565b95508019841693508086168417925050509392505050565b600061269361268e61268984611ad7565b612360565b611ad7565b9050919050565b6000819050919050565b6126ad83612678565b6126c16126b98261269a565b848454612626565b825550505050565b600090565b6126d66126c9565b6126e18184846126a4565b505050565b5b81811015612705576126fa6000826126ce565b6001810190506126e7565b5050565b601f82111561274a5761271b816125f4565b61272484612609565b81016020851015612733578190505b61274761273f85612609565b8301826126e6565b50505b505050565b600082821c905092915050565b600061276d6000198460080261274f565b1980831691505092915050565b6000612786838361275c565b9150826002028217905092915050565b6127a08383612559565b67ffffffffffffffff8111156127b9576127b8612564565b5b6127c382546125c2565b6127ce828285612709565b6000601f8311600181146127fd57600084156127eb578287013590505b6127f5858261277a565b86555061285d565b601f19841661280b866125f4565b60005b828110156128335784890135825560018201915060208501945060208101905061280e565b86831015612850578489013561284c601f89168261275c565b8355505b6001600288020188555050505b50505050505050565b612871838383612796565b505050565b600073ffffffffffffffffffffffffffffffffffffffff6128968461232d565b9350801983169250808416831791505092915050565b6128b5826124a8565b6128c86128c1826124ba565b8354612876565b8255505050565b6000810160008301806128e181612317565b90506128ed8184612396565b50505060008101602083018061290281612317565b905061290e81846123f0565b50505060008101604083018061292381612413565b905061292f81846124c4565b505050600181016060830161294481856124f6565b61294f818386612866565b50505050600281016080830161296581856124f6565b612970818386612866565b505050506003810160a083018061298681612413565b905061299281846128ac565b5050505050565b6129a382826128cf565b5050565b6000813590506129b681612300565b92915050565b60006129cb60208401846129a7565b905092915050565b60006129e26020840184611a5f565b905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612a1657612a156129f4565b5b83810192508235915060208301925067ffffffffffffffff821115612a3e57612a3d6129ea565b5b600182023603841315612a5457612a536129ef565b5b509250929050565b82818337600083830152505050565b6000612a7783856120be565b9350612a84838584612a5c565b612a8d83611ff6565b840190509392505050565b600060c08301612aab60008401846129bc565b612ab860008601826120af565b50612ac660208401846129bc565b612ad360208601826120af565b50612ae160408401846129d3565b612aee6040860182611dc0565b50612afc60608401846129f9565b8583036060870152612b0f838284612a6b565b92505050612b2060808401846129f9565b8583036080870152612b33838284612a6b565b92505050612b4460a08401846129d3565b612b5160a0860182611dc0565b508091505092915050565b60006020820190508181036000830152612b768184612a98565b905092915050565b60008135612b8b81611e9b565b80915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612bc08461232d565b9350801983169250808416831791505092915050565b612bdf82612678565b612bf2612beb8261269a565b8354612b94565b8255505050565b600081016000830180612c0b81612b7e565b9050612c178184612bd6565b5050505050565b612c288282612bf9565b5050565b600081016000830180612c3f8184612c1e565b5050505050565b612c508282612c2c565b5050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612cb0602e83611fb2565b9150612cbb82612c54565b604082019050919050565b60006020820190508181036000830152612cdf81612ca3565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612d18612d13612d0e84612ce6565b612360565b612cf0565b9050919050565b612d2881612cfd565b82525050565b6000602082019050612d436000830184612d1f565b92915050565b60008135612d5681611b9b565b80915050919050565b600060ff612d6c8461232d565b9350801983169250808416831791505092915050565b6000612d8d82611aa1565b9050919050565b6000819050919050565b612da782612d82565b612dba612db382612d94565b8354612d5f565b8255505050565b60008160081b9050919050565b600064ffffffff00612ddf84612dc1565b9350801983169250808416831791505092915050565b612dfe8261236a565b612e11612e0a8261238c565b8354612dce565b8255505050565b60008160281b9050919050565b600068ffffffff0000000000612e3a84612e18565b9350801983169250808416831791505092915050565b612e598261236a565b612e6c612e658261238c565b8354612e25565b8255505050565b60008160481b9050919050565b600069ff000000000000000000612e9684612e73565b9350801983169250808416831791505092915050565b612eb582612d82565b612ec8612ec182612d94565b8354612e80565b8255505050565b60008160501b9050919050565b60006dffffffff00000000000000000000612ef684612ecf565b9350801983169250808416831791505092915050565b612f158261236a565b612f28612f218261238c565b8354612edc565b8255505050565b600081016000830180612f4181612d49565b9050612f4d8184612d9e565b505050600081016020830180612f6281612317565b9050612f6e8184612df5565b505050600081016040830180612f8381612317565b9050612f8f8184612e50565b505050600081016060830180612fa481612d49565b9050612fb08184612eac565b505050600081016080830180612fc581612317565b9050612fd18184612f0c565b5050505050565b612fe28282612f2f565b5050565b6000612ff56020840184611bb2565b905092915050565b60a0820161300e6000830183612fe6565b61301b6000850182611d3a565b5061302960208301836129bc565b61303660208501826120af565b5061304460408301836129bc565b61305160408501826120af565b5061305f6060830183612fe6565b61306c6060850182611d3a565b5061307a60808301836129bc565b61308760808501826120af565b50505050565b600060a0820190506130a26000830184612ffd565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613104602683611fb2565b915061310f826130a8565b604082019050919050565b60006020820190508181036000830152613133816130f7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613170602083611fb2565b915061317b8261313a565b602082019050919050565b6000602082019050818103600083015261319f81613163565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613202602b83611fb2565b915061320d826131a6565b604082019050919050565b60006020820190508181036000830152613231816131f5565b905091905056fea26469706673582212209837bd1cfc0638cd2bdd86876a5516c94fa7b674d02e135e9e7d55e86941d7cb64736f6c634300080a0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
