/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "chainName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "accountsContractAddress",
        type: "string",
      },
    ],
    name: "AccountsContractStorageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "GasFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "enum IRegistrar.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRegistrar.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "protocolTaxCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "routerAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "refundAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apGoldfinch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "allowedSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.CRVParams",
        name: "crvParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPGoldfinchParams",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_targetChain",
        type: "string",
      },
    ],
    name: "getAccountsContractAddressByChain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "getGasByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyApprovalState",
    outputs: [
      {
        internalType: "enum IRegistrar.StrategyApprovalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "enum IRegistrar.StrategyApprovalState",
            name: "approvalState",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "lockedRebalanceToLiquid",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "basis",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "allowedSlippage",
                type: "uint256",
              },
            ],
            internalType: "struct APGoldfinchConfigLib.CRVParams",
            name: "crvParams",
            type: "tuple",
          },
        ],
        internalType: "struct APGoldfinchConfigLib.APGoldfinchConfig",
        name: "_apGoldfinch",
        type: "tuple",
      },
    ],
    name: "setAPGoldfinchParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_chainName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_accountsContractAddress",
        type: "string",
      },
    ],
    name: "setAccountsContractAddressByChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "protocolTaxCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "routerAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "refundAddr",
            type: "address",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasFee",
        type: "uint256",
      },
    ],
    name: "setGasByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "lockedRebalanceToLiquid",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basis",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "enum IRegistrar.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "setStrategyApprovalState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "enum IRegistrar.StrategyApprovalState",
        name: "_approvalState",
        type: "uint8",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118ac806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637d251776116100c3578063bb3920021161007c578063bb392002146104d0578063c1492439146104e3578063c5ec133a146104f6578063e5bde0291461051c578063edbcc5991461053c578063f2fde38b1461063a57600080fd5b80637d2517761461030c5780638129fc1c1461031f5780638da5cb5b14610327578063afd44bcc14610342578063b7644fd914610379578063b8efa48e146103f457600080fd5b806342b8c5e91161011557806342b8c5e9146102715780634349597a146102915780634df988ae146102a45780636f2da657146102de578063715018a6146102f157806372b1df29146102f957600080fd5b80630560bd96146101525780630dcfe5fa14610193578063296b5cc8146101c65780632e360914146101db57806338f2e95c146101ee575b600080fd5b61017e61016036600461102f565b6001600160a01b03166000908152606b602052604090205460ff1690565b60405190151581526020015b60405180910390f35b60408051808201825260006020808301918252915281518083018352606d5481830181815290915291519182520161018a565b6101d96101d436600461107f565b61064d565b005b6101d96101e93660046110d7565b6107fc565b6065546102349060ff8082169163ffffffff6101008204811692650100000000008304821692600160481b810490911691600160501b8204811691600160701b90041686565b60408051961515875263ffffffff9586166020880152938516938601939093529015156060850152821660808401521660a082015260c00161018a565b61028461027f3660046110ef565b61084e565b60405161018a919061115c565b6101d961029f3660046111a9565b61095f565b6102d16102b23660046110ef565b6001600160e01b0319166000908152606a602052604090205460ff1690565b60405161018a91906111e2565b6101d96102ec3660046111f0565b6109c7565b6101d9610a1c565b6101d961030736600461121c565b610a30565b6101d961031a36600461122e565b610a43565b6101d9610a8a565b6033546040516001600160a01b03909116815260200161018a565b61036b61035036600461102f565b6001600160a01b03166000908152606c602052604090205490565b60405190815260200161018a565b6066546067546068546103b69263ffffffff808216936401000000008304909116926001600160a01b03600160401b909304831692918216911685565b6040805163ffffffff96871681529590941660208601526001600160a01b03928316938501939093528116606084015216608082015260a00161018a565b6104796040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506040805160a08101825260665463ffffffff808216835264010000000082041660208301526001600160a01b03600160401b90910481169282019290925260675482166060820152606854909116608082015290565b60408051825163ffffffff908116825260208085015190911690820152828201516001600160a01b03908116928201929092526060808401518316908201526080928301519091169181019190915260a00161018a565b6101d96104de366004611240565b610c58565b6101d96104f13660046112bc565b610cd5565b6040805160208101909152606d54815261050d9081565b6040519051815260200161018a565b61052f61052a366004611328565b610d75565b60405161018a919061136a565b6105da6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260655460ff8082161515835263ffffffff610100830481166020850152650100000000008304811694840194909452600160481b82041615156060830152600160501b810483166080830152600160701b900490911660a082015290565b60405161018a9190600060c082019050825115158252602083015163ffffffff80821660208501528060408601511660408501526060850151151560608501528060808601511660808501528060a08601511660a0850152505092915050565b6101d961064836600461102f565b610e33565b610655610ea9565b60408051808201825260008082526001600160a01b0386166020830152825180840190935290918060018152602001856001600160a01b0316815250905060405180606001604052808460038111156106b0576106b061110a565b8152602080820185905260409182018490526001600160e01b031989166000908152606a9091522081518154829060ff191660018360038111156106f6576106f661110a565b02179055506020820151805160018084018054909291839160ff19169083818111156107245761072461110a565b02179055506020919091015181546001600160a01b0390911661010002610100600160a81b031990911617905560408201518051600283018054909190829060ff19166001838181111561077a5761077a61110a565b0217905550602091909101518154610100600160a81b0319166101006001600160a01b039283160217909155604051878216935090881691506001600160e01b03198916907ffa06e62a5e92c6354ccefe5daec331c8025e54e73ab99084cc91cb5dca242f2a906107ec9088906111e2565b60405180910390a4505050505050565b610804610ea9565b80606561081182826113eb565b9050507f9ba2671e8e8451ccaa99b5ba3b232e5a1b174450f12aa494675d0941fa4c17f981604051610843919061150a565b60405180910390a150565b610856610fce565b6001600160e01b031982166000908152606a6020526040908190208151606081019092528054829060ff1660038111156108925761089261110a565b60038111156108a3576108a361110a565b815260408051808201909152600183810180546020909401939091839160ff16908111156108d3576108d361110a565b60018111156108e4576108e461110a565b8152905461010090046001600160a01b0316602091820152908252604080518082019091526002840180549390920192909190829060ff16600181111561092d5761092d61110a565b600181111561093e5761093e61110a565b8152905461010090046001600160a01b031660209091015290525092915050565b610967610ea9565b6001600160a01b0382166000818152606b6020908152604091829020805460ff191685151590811790915591519182527f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d91015b60405180910390a25050565b6109cf610ea9565b6001600160a01b0382166000818152606c602052604090819020839055517f0fc88453320e48dee70566020e32b04f9c148fdf565be3b7d7d9c2838a06d733906109bb9084815260200190565b610a24610ea9565b610a2e6000610f03565b565b80606d610a3e828290359055565b505050565b610a4b610ea9565b806066610a5882826115c9565b9050507f386dbf58efc832f07658bc89d0b1552d3a11a7cc20e3953cf7bd8796ccc1f89681604051610843919061168b565b600054610100900460ff1615808015610aaa5750600054600160ff909116105b80610ac45750303b158015610ac4575060005460ff166001145b610b2c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610b4f576000805461ff0019166101001790555b610b57610f55565b6040805160c0810182526000808252604b60208084019190915260148385015260608084018390526080808501849052606460a0958601819052606580546e640000000000000000140000004b0071ffffffffffffffffffffffffffffffffffff19909116179055865195860187526002865292850192909252938301829052928201819052910152606680546001600160e01b031916646400000002179055606780546001600160a01b03199081169091556068805490911690558015610c55576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610843565b50565b610c60610ea9565b6001600160e01b031982166000908152606a60205260409020805482919060ff19166001836003811115610c9657610c9661110a565b0217905550816001600160e01b0319167fc29dfab8aee1ae5a857c884f518353e5f8a0d8e0649c8708f6b21bc92f4209ca826040516109bb91906111e2565b610cdd610ea9565b8181606960008787604051610cf392919061170d565b604051809103902081526020019081526020016000209182610d169291906117b5565b508181604051610d2792919061170d565b60405180910390208484604051610d3f92919061170d565b604051908190038120907fbe341763477f316002d91bd656ce6600451213c169ee5883903f4f60426ff6df90600090a350505050565b6060606960008484604051610d8b92919061170d565b604051809103902081526020019081526020016000208054610dac90611733565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd890611733565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b505050505090505b92915050565b610e3b610ea9565b6001600160a01b038116610ea05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b23565b610c5581610f03565b6033546001600160a01b03163314610a2e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b23565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610fc05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b23565b610a2e33610f03565b905290565b60408051606081019091528060008152602001610ffb604080518082019091526000808252602082015290565b8152602001610fc9604080518082019091526000808252602082015290565b6001600160a01b0381168114610c5557600080fd5b60006020828403121561104157600080fd5b813561104c8161101a565b9392505050565b80356001600160e01b03198116811461106b57600080fd5b919050565b80356004811061106b57600080fd5b6000806000806080858703121561109557600080fd5b61109e85611053565b935060208501356110ae8161101a565b925060408501356110be8161101a565b91506110cc60608601611070565b905092959194509250565b600060c082840312156110e957600080fd5b50919050565b60006020828403121561110157600080fd5b61104c82611053565b634e487b7160e01b600052602160045260246000fd5b600481106111305761113061110a565b9052565b8051600281106111465761114661110a565b82526020908101516001600160a01b0316910152565b600060a08201905061116f828451611120565b60208301516111816020840182611134565b5060408301516111946060840182611134565b5092915050565b8015158114610c5557600080fd5b600080604083850312156111bc57600080fd5b82356111c78161101a565b915060208301356111d78161119b565b809150509250929050565b60208101610e2d8284611120565b6000806040838503121561120357600080fd5b823561120e8161101a565b946020939093013593505050565b6000602082840312156110e957600080fd5b600060a082840312156110e957600080fd5b6000806040838503121561125357600080fd5b61125c83611053565b915061126a60208401611070565b90509250929050565b60008083601f84011261128557600080fd5b50813567ffffffffffffffff81111561129d57600080fd5b6020830191508360208285010111156112b557600080fd5b9250929050565b600080600080604085870312156112d257600080fd5b843567ffffffffffffffff808211156112ea57600080fd5b6112f688838901611273565b9096509450602087013591508082111561130f57600080fd5b5061131c87828801611273565b95989497509550505050565b6000806020838503121561133b57600080fd5b823567ffffffffffffffff81111561135257600080fd5b61135e85828601611273565b90969095509350505050565b600060208083528351808285015260005b818110156113975785810183015185820160400152820161137b565b818111156113a9576000604083870101525b50601f01601f1916929092016040019392505050565b60008135610e2d8161119b565b63ffffffff81168114610c5557600080fd5b60008135610e2d816113cc565b81356113f68161119b565b815460ff19811691151560ff1691821783556020840135611416816113cc565b64ffffffff008160081b169050808364ffffffffff198416171784556040850135611440816113cc565b68ffffffff00000000008160281b168468ffffffffffffffffff198516178317178555505050506114a0611476606084016113bf565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b6114d36114af608084016113de565b82805463ffffffff60501b191660509290921b63ffffffff60501b16919091179055565b6115066114e260a084016113de565b82805463ffffffff60701b191660709290921b63ffffffff60701b16919091179055565b5050565b60c0810182356115198161119b565b15158252602083013561152b816113cc565b63ffffffff9081166020840152604084013590611547826113cc565b908116604084015260608401359061155e8261119b565b9015156060840152608084013590611575826113cc565b908116608084015260a08401359061158c826113cc565b80821660a0850152505092915050565b60008135610e2d8161101a565b80546001600160a01b0319166001600160a01b0392909216919091179055565b81356115d4816113cc565b63ffffffff8116905081548163ffffffff19821617835560208401356115f9816113cc565b67ffffffff000000008160201b169050808367ffffffffffffffff1984161717845560408501356116298161101a565b6001600160e01b0319929092169092179190911760409190911b68010000000000000000600160e01b031617815560608201356116658161101a565b61167281600184016115a9565b506115066116826080840161159c565b600283016115a9565b60a08101823561169a816113cc565b63ffffffff90811683526020840135906116b3826113cc565b16602083015260408301356116c78161101a565b6001600160a01b0390811660408401526060840135906116e68261101a565b90811660608401526080840135906116fd8261101a565b8082166080850152505092915050565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061174757607f821691505b6020821081036110e957634e487b7160e01b600052602260045260246000fd5b601f821115610a3e57600081815260208120601f850160051c8101602086101561178e5750805b601f850160051c820191505b818110156117ad5782815560010161179a565b505050505050565b67ffffffffffffffff8311156117cd576117cd61171d565b6117e1836117db8354611733565b83611767565b6000601f84116001811461181557600085156117fd5750838201355b600019600387901b1c1916600186901b17835561186f565b600083815260209020601f19861690835b828110156118465786850135825560209485019460019092019101611826565b50868210156118635760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122042d177b41d025728fc46ee2aedfee7386fc3f10a4297ec1030bc7d8f32d6881e64736f6c634300080f0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
