/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registrar, RegistrarInterface } from "../../contracts/Registrar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "newAngelProtocolParams",
        type: "tuple",
      },
    ],
    name: "AngelProtocolParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lockedRebalanceToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.RebalanceParams",
        name: "newRebalanceParams",
        type: "tuple",
      },
    ],
    name: "RebalanceParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "min",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "max",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nominal",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IRegistrar.SplitDetails",
        name: "newSplitDetails",
        type: "tuple",
      },
    ],
    name: "SplitDetailsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "StrategyParamsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAccepted",
        type: "bool",
      },
    ],
    name: "TokenAcceptanceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "angelProtocolParams",
    outputs: [
      {
        internalType: "uint32",
        name: "protocolTaxRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "protocolTaxBasis",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "primaryChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "primaryChainRouter",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAngelProtocolParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRebalanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lockedRebalanceToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSplitDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "min",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "max",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nominal",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.SplitDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "getStrategyParamsById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isApproved",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IVault.VaultType",
                name: "Type",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "vaultAddr",
                type: "address",
              },
            ],
            internalType: "struct IRegistrar.VaultParams",
            name: "Liquid",
            type: "tuple",
          },
        ],
        internalType: "struct IRegistrar.StrategyParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
    ],
    name: "isStrategyApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
    ],
    name: "isTokenAccepted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceParams",
    outputs: [
      {
        internalType: "bool",
        name: "rebalanceLiquidProfits",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "lockedRebalanceToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "interestDistribution",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "lockedPrincipleToLiquid",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "principleDistribution",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "protocolTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolTaxBasis",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "primaryChain",
            type: "string",
          },
          {
            internalType: "string",
            name: "primaryChainRouter",
            type: "string",
          },
        ],
        internalType: "struct IRegistrar.AngelProtocolParams",
        name: "_angelProtocolParams",
        type: "tuple",
      },
    ],
    name: "setAngelProtocolParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "rebalanceLiquidProfits",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lockedRebalanceToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "interestDistribution",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "lockedPrincipleToLiquid",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "principleDistribution",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.RebalanceParams",
        name: "_rebalanceParams",
        type: "tuple",
      },
    ],
    name: "setRebalanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "min",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "max",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nominal",
            type: "uint32",
          },
        ],
        internalType: "struct IRegistrar.SplitDetails",
        name: "_splitDetails",
        type: "tuple",
      },
    ],
    name: "setSplitDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_strategyId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_liqAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lockAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "setStrategyParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAccepted",
        type: "bool",
      },
    ],
    name: "setTokenAccepted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitDetails",
    outputs: [
      {
        internalType: "uint32",
        name: "min",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "max",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "nominal",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612e47806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638129fc1c116100ad578063b8efa48e11610071578063b8efa48e146102c5578063d1adbcfb146102e3578063da81f13d14610313578063edbcc5991461032f578063f2fde38b1461034d57610121565b80638129fc1c146102405780638462b0d41461024a5780638da5cb5b14610266578063a804700014610284578063b7644fd9146102a457610121565b80633dd1ae59116100f45780633dd1ae59146101b057806342b8c5e9146101ce5780634349597a146101fe578063715018a61461021a57806376e4dcd01461022457610121565b80630560bd96146101265780631076d63314610156578063379fbf901461017257806338f2e95c1461018e575b600080fd5b610140600480360381019061013b9190611880565b610369565b60405161014d91906118c8565b60405180910390f35b610170600480360381019061016b9190611907565b6103bf565b005b61018c600480360381019061018791906119b8565b610413565b005b6101966106c0565b6040516101a7959493929190611a3e565b60405180910390f35b6101b861072b565b6040516101c59190611ae2565b60405180910390f35b6101e860048036038101906101e39190611afd565b6107b7565b6040516101f59190611c30565b60405180910390f35b61021860048036038101906102139190611c4b565b610987565b005b610222610a38565b005b61023e60048036038101906102399190611caa565b610a4c565b005b610248610aa0565b005b610264600480360381019061025f9190611d12565b610e79565b005b61026e610ecd565b60405161027b9190611d4e565b60405180910390f35b61028c610ef7565b60405161029b93929190611d69565b60405180910390f35b6102ac610f3f565b6040516102bc9493929190611e39565b60405180910390f35b6102cd61108d565b6040516102da9190611f40565b60405180910390f35b6102fd60048036038101906102f89190611afd565b611217565b60405161030a91906118c8565b60405180910390f35b61032d60048036038101906103289190611f62565b611282565b005b610337611351565b604051610344919061200a565b60405180910390f35b61036760048036038101906103629190611880565b611408565b005b6000606b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6103c761148c565b80606681816103d691906121fd565b9050507fe2257b29ea3a7a4a7f941a9e80e9f836bbac03141cd88cf7c8715cca1e0902eb816040516104089190612291565b60405180910390a150565b61041b61148c565b6000604051806040016040528060018081111561043b5761043a611b39565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff168152509050600060405180604001604052806000600181111561047d5761047c611b39565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff1681525090506040518060600160405280841515815260200183815260200182815250606a6000887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010160008201518160000160006101000a81548160ff021916908360018111156105605761055f611b39565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060408201518160020160008201518160000160006101000a81548160ff021916908360018111156105e2576105e1611b39565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f9f93cfe264ca25e4e50c4be14c5d2aa2127eebae6c3312d17b27343fc29800b0866040516106b091906118c8565b60405180910390a4505050505050565b60658060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060000160029054906101000a900463ffffffff16908060000160069054906101000a900460ff16908060000160079054906101000a900463ffffffff16905085565b61073361165c565b60666040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905090565b6107bf61168f565b606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182016040518060400160405290816000820160009054906101000a900460ff16600181111561086b5761086a611b39565b5b600181111561087d5761087c611b39565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001600282016040518060400160405290816000820160009054906101000a900460ff1660018111156109105761090f611b39565b5b600181111561092257610921611b39565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815250509050919050565b61098f61148c565b80606b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f1527477b814a609b77a3a52f49fae682370acb615a0212d9e5229186cd66e94d82604051610a2c91906118c8565b60405180910390a25050565b610a4061148c565b610a4a600061150a565b565b610a5461148c565b8060678181610a6391906126cd565b9050507f2c52e61f0323f0b992be12965d79d7019f4f86f82e9073871ff8087d9772116c81604051610a959190612817565b60405180910390a150565b60008060019054906101000a900460ff16159050808015610ad15750600160008054906101000a900460ff1660ff16105b80610afe5750610ae0306115d0565b158015610afd5750600160008054906101000a900460ff1660ff16145b5b610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906128ab565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610b7a576001600060016101000a81548160ff0219169083151502179055505b610b826115f3565b6040518060a00160405280600015158152602001600015158152602001601463ffffffff168152602001600015158152602001600063ffffffff16815250606560008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160066101000a81548160ff02191690831515021790555060808201518160000160076101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060600160405280600063ffffffff168152602001606463ffffffff168152602001603263ffffffff16815250606660008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548163ffffffff021916908363ffffffff1602179055509050506040518060800160405280600263ffffffff168152602001606463ffffffff1681526020016040518060400160405280600781526020017f506f6c79676f6e00000000000000000000000000000000000000000000000000815250815260200160405180602001604052806000815250815250606760008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff1602179055506040820151816001019080519060200190610dfc9291906116be565b506060820151816002019080519060200190610e199291906116be565b509050508015610e765760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610e6d9190612913565b60405180910390a15b50565b610e8161148c565b8060658181610e909190612bb1565b9050507f90cf76571c6a5d1e5b0dd7df5f228688185abe4a754bb4d1c74ceaa5551afee881604051610ec29190612c66565b60405180910390a150565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60668060000160009054906101000a900463ffffffff16908060000160049054906101000a900463ffffffff16908060000160089054906101000a900463ffffffff16905083565b60678060000160009054906101000a900463ffffffff16908060000160049054906101000a900463ffffffff1690806001018054610f7c90612387565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa890612387565b8015610ff55780601f10610fca57610100808354040283529160200191610ff5565b820191906000526020600020905b815481529060010190602001808311610fd857829003601f168201915b50505050509080600201805461100a90612387565b80601f016020809104026020016040519081016040528092919081815260200182805461103690612387565b80156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050905084565b611095611744565b60676040518060800160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820180546110fe90612387565b80601f016020809104026020016040519081016040528092919081815260200182805461112a90612387565b80156111775780601f1061114c57610100808354040283529160200191611177565b820191906000526020600020905b81548152906001019060200180831161115a57829003601f168201915b5050505050815260200160028201805461119090612387565b80601f01602080910402602001604051908101604052809291908181526020018280546111bc90612387565b80156112095780601f106111de57610100808354040283529160200191611209565b820191906000526020600020905b8154815290600101906020018083116111ec57829003601f168201915b505050505081525050905090565b6000606a6000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff169050919050565b61128a61148c565b80606a6000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2133e7740bf1bd950965acd26008d60b6e9ce17d07da0838c81536561c67717a8260405161134591906118c8565b60405180910390a25050565b611359611778565b60656040518060a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160069054906101000a900460ff161515151581526020016000820160079054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905090565b61141061148c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147790612cf3565b60405180910390fd5b6114898161150a565b50565b611494611654565b73ffffffffffffffffffffffffffffffffffffffff166114b2610ecd565b73ffffffffffffffffffffffffffffffffffffffff1614611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90612d5f565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163990612df1565b60405180910390fd5b61165261164d611654565b61150a565b565b600033905090565b6040518060600160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681525090565b60405180606001604052806000151581526020016116ab6117b9565b81526020016116b86117b9565b81525090565b8280546116ca90612387565b90600052602060002090601f0160209004810192826116ec5760008555611733565b82601f1061170557805160ff1916838001178555611733565b82800160010185558215611733579182015b82811115611732578251825591602001919060010190611717565b5b50905061174091906117fb565b5090565b6040518060800160405280600063ffffffff168152602001600063ffffffff16815260200160608152602001606081525090565b6040518060a00160405280600015158152602001600015158152602001600063ffffffff168152602001600015158152602001600063ffffffff1681525090565b6040518060400160405280600060018111156117d8576117d7611b39565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b808211156118145760008160009055506001016117fc565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061184d82611822565b9050919050565b61185d81611842565b811461186857600080fd5b50565b60008135905061187a81611854565b92915050565b60006020828403121561189657611895611818565b5b60006118a48482850161186b565b91505092915050565b60008115159050919050565b6118c2816118ad565b82525050565b60006020820190506118dd60008301846118b9565b92915050565b600080fd5b6000606082840312156118fe576118fd6118e3565b5b81905092915050565b60006060828403121561191d5761191c611818565b5b600061192b848285016118e8565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61196981611934565b811461197457600080fd5b50565b60008135905061198681611960565b92915050565b611995816118ad565b81146119a057600080fd5b50565b6000813590506119b28161198c565b92915050565b600080600080608085870312156119d2576119d1611818565b5b60006119e087828801611977565b94505060206119f18782880161186b565b9350506040611a028782880161186b565b9250506060611a13878288016119a3565b91505092959194509250565b600063ffffffff82169050919050565b611a3881611a1f565b82525050565b600060a082019050611a5360008301886118b9565b611a6060208301876118b9565b611a6d6040830186611a2f565b611a7a60608301856118b9565b611a876080830184611a2f565b9695505050505050565b611a9a81611a1f565b82525050565b606082016000820151611ab66000850182611a91565b506020820151611ac96020850182611a91565b506040820151611adc6040850182611a91565b50505050565b6000606082019050611af76000830184611aa0565b92915050565b600060208284031215611b1357611b12611818565b5b6000611b2184828501611977565b91505092915050565b611b33816118ad565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611b7957611b78611b39565b5b50565b6000819050611b8a82611b68565b919050565b6000611b9a82611b7c565b9050919050565b611baa81611b8f565b82525050565b611bb981611842565b82525050565b604082016000820151611bd56000850182611ba1565b506020820151611be86020850182611bb0565b50505050565b60a082016000820151611c046000850182611b2a565b506020820151611c176020850182611bbf565b506040820151611c2a6060850182611bbf565b50505050565b600060a082019050611c456000830184611bee565b92915050565b60008060408385031215611c6257611c61611818565b5b6000611c708582860161186b565b9250506020611c81858286016119a3565b9150509250929050565b600060808284031215611ca157611ca06118e3565b5b81905092915050565b600060208284031215611cc057611cbf611818565b5b600082013567ffffffffffffffff811115611cde57611cdd61181d565b5b611cea84828501611c8b565b91505092915050565b600060a08284031215611d0957611d086118e3565b5b81905092915050565b600060a08284031215611d2857611d27611818565b5b6000611d3684828501611cf3565b91505092915050565b611d4881611842565b82525050565b6000602082019050611d636000830184611d3f565b92915050565b6000606082019050611d7e6000830186611a2f565b611d8b6020830185611a2f565b611d986040830184611a2f565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dda578082015181840152602081019050611dbf565b83811115611de9576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e0b82611da0565b611e158185611dab565b9350611e25818560208601611dbc565b611e2e81611def565b840191505092915050565b6000608082019050611e4e6000830187611a2f565b611e5b6020830186611a2f565b8181036040830152611e6d8185611e00565b90508181036060830152611e818184611e00565b905095945050505050565b600082825260208201905092915050565b6000611ea882611da0565b611eb28185611e8c565b9350611ec2818560208601611dbc565b611ecb81611def565b840191505092915050565b6000608083016000830151611eee6000860182611a91565b506020830151611f016020860182611a91565b5060408301518482036040860152611f198282611e9d565b91505060608301518482036060860152611f338282611e9d565b9150508091505092915050565b60006020820190508181036000830152611f5a8184611ed6565b905092915050565b60008060408385031215611f7957611f78611818565b5b6000611f8785828601611977565b9250506020611f98858286016119a3565b9150509250929050565b60a082016000820151611fb86000850182611b2a565b506020820151611fcb6020850182611b2a565b506040820151611fde6040850182611a91565b506060820151611ff16060850182611b2a565b5060808201516120046080850182611a91565b50505050565b600060a08201905061201f6000830184611fa2565b92915050565b61202e81611a1f565b811461203957600080fd5b50565b6000813561204981612025565b80915050919050565b60008160001b9050919050565b600063ffffffff61206f84612052565b9350801983169250808416831791505092915050565b6000819050919050565b60006120aa6120a56120a084611a1f565b612085565b611a1f565b9050919050565b6000819050919050565b6120c48261208f565b6120d76120d0826120b1565b835461205f565b8255505050565b60008160201b9050919050565b600067ffffffff000000006120ff846120de565b9350801983169250808416831791505092915050565b61211e8261208f565b61213161212a826120b1565b83546120eb565b8255505050565b60008160401b9050919050565b60006bffffffff000000000000000061215d84612138565b9350801983169250808416831791505092915050565b61217c8261208f565b61218f612188826120b1565b8354612145565b8255505050565b6000810160008301806121a88161203c565b90506121b481846120bb565b5050506000810160208301806121c98161203c565b90506121d58184612115565b5050506000810160408301806121ea8161203c565b90506121f68184612173565b5050505050565b6122078282612196565b5050565b60008135905061221a81612025565b92915050565b600061222f602084018461220b565b905092915050565b606082016122486000830183612220565b6122556000850182611a91565b506122636020830183612220565b6122706020850182611a91565b5061227e6040830183612220565b61228b6040850182611a91565b50505050565b60006060820190506122a66000830184612237565b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126122d8576122d76122ac565b5b80840192508235915067ffffffffffffffff8211156122fa576122f96122b1565b5b602083019250600182023603831315612316576123156122b6565b5b509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061239f57607f821691505b602082108114156123b3576123b2612358565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261241b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123de565b61242586836123de565b95508019841693508086168417925050509392505050565b6000819050919050565b600061246261245d6124588461243d565b612085565b61243d565b9050919050565b6000819050919050565b61247c83612447565b61249061248882612469565b8484546123eb565b825550505050565b600090565b6124a5612498565b6124b0818484612473565b505050565b5b818110156124d4576124c960008261249d565b6001810190506124b6565b5050565b601f821115612519576124ea816123b9565b6124f3846123ce565b81016020851015612502578190505b61251661250e856123ce565b8301826124b5565b50505b505050565b600082821c905092915050565b600061253c6000198460080261251e565b1980831691505092915050565b6000612555838361252b565b9150826002028217905092915050565b61256f838361231e565b67ffffffffffffffff81111561258857612587612329565b5b6125928254612387565b61259d8282856124d8565b6000601f8311600181146125cc57600084156125ba578287013590505b6125c48582612549565b86555061262c565b601f1984166125da866123b9565b60005b82811015612602578489013582556001820191506020850194506020810190506125dd565b8683101561261f578489013561261b601f89168261252b565b8355505b6001600288020188555050505b50505050505050565b612640838383612565565b505050565b6000810160008301806126578161203c565b905061266381846120bb565b5050506000810160208301806126788161203c565b90506126848184612115565b505050600181016040830161269981856122bb565b6126a4818386612635565b5050505060028101606083016126ba81856122bb565b6126c5818386612635565b505050505050565b6126d78282612645565b5050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612707576127066126e5565b5b83810192508235915060208301925067ffffffffffffffff82111561272f5761272e6126db565b5b600182023603841315612745576127446126e0565b5b509250929050565b82818337600083830152505050565b60006127688385611e8c565b935061277583858461274d565b61277e83611def565b840190509392505050565b60006080830161279c6000840184612220565b6127a96000860182611a91565b506127b76020840184612220565b6127c46020860182611a91565b506127d260408401846126ea565b85830360408701526127e583828461275c565b925050506127f660608401846126ea565b858303606087015261280983828461275c565b925050508091505092915050565b600060208201905081810360008301526128318184612789565b905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612895602e83611dab565b91506128a082612839565b604082019050919050565b600060208201905081810360008301526128c481612888565b9050919050565b6000819050919050565b600060ff82169050919050565b60006128fd6128f86128f3846128cb565b612085565b6128d5565b9050919050565b61290d816128e2565b82525050565b60006020820190506129286000830184612904565b92915050565b6000813561293b8161198c565b80915050919050565b600060ff61295184612052565b9350801983169250808416831791505092915050565b6000612972826118ad565b9050919050565b6000819050919050565b61298c82612967565b61299f61299882612979565b8354612944565b8255505050565b60008160081b9050919050565b600061ff006129c1846129a6565b9350801983169250808416831791505092915050565b6129e082612967565b6129f36129ec82612979565b83546129b3565b8255505050565b60008160101b9050919050565b600065ffffffff0000612a19846129fa565b9350801983169250808416831791505092915050565b612a388261208f565b612a4b612a44826120b1565b8354612a07565b8255505050565b60008160301b9050919050565b600066ff000000000000612a7284612a52565b9350801983169250808416831791505092915050565b612a9182612967565b612aa4612a9d82612979565b8354612a5f565b8255505050565b60008160381b9050919050565b60006affffffff00000000000000612acf84612aab565b9350801983169250808416831791505092915050565b612aee8261208f565b612b01612afa826120b1565b8354612ab8565b8255505050565b600081016000830180612b1a8161292e565b9050612b268184612983565b505050600081016020830180612b3b8161292e565b9050612b4781846129d7565b505050600081016040830180612b5c8161203c565b9050612b688184612a2f565b505050600081016060830180612b7d8161292e565b9050612b898184612a88565b505050600081016080830180612b9e8161203c565b9050612baa8184612ae5565b5050505050565b612bbb8282612b08565b5050565b6000612bce60208401846119a3565b905092915050565b60a08201612be76000830183612bbf565b612bf46000850182611b2a565b50612c026020830183612bbf565b612c0f6020850182611b2a565b50612c1d6040830183612220565b612c2a6040850182611a91565b50612c386060830183612bbf565b612c456060850182611b2a565b50612c536080830183612220565b612c606080850182611a91565b50505050565b600060a082019050612c7b6000830184612bd6565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612cdd602683611dab565b9150612ce882612c81565b604082019050919050565b60006020820190508181036000830152612d0c81612cd0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612d49602083611dab565b9150612d5482612d13565b602082019050919050565b60006020820190508181036000830152612d7881612d3c565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612ddb602b83611dab565b9150612de682612d7f565b604082019050919050565b60006020820190508181036000830152612e0a81612dce565b905091905056fea26469706673582212205710f16d66a09ef651b22b145618a74c72bea69d880e9e668126fba2dcacfac564736f6c634300080a0033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
