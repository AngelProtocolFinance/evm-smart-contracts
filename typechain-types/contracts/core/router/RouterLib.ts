/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace IRouter {
  export type VaultActionDataStruct = {
    destinationChain: PromiseOrValue<string>;
    strategyId: PromiseOrValue<BytesLike>;
    selector: PromiseOrValue<BytesLike>;
    accountIds: PromiseOrValue<BigNumberish>[];
    token: PromiseOrValue<string>;
    lockAmt: PromiseOrValue<BigNumberish>;
    liqAmt: PromiseOrValue<BigNumberish>;
    status: PromiseOrValue<BigNumberish>;
  };

  export type VaultActionDataStructOutput = [
    string,
    string,
    string,
    number[],
    string,
    BigNumber,
    BigNumber,
    number
  ] & {
    destinationChain: string;
    strategyId: string;
    selector: string;
    accountIds: number[];
    token: string;
    lockAmt: BigNumber;
    liqAmt: BigNumber;
    status: number;
  };
}

export interface RouterLibInterface extends utils.Interface {
  functions: {
    "packCallData((string,bytes4,bytes4,uint32[],address,uint256,uint256,uint8))": FunctionFragment;
    "unpackCalldata(bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "packCallData" | "unpackCalldata"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "packCallData",
    values: [IRouter.VaultActionDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "unpackCalldata",
    values: [PromiseOrValue<BytesLike>]
  ): string;

  decodeFunctionResult(
    functionFragment: "packCallData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unpackCalldata",
    data: BytesLike
  ): Result;

  events: {};
}

export interface RouterLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: RouterLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    packCallData(
      _calldata: IRouter.VaultActionDataStruct,
      overrides?: CallOverrides
    ): Promise<[string]>;

    unpackCalldata(
      _calldata: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[IRouter.VaultActionDataStructOutput]>;
  };

  packCallData(
    _calldata: IRouter.VaultActionDataStruct,
    overrides?: CallOverrides
  ): Promise<string>;

  unpackCalldata(
    _calldata: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<IRouter.VaultActionDataStructOutput>;

  callStatic: {
    packCallData(
      _calldata: IRouter.VaultActionDataStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    unpackCalldata(
      _calldata: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<IRouter.VaultActionDataStructOutput>;
  };

  filters: {};

  estimateGas: {
    packCallData(
      _calldata: IRouter.VaultActionDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unpackCalldata(
      _calldata: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    packCallData(
      _calldata: IRouter.VaultActionDataStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unpackCalldata(
      _calldata: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
